{
  "application": {
    "description": "",
    "properties": {
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "name": {
        "description": "The name of the application.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "application"
        ],
        "type": "string"
      }
    },
    "required": [
      "id",
      "object"
    ],
    "title": "Application",
    "type": "object",
    "x-expandableFields": []
  },
  "external_account": [
    {
      "description": "These bank accounts are payment methods on `Customer` objects.\n\nOn the other hand [External Accounts](https://stripe.com/docs/api#external_accounts) are transfer\ndestinations on `Account` objects for [Custom accounts](https://stripe.com/docs/connect/custom-accounts).\nThey can be bank accounts or debit cards as well, and are documented in the links above.\n\nRelated guide: [Bank Debits and Transfers](https://stripe.com/docs/payments/bank-debits-transfers).",
      "properties": {
        "account": {
          "anyOf": [
            {
              "maxLength": 5000,
              "type": "string"
            },
            {
              "$ref": "#/components/schemas/account"
            }
          ],
          "description": "The ID of the account that the bank account is associated with.",
          "nullable": true,
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/account"
              }
            ]
          }
        },
        "account_holder_name": {
          "description": "The name of the person or business that owns the bank account.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "account_holder_type": {
          "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "account_type": {
          "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "available_payout_methods": {
          "description": "A set of available payout methods for this bank account. Only values from this set should be passed as the `method` when creating a payout.",
          "items": {
            "enum": [
              "instant",
              "standard"
            ],
            "type": "string"
          },
          "nullable": true,
          "type": "array"
        },
        "bank_name": {
          "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "country": {
          "description": "Two-letter ISO code representing the country the bank account is located in.",
          "maxLength": 5000,
          "type": "string"
        },
        "currency": {
          "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
          "type": "string"
        },
        "customer": {
          "anyOf": [
            {
              "maxLength": 5000,
              "type": "string"
            },
            {
              "$ref": "#/components/schemas/customer"
            },
            {
              "$ref": "#/components/schemas/deleted_customer"
            }
          ],
          "description": "The ID of the customer that the bank account is associated with.",
          "nullable": true,
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ]
          }
        },
        "default_for_currency": {
          "description": "Whether this bank account is the default external account for its currency.",
          "nullable": true,
          "type": "boolean"
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "last4": {
          "description": "The last four digits of the bank account number.",
          "maxLength": 5000,
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "nullable": true,
          "type": "object"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "bank_account"
          ],
          "type": "string"
        },
        "routing_number": {
          "description": "The routing transit number for the bank account.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "status": {
          "description": "For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Stripe can determine that the bank account exists, its status will be `validated`. Note that there often isnâ€™t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a transfer sent to this bank account fails, we'll set the status to `errored` and will not continue to send transfers until the bank details are updated.\n\nFor external accounts, possible values are `new` and `errored`. Validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
          "maxLength": 5000,
          "type": "string"
        }
      },
      "required": [
        "country",
        "currency",
        "id",
        "last4",
        "object",
        "status"
      ],
      "title": "BankAccount",
      "type": "object",
      "x-expandableFields": [
        "account",
        "customer"
      ],
      "x-resourceId": "bank_account"
    },
    {
      "description": "You can store multiple cards on a customer in order to charge the customer\nlater. You can also store multiple debit cards on a recipient in order to\ntransfer to those cards later.\n\nRelated guide: [Card Payments with Sources](https://stripe.com/docs/sources/cards).",
      "properties": {
        "account": {
          "anyOf": [
            {
              "maxLength": 5000,
              "type": "string"
            },
            {
              "$ref": "#/components/schemas/account"
            }
          ],
          "description": "The account this card belongs to. This attribute will not be in the card object if the card belongs to a customer or recipient instead.",
          "nullable": true,
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/account"
              }
            ]
          }
        },
        "address_city": {
          "description": "City/District/Suburb/Town/Village.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "address_country": {
          "description": "Billing address country, if provided when creating card.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "address_line1": {
          "description": "Address line 1 (Street address/PO Box/Company name).",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "address_line1_check": {
          "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "address_line2": {
          "description": "Address line 2 (Apartment/Suite/Unit/Building).",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "address_state": {
          "description": "State/County/Province/Region.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "address_zip": {
          "description": "ZIP or postal code.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "address_zip_check": {
          "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "available_payout_methods": {
          "description": "A set of available payout methods for this card. Only values from this set should be passed as the `method` when creating a payout.",
          "items": {
            "enum": [
              "instant",
              "standard"
            ],
            "type": "string"
          },
          "nullable": true,
          "type": "array"
        },
        "brand": {
          "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
          "maxLength": 5000,
          "type": "string"
        },
        "country": {
          "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "currency": {
          "description": "Three-letter [ISO code for currency](https://stripe.com/docs/payouts). Only applicable on accounts (not customers or recipients). The card can be used as a transfer destination for funds in this currency.",
          "nullable": true,
          "type": "string"
        },
        "customer": {
          "anyOf": [
            {
              "maxLength": 5000,
              "type": "string"
            },
            {
              "$ref": "#/components/schemas/customer"
            },
            {
              "$ref": "#/components/schemas/deleted_customer"
            }
          ],
          "description": "The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.",
          "nullable": true,
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ]
          }
        },
        "cvc_check": {
          "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. A result of unchecked indicates that CVC was provided but hasn't been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https://support.stripe.com/questions/check-if-a-card-is-valid-without-a-charge).",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "default_for_currency": {
          "description": "Whether this card is the default external account for its currency.",
          "nullable": true,
          "type": "boolean"
        },
        "dynamic_last4": {
          "description": "(For tokenized numbers only.) The last four digits of the device account number.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "exp_month": {
          "description": "Two-digit number representing the card's expiration month.",
          "type": "integer"
        },
        "exp_year": {
          "description": "Four-digit number representing the card's expiration year.",
          "type": "integer"
        },
        "fingerprint": {
          "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers whoâ€™ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "funding": {
          "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
          "maxLength": 5000,
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the object.",
          "maxLength": 5000,
          "type": "string"
        },
        "last4": {
          "description": "The last four digits of the card.",
          "maxLength": 5000,
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "maxLength": 500,
            "type": "string"
          },
          "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
          "nullable": true,
          "type": "object"
        },
        "name": {
          "description": "Cardholder name.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "object": {
          "description": "String representing the object's type. Objects of the same type share the same value.",
          "enum": [
            "card"
          ],
          "type": "string"
        },
        "recipient": {
          "anyOf": [
            {
              "maxLength": 5000,
              "type": "string"
            },
            {
              "$ref": "#/components/schemas/recipient"
            }
          ],
          "description": "The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.",
          "nullable": true,
          "x-expansionResources": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/recipient"
              }
            ]
          }
        },
        "status": {
          "description": "For external accounts, possible values are `new` and `errored`. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        },
        "tokenization_method": {
          "description": "If the card number is tokenized, this is the method that was used. Can be `android_pay` (includes Google Pay), `apple_pay`, `masterpass`, `visa_checkout`, or null.",
          "maxLength": 5000,
          "nullable": true,
          "type": "string"
        }
      },
      "required": [
        "brand",
        "exp_month",
        "exp_year",
        "funding",
        "id",
        "last4",
        "object"
      ],
      "title": "Card",
      "type": "object",
      "x-expandableFields": [
        "account",
        "customer",
        "recipient"
      ],
      "x-resourceId": "card"
    }
  ],
  "account": {
    "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current e-mail address or if the account is\nenabled yet to make live charges.\n\nSome properties, marked below, are available only to platforms that want to\n[create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts).",
    "properties": {
      "business_profile": [
        {
          "description": "",
          "properties": {
            "mcc": {
              "description": "[The merchant category code for the account](https://stripe.com/docs/connect/setting-mcc). MCCs are used to classify businesses based on the goods or services they provide.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "name": {
              "description": "The customer-facing business name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "product_description": {
              "description": "Internal-only description of the product sold or service provided by the business. It's used by Stripe for risk and underwriting purposes.",
              "maxLength": 40000,
              "nullable": true,
              "type": "string"
            },
            "support_address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "A publicly available mailing address for sending support issues to.",
              "nullable": true
            },
            "support_email": {
              "description": "A publicly available email address for sending support issues to.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "support_phone": {
              "description": "A publicly available phone number to call with support issues.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "support_url": {
              "description": "A publicly available website for handling support issues.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "url": {
              "description": "The business's publicly available website.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "AccountBusinessProfile",
          "type": "object",
          "x-expandableFields": [
            "support_address"
          ]
        }
      ],
      "business_type": {
        "description": "The business type.",
        "enum": [
          "company",
          "government_entity",
          "individual",
          "non_profit"
        ],
        "nullable": true,
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "capabilities": {
        "description": "",
        "properties": {
          "acss_debit_payments": {
            "description": "The status of the Canadian pre-authorized debits payments capability of the account, or whether the account can directly process Canadian pre-authorized debits charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "affirm_payments": {
            "description": "The status of the Affirm capability of the account, or whether the account can directly process Affirm charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "afterpay_clearpay_payments": {
            "description": "The status of the Afterpay Clearpay capability of the account, or whether the account can directly process Afterpay Clearpay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "au_becs_debit_payments": {
            "description": "The status of the BECS Direct Debit (AU) payments capability of the account, or whether the account can directly process BECS Direct Debit (AU) charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "bacs_debit_payments": {
            "description": "The status of the Bacs Direct Debits payments capability of the account, or whether the account can directly process Bacs Direct Debits charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "bancontact_payments": {
            "description": "The status of the Bancontact payments capability of the account, or whether the account can directly process Bancontact charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "bank_transfer_payments": {
            "description": "The status of the customer_balance payments capability of the account, or whether the account can directly process customer_balance charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "blik_payments": {
            "description": "The status of the blik payments capability of the account, or whether the account can directly process blik charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "boleto_payments": {
            "description": "The status of the boleto payments capability of the account, or whether the account can directly process boleto charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "card_issuing": {
            "description": "The status of the card issuing capability of the account, or whether you can use Issuing to distribute funds on cards",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "card_payments": {
            "description": "The status of the card payments capability of the account, or whether the account can directly process credit and debit card charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "cartes_bancaires_payments": {
            "description": "The status of the Cartes Bancaires payments capability of the account, or whether the account can directly process Cartes Bancaires card charges in EUR currency.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "eps_payments": {
            "description": "The status of the EPS payments capability of the account, or whether the account can directly process EPS charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "fpx_payments": {
            "description": "The status of the FPX payments capability of the account, or whether the account can directly process FPX charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "giropay_payments": {
            "description": "The status of the giropay payments capability of the account, or whether the account can directly process giropay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "grabpay_payments": {
            "description": "The status of the GrabPay payments capability of the account, or whether the account can directly process GrabPay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "ideal_payments": {
            "description": "The status of the iDEAL payments capability of the account, or whether the account can directly process iDEAL charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "jcb_payments": {
            "description": "The status of the JCB payments capability of the account, or whether the account (Japan only) can directly process JCB credit card charges in JPY currency.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "klarna_payments": {
            "description": "The status of the Klarna payments capability of the account, or whether the account can directly process Klarna charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "konbini_payments": {
            "description": "The status of the konbini payments capability of the account, or whether the account can directly process konbini charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "legacy_payments": {
            "description": "The status of the legacy payments capability of the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "link_payments": {
            "description": "The status of the link_payments capability of the account, or whether the account can directly process Link charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "oxxo_payments": {
            "description": "The status of the OXXO payments capability of the account, or whether the account can directly process OXXO charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "p24_payments": {
            "description": "The status of the P24 payments capability of the account, or whether the account can directly process P24 charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "paynow_payments": {
            "description": "The status of the paynow payments capability of the account, or whether the account can directly process paynow charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "promptpay_payments": {
            "description": "The status of the promptpay payments capability of the account, or whether the account can directly process promptpay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "sepa_debit_payments": {
            "description": "The status of the SEPA Direct Debits payments capability of the account, or whether the account can directly process SEPA Direct Debits charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "sofort_payments": {
            "description": "The status of the Sofort payments capability of the account, or whether the account can directly process Sofort charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "tax_reporting_us_1099_k": {
            "description": "The status of the tax reporting 1099-K (US) capability of the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "tax_reporting_us_1099_misc": {
            "description": "The status of the tax reporting 1099-MISC (US) capability of the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "transfers": {
            "description": "The status of the transfers capability of the account, or whether your platform can transfer funds to the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "treasury": {
            "description": "The status of the banking capability, or whether the account can have bank accounts.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "us_bank_account_ach_payments": {
            "description": "The status of the US bank account ACH payments capability of the account, or whether the account can directly process US bank account charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          }
        },
        "title": "AccountCapabilities",
        "type": "object",
        "x-expandableFields": []
      },
      "charges_enabled": {
        "description": "Whether the account can create live charges.",
        "type": "boolean"
      },
      "company": {
        "description": "",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "address_kana": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "description": "The Kana variation of the company's primary address (Japan only).",
            "nullable": true
          },
          "address_kanji": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "description": "The Kanji variation of the company's primary address (Japan only).",
            "nullable": true
          },
          "directors_provided": {
            "description": "Whether the company's directors have been provided. This Boolean will be `true` if you've manually indicated that all directors are provided via [the `directors_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-directors_provided).",
            "type": "boolean"
          },
          "executives_provided": {
            "description": "Whether the company's executives have been provided. This Boolean will be `true` if you've manually indicated that all executives are provided via [the `executives_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-executives_provided), or if Stripe determined that sufficient executives were provided.",
            "type": "boolean"
          },
          "name": {
            "description": "The company's legal name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name_kana": {
            "description": "The Kana variation of the company's legal name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name_kanji": {
            "description": "The Kanji variation of the company's legal name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "owners_provided": {
            "description": "Whether the company's owners have been provided. This Boolean will be `true` if you've manually indicated that all owners are provided via [the `owners_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-owners_provided), or if Stripe determined that sufficient owners were provided. Stripe determines ownership requirements using both the number of owners provided and their total percent ownership (calculated by adding the `percent_ownership` of each owner together).",
            "type": "boolean"
          },
          "ownership_declaration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_ubo_declaration"
              }
            ],
            "description": "This hash is used to attest that the beneficial owner information provided to Stripe is both current and correct.",
            "nullable": true
          },
          "phone": {
            "description": "The company's phone number (used for verification).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "structure": {
            "description": "The category identifying the legal structure of the company or legal entity. See [Business structure](https://stripe.com/docs/connect/identity-verification#business-structure) for more details.",
            "enum": [
              "free_zone_establishment",
              "free_zone_llc",
              "government_instrumentality",
              "governmental_unit",
              "incorporated_non_profit",
              "limited_liability_partnership",
              "llc",
              "multi_member_llc",
              "private_company",
              "private_corporation",
              "private_partnership",
              "public_company",
              "public_corporation",
              "public_partnership",
              "single_member_llc",
              "sole_establishment",
              "sole_proprietorship",
              "tax_exempt_government_instrumentality",
              "unincorporated_association",
              "unincorporated_non_profit"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "tax_id_provided": {
            "description": "Whether the company's business ID number was provided.",
            "type": "boolean"
          },
          "tax_id_registrar": {
            "description": "The jurisdiction in which the `tax_id` is registered (Germany-based companies only).",
            "maxLength": 5000,
            "type": "string"
          },
          "vat_id_provided": {
            "description": "Whether the company's business VAT number was provided.",
            "type": "boolean"
          },
          "verification": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_company_verification"
              }
            ],
            "description": "Information on the verification state of the company.",
            "nullable": true
          }
        },
        "title": "LegalEntityCompany",
        "type": "object",
        "x-expandableFields": [
          "address",
          "address_kana",
          "address_kanji",
          "ownership_declaration",
          "verification"
        ]
      },
      "controller": {
        "description": "",
        "properties": {
          "is_controller": {
            "description": "`true` if the Connect application retrieving the resource controls the account and can therefore exercise [platform controls](https://stripe.com/docs/connect/platform-controls-for-standard-accounts). Otherwise, this field is null.",
            "type": "boolean"
          },
          "type": {
            "description": "The controller type. Can be `application`, if a Connect application controls the account, or `account`, if the account controls itself.",
            "enum": [
              "account",
              "application"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "AccountUnificationAccountController",
        "type": "object",
        "x-expandableFields": []
      },
      "country": {
        "description": "The account's country.",
        "maxLength": 5000,
        "type": "string"
      },
      "created": {
        "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "default_currency": {
        "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
        "maxLength": 5000,
        "type": "string"
      },
      "details_submitted": {
        "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
        "type": "boolean"
      },
      "email": {
        "description": "An email address associated with the account. You can treat this as metadata: it is not used for authentication or messaging account holders.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "external_accounts": {
        "description": "External accounts (bank accounts and debit cards) currently attached to this account",
        "properties": {
          "data": {
            "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
            "items": [
              {
                "description": "These bank accounts are payment methods on `Customer` objects.\n\nOn the other hand [External Accounts](https://stripe.com/docs/api#external_accounts) are transfer\ndestinations on `Account` objects for [Custom accounts](https://stripe.com/docs/connect/custom-accounts).\nThey can be bank accounts or debit cards as well, and are documented in the links above.\n\nRelated guide: [Bank Debits and Transfers](https://stripe.com/docs/payments/bank-debits-transfers).",
                "properties": {
                  "account": {
                    "anyOf": [
                      {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/account"
                      }
                    ],
                    "description": "The ID of the account that the bank account is associated with.",
                    "nullable": true,
                    "x-expansionResources": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/account"
                        }
                      ]
                    }
                  },
                  "account_holder_name": {
                    "description": "The name of the person or business that owns the bank account.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "account_holder_type": {
                    "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "account_type": {
                    "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "available_payout_methods": {
                    "description": "A set of available payout methods for this bank account. Only values from this set should be passed as the `method` when creating a payout.",
                    "items": {
                      "enum": [
                        "instant",
                        "standard"
                      ],
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "bank_name": {
                    "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "country": {
                    "description": "Two-letter ISO code representing the country the bank account is located in.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "currency": {
                    "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
                    "type": "string"
                  },
                  "customer": {
                    "anyOf": [
                      {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/customer"
                      },
                      {
                        "$ref": "#/components/schemas/deleted_customer"
                      }
                    ],
                    "description": "The ID of the customer that the bank account is associated with.",
                    "nullable": true,
                    "x-expansionResources": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/customer"
                        },
                        {
                          "$ref": "#/components/schemas/deleted_customer"
                        }
                      ]
                    }
                  },
                  "default_for_currency": {
                    "description": "Whether this bank account is the default external account for its currency.",
                    "nullable": true,
                    "type": "boolean"
                  },
                  "fingerprint": {
                    "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "id": {
                    "description": "Unique identifier for the object.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last4": {
                    "description": "The last four digits of the bank account number.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "maxLength": 500,
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "nullable": true,
                    "type": "object"
                  },
                  "object": {
                    "description": "String representing the object's type. Objects of the same type share the same value.",
                    "enum": [
                      "bank_account"
                    ],
                    "type": "string"
                  },
                  "routing_number": {
                    "description": "The routing transit number for the bank account.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "status": {
                    "description": "For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Stripe can determine that the bank account exists, its status will be `validated`. Note that there often isnâ€™t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a transfer sent to this bank account fails, we'll set the status to `errored` and will not continue to send transfers until the bank details are updated.\n\nFor external accounts, possible values are `new` and `errored`. Validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
                    "maxLength": 5000,
                    "type": "string"
                  }
                },
                "required": [
                  "country",
                  "currency",
                  "id",
                  "last4",
                  "object",
                  "status"
                ],
                "title": "BankAccount",
                "type": "object",
                "x-expandableFields": [
                  "account",
                  "customer"
                ],
                "x-resourceId": "bank_account"
              },
              {
                "description": "You can store multiple cards on a customer in order to charge the customer\nlater. You can also store multiple debit cards on a recipient in order to\ntransfer to those cards later.\n\nRelated guide: [Card Payments with Sources](https://stripe.com/docs/sources/cards).",
                "properties": {
                  "account": {
                    "anyOf": [
                      {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/account"
                      }
                    ],
                    "description": "The account this card belongs to. This attribute will not be in the card object if the card belongs to a customer or recipient instead.",
                    "nullable": true,
                    "x-expansionResources": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/account"
                        }
                      ]
                    }
                  },
                  "address_city": {
                    "description": "City/District/Suburb/Town/Village.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "address_country": {
                    "description": "Billing address country, if provided when creating card.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "address_line1": {
                    "description": "Address line 1 (Street address/PO Box/Company name).",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "address_line1_check": {
                    "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "address_line2": {
                    "description": "Address line 2 (Apartment/Suite/Unit/Building).",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "address_state": {
                    "description": "State/County/Province/Region.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "address_zip": {
                    "description": "ZIP or postal code.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "address_zip_check": {
                    "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "available_payout_methods": {
                    "description": "A set of available payout methods for this card. Only values from this set should be passed as the `method` when creating a payout.",
                    "items": {
                      "enum": [
                        "instant",
                        "standard"
                      ],
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "brand": {
                    "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "country": {
                    "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "currency": {
                    "description": "Three-letter [ISO code for currency](https://stripe.com/docs/payouts). Only applicable on accounts (not customers or recipients). The card can be used as a transfer destination for funds in this currency.",
                    "nullable": true,
                    "type": "string"
                  },
                  "customer": {
                    "anyOf": [
                      {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/customer"
                      },
                      {
                        "$ref": "#/components/schemas/deleted_customer"
                      }
                    ],
                    "description": "The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.",
                    "nullable": true,
                    "x-expansionResources": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/customer"
                        },
                        {
                          "$ref": "#/components/schemas/deleted_customer"
                        }
                      ]
                    }
                  },
                  "cvc_check": {
                    "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. A result of unchecked indicates that CVC was provided but hasn't been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https://support.stripe.com/questions/check-if-a-card-is-valid-without-a-charge).",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "default_for_currency": {
                    "description": "Whether this card is the default external account for its currency.",
                    "nullable": true,
                    "type": "boolean"
                  },
                  "dynamic_last4": {
                    "description": "(For tokenized numbers only.) The last four digits of the device account number.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "exp_month": {
                    "description": "Two-digit number representing the card's expiration month.",
                    "type": "integer"
                  },
                  "exp_year": {
                    "description": "Four-digit number representing the card's expiration year.",
                    "type": "integer"
                  },
                  "fingerprint": {
                    "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers whoâ€™ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "funding": {
                    "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "id": {
                    "description": "Unique identifier for the object.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last4": {
                    "description": "The last four digits of the card.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "maxLength": 500,
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "nullable": true,
                    "type": "object"
                  },
                  "name": {
                    "description": "Cardholder name.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "object": {
                    "description": "String representing the object's type. Objects of the same type share the same value.",
                    "enum": [
                      "card"
                    ],
                    "type": "string"
                  },
                  "recipient": {
                    "anyOf": [
                      {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/recipient"
                      }
                    ],
                    "description": "The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.",
                    "nullable": true,
                    "x-expansionResources": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/recipient"
                        }
                      ]
                    }
                  },
                  "status": {
                    "description": "For external accounts, possible values are `new` and `errored`. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "tokenization_method": {
                    "description": "If the card number is tokenized, this is the method that was used. Can be `android_pay` (includes Google Pay), `apple_pay`, `masterpass`, `visa_checkout`, or null.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  }
                },
                "required": [
                  "brand",
                  "exp_month",
                  "exp_year",
                  "funding",
                  "id",
                  "last4",
                  "object"
                ],
                "title": "Card",
                "type": "object",
                "x-expandableFields": [
                  "account",
                  "customer",
                  "recipient"
                ],
                "x-resourceId": "card"
              }
            ],
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "ExternalAccountList",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      },
      "future_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "current_deadline": {
            "description": "Date on which `future_requirements` merges with the main `requirements` hash and `future_requirements` becomes empty. After the transition, `currently_due` requirements may immediately become `past_due`, but the account may also be given a grace period depending on its enablement state prior to transitioning.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the account enabled. If not collected by `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "disabled_reason": {
            "description": "This is typed as a string for consistency with `requirements.disabled_reason`, but it safe to assume `future_requirements.disabled_reason` is empty because fields in `future_requirements` will never disable the account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "nullable": true,
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by `requirements.current_deadline`. These fields need to be collected to enable the capability on the account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "AccountFutureRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ]
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "individual": {
        "description": "This is an object representing a person associated with a Stripe account.\n\nA platform cannot access a Standard or Express account's persons after the account starts onboarding, such as after generating an account link for the account.\nSee the [Standard onboarding](https://stripe.com/docs/connect/standard-accounts) or [Express onboarding documentation](https://stripe.com/docs/connect/express-accounts) for information about platform pre-filling and account onboarding steps.\n\nRelated guide: [Handling Identity Verification with the API](https://stripe.com/docs/connect/identity-verification-api#person-information).",
        "properties": {
          "account": {
            "description": "The account the person is associated with.",
            "maxLength": 5000,
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "address_kana": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "nullable": true
          },
          "address_kanji": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "nullable": true
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "dob": {
            "$ref": "#/components/schemas/legal_entity_dob"
          },
          "email": {
            "description": "The person's email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "description": "The person's first name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "first_name_kana": {
            "description": "The Kana variation of the person's first name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "first_name_kanji": {
            "description": "The Kanji variation of the person's first name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "full_name_aliases": {
            "description": "A list of alternate names or aliases that the person is known by.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "future_requirements": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/person_future_requirements"
              }
            ],
            "nullable": true
          },
          "gender": {
            "description": "The person's gender (International regulations require either \"male\" or \"female\").",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "id_number_provided": {
            "description": "Whether the person's `id_number` was provided.",
            "type": "boolean"
          },
          "id_number_secondary_provided": {
            "description": "Whether the person's `id_number_secondary` was provided.",
            "type": "boolean"
          },
          "last_name": {
            "description": "The person's last name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last_name_kana": {
            "description": "The Kana variation of the person's last name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last_name_kanji": {
            "description": "The Kanji variation of the person's last name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "maiden_name": {
            "description": "The person's maiden name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "nationality": {
            "description": "The country where the person is a national.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "person"
            ],
            "type": "string"
          },
          "phone": {
            "description": "The person's phone number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "political_exposure": {
            "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
            "enum": [
              "existing",
              "none"
            ],
            "type": "string"
          },
          "registered_address": {
            "$ref": "#/components/schemas/address"
          },
          "relationship": {
            "$ref": "#/components/schemas/person_relationship"
          },
          "requirements": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/person_requirements"
              }
            ],
            "nullable": true
          },
          "ssn_last_4_provided": {
            "description": "Whether the last four digits of the person's Social Security number have been provided (U.S. only).",
            "type": "boolean"
          },
          "verification": {
            "$ref": "#/components/schemas/legal_entity_person_verification"
          }
        },
        "required": [
          "account",
          "created",
          "id",
          "object"
        ],
        "title": "Person",
        "type": "object",
        "x-expandableFields": [
          "address",
          "address_kana",
          "address_kanji",
          "dob",
          "future_requirements",
          "registered_address",
          "relationship",
          "requirements",
          "verification"
        ],
        "x-resourceId": "person"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "account"
        ],
        "type": "string"
      },
      "payouts_enabled": {
        "description": "Whether Stripe can send payouts to this account.",
        "type": "boolean"
      },
      "requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "current_deadline": {
            "description": "Date by which the fields in `currently_due` must be collected to keep the account enabled. These fields may disable the account sooner if the next threshold is reached before they are collected.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the account enabled. If not collected by `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "disabled_reason": {
            "description": "If the account is disabled, this string describes why. Can be `requirements.past_due`, `requirements.pending_verification`, `listed`, `platform_paused`, `rejected.fraud`, `rejected.listed`, `rejected.terms_of_service`, `rejected.other`, `under_review`, or `other`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "nullable": true,
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and `current_deadline` becomes set.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by `current_deadline`. These fields need to be collected to enable the account.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "AccountRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ]
      },
      "settings": [
        {
          "description": "",
          "properties": {
            "bacs_debit_payments": {
              "$ref": "#/components/schemas/account_bacs_debit_payments_settings"
            },
            "branding": {
              "$ref": "#/components/schemas/account_branding_settings"
            },
            "card_issuing": {
              "$ref": "#/components/schemas/account_card_issuing_settings"
            },
            "card_payments": {
              "$ref": "#/components/schemas/account_card_payments_settings"
            },
            "dashboard": {
              "$ref": "#/components/schemas/account_dashboard_settings"
            },
            "payments": {
              "$ref": "#/components/schemas/account_payments_settings"
            },
            "payouts": {
              "$ref": "#/components/schemas/account_payout_settings"
            },
            "sepa_debit_payments": {
              "$ref": "#/components/schemas/account_sepa_debit_payments_settings"
            },
            "treasury": {
              "$ref": "#/components/schemas/account_treasury_settings"
            }
          },
          "required": [
            "branding",
            "card_payments",
            "dashboard",
            "payments"
          ],
          "title": "AccountSettings",
          "type": "object",
          "x-expandableFields": [
            "bacs_debit_payments",
            "branding",
            "card_issuing",
            "card_payments",
            "dashboard",
            "payments",
            "payouts",
            "sepa_debit_payments",
            "treasury"
          ]
        }
      ],
      "tos_acceptance": {
        "description": "",
        "properties": {
          "date": {
            "description": "The Unix timestamp marking when the account representative accepted their service agreement",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "ip": {
            "description": "The IP address from which the account representative accepted their service agreement",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "service_agreement": {
            "description": "The user's service agreement type",
            "maxLength": 5000,
            "type": "string"
          },
          "user_agent": {
            "description": "The user agent of the browser from which the account representative accepted their service agreement",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "AccountTOSAcceptance",
        "type": "object",
        "x-expandableFields": []
      },
      "type": {
        "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
        "enum": [
          "custom",
          "express",
          "standard"
        ],
        "type": "string"
      }
    },
    "required": [
      "id",
      "object"
    ],
    "title": "Account",
    "type": "object",
    "x-expandableFields": [
      "business_profile",
      "capabilities",
      "company",
      "controller",
      "external_accounts",
      "future_requirements",
      "individual",
      "requirements",
      "settings",
      "tos_acceptance"
    ],
    "x-resourceId": "account"
  },
  "application_fee": {
    "description": "",
    "properties": {
      "account": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current e-mail address or if the account is\nenabled yet to make live charges.\n\nSome properties, marked below, are available only to platforms that want to\n[create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts).",
          "properties": {
            "business_profile": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_business_profile"
                }
              ],
              "description": "Business information about the account.",
              "nullable": true
            },
            "business_type": {
              "description": "The business type.",
              "enum": [
                "company",
                "government_entity",
                "individual",
                "non_profit"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "capabilities": {
              "$ref": "#/components/schemas/account_capabilities"
            },
            "charges_enabled": {
              "description": "Whether the account can create live charges.",
              "type": "boolean"
            },
            "company": {
              "$ref": "#/components/schemas/legal_entity_company"
            },
            "controller": {
              "$ref": "#/components/schemas/account_unification_account_controller"
            },
            "country": {
              "description": "The account's country.",
              "maxLength": 5000,
              "type": "string"
            },
            "created": {
              "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "default_currency": {
              "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
              "maxLength": 5000,
              "type": "string"
            },
            "details_submitted": {
              "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
              "type": "boolean"
            },
            "email": {
              "description": "An email address associated with the account. You can treat this as metadata: it is not used for authentication or messaging account holders.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "external_accounts": {
              "description": "External accounts (bank accounts and debit cards) currently attached to this account",
              "properties": {
                "data": {
                  "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ExternalAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "future_requirements": {
              "$ref": "#/components/schemas/account_future_requirements"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "individual": {
              "$ref": "#/components/schemas/person"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "account"
              ],
              "type": "string"
            },
            "payouts_enabled": {
              "description": "Whether Stripe can send payouts to this account.",
              "type": "boolean"
            },
            "requirements": {
              "$ref": "#/components/schemas/account_requirements"
            },
            "settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_settings"
                }
              ],
              "description": "Options for customizing how the account functions within Stripe.",
              "nullable": true
            },
            "tos_acceptance": {
              "$ref": "#/components/schemas/account_tos_acceptance"
            },
            "type": {
              "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
              "enum": [
                "custom",
                "express",
                "standard"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Account",
          "type": "object",
          "x-expandableFields": [
            "business_profile",
            "capabilities",
            "company",
            "controller",
            "external_accounts",
            "future_requirements",
            "individual",
            "requirements",
            "settings",
            "tos_acceptance"
          ],
          "x-resourceId": "account"
        }
      ],
      "amount": {
        "description": "Amount earned, in %s.",
        "type": "integer"
      },
      "amount_refunded": {
        "description": "Amount in %s refunded (can be less than the amount attribute on the fee if a partial refund was issued)",
        "type": "integer"
      },
      "application": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "",
          "properties": {
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "The name of the application.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Application",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "balance_transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Balance transactions represent funds moving through your Stripe account.\nThey're created for every type of transaction that comes into or flows out of your Stripe account balance.\n\nRelated guide: [Balance Transaction Types](https://stripe.com/docs/reports/balance-transaction-types).",
          "properties": {
            "amount": {
              "description": "Gross amount of the transaction, in %s.",
              "type": "integer"
            },
            "available_on": {
              "description": "The date the transaction's net funds will become available in the Stripe balance.",
              "format": "unix-time",
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exchange_rate": {
              "description": "The exchange rate used, if applicable, for this transaction. Specifically, if money was converted from currency A to currency B, then the `amount` in currency A, times `exchange_rate`, would be the `amount` in currency B. For example, suppose you charged a customer 10.00 EUR. Then the PaymentIntent's `amount` would be `1000` and `currency` would be `eur`. Suppose this was converted into 12.34 USD in your Stripe account. Then the BalanceTransaction's `amount` would be `1234`, `currency` would be `usd`, and `exchange_rate` would be `1.234`.",
              "nullable": true,
              "type": "number"
            },
            "fee": {
              "description": "Fees (in %s) paid for this transaction.",
              "type": "integer"
            },
            "fee_details": {
              "description": "Detailed breakdown of fees (in %s) paid for this transaction.",
              "items": {
                "$ref": "#/components/schemas/fee"
              },
              "type": "array"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "net": {
              "description": "Net amount of the transaction, in %s.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "balance_transaction"
              ],
              "type": "string"
            },
            "reporting_category": {
              "description": "[Learn more](https://stripe.com/docs/reports/reporting-categories) about how reporting categories can help you understand balance transactions from an accounting perspective.",
              "maxLength": 5000,
              "type": "string"
            },
            "source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                },
                {
                  "$ref": "#/components/schemas/charge"
                },
                {
                  "$ref": "#/components/schemas/connect_collection_transfer"
                },
                {
                  "$ref": "#/components/schemas/dispute"
                },
                {
                  "$ref": "#/components/schemas/fee_refund"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                },
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                },
                {
                  "$ref": "#/components/schemas/payout"
                },
                {
                  "$ref": "#/components/schemas/platform_tax_fee"
                },
                {
                  "$ref": "#/components/schemas/refund"
                },
                {
                  "$ref": "#/components/schemas/reserve_transaction"
                },
                {
                  "$ref": "#/components/schemas/tax_deducted_at_source"
                },
                {
                  "$ref": "#/components/schemas/topup"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ],
              "description": "The Stripe object to which this transaction is related.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  },
                  {
                    "$ref": "#/components/schemas/charge"
                  },
                  {
                    "$ref": "#/components/schemas/connect_collection_transfer"
                  },
                  {
                    "$ref": "#/components/schemas/dispute"
                  },
                  {
                    "$ref": "#/components/schemas/fee_refund"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.authorization"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.dispute"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.transaction"
                  },
                  {
                    "$ref": "#/components/schemas/payout"
                  },
                  {
                    "$ref": "#/components/schemas/platform_tax_fee"
                  },
                  {
                    "$ref": "#/components/schemas/refund"
                  },
                  {
                    "$ref": "#/components/schemas/reserve_transaction"
                  },
                  {
                    "$ref": "#/components/schemas/tax_deducted_at_source"
                  },
                  {
                    "$ref": "#/components/schemas/topup"
                  },
                  {
                    "$ref": "#/components/schemas/transfer"
                  },
                  {
                    "$ref": "#/components/schemas/transfer_reversal"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "status": {
              "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
              "maxLength": 5000,
              "type": "string"
            },
            "type": {
              "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. If you are looking to classify transactions for accounting purposes, you might want to consider `reporting_category` instead.",
              "enum": [
                "adjustment",
                "advance",
                "advance_funding",
                "anticipation_repayment",
                "application_fee",
                "application_fee_refund",
                "charge",
                "connect_collection_transfer",
                "contribution",
                "issuing_authorization_hold",
                "issuing_authorization_release",
                "issuing_dispute",
                "issuing_transaction",
                "payment",
                "payment_failure_refund",
                "payment_refund",
                "payout",
                "payout_cancel",
                "payout_failure",
                "refund",
                "refund_failure",
                "reserve_transaction",
                "reserved_funds",
                "stripe_fee",
                "stripe_fx_fee",
                "tax_fee",
                "topup",
                "topup_reversal",
                "transfer",
                "transfer_cancel",
                "transfer_failure",
                "transfer_refund"
              ],
              "type": "string"
            }
          },
          "required": [
            "amount",
            "available_on",
            "created",
            "currency",
            "fee",
            "fee_details",
            "id",
            "net",
            "object",
            "reporting_category",
            "status",
            "type"
          ],
          "title": "BalanceTransaction",
          "type": "object",
          "x-expandableFields": [
            "fee_details",
            "source"
          ],
          "x-resourceId": "balance_transaction"
        }
      ],
      "charge": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "To charge a credit or a debit card, you create a `Charge` object. You can\nretrieve and refund individual charges as well as list all charges. Charges\nare identified by a unique, random ID.\n\nRelated guide: [Accept a payment with the Charges API](https://stripe.com/docs/payments/accept-a-payment-charges).",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "amount_captured": {
              "description": "Amount in %s captured (can be less than the amount attribute on the charge if a partial capture was made).",
              "type": "integer"
            },
            "amount_refunded": {
              "description": "Amount in %s refunded (can be less than the amount attribute on the charge if a partial refund was issued).",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the charge.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "application_fee": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                }
              ],
              "description": "The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "type": "integer"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "billing_details": {
              "$ref": "#/components/schemas/billing_details"
            },
            "calculated_statement_descriptor": {
              "description": "The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "captured": {
              "description": "If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.",
              "type": "boolean"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the customer this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 40000,
              "nullable": true,
              "type": "string"
            },
            "disputed": {
              "description": "Whether the charge has been disputed.",
              "type": "boolean"
            },
            "failure_balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the reversal of the balance on your account due to payment failure.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "failure_code": {
              "description": "Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "failure_message": {
              "description": "Message to user further explaining reason for charge failure if available.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "fraud_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_fraud_details"
                }
              ],
              "description": "Information on fraud assessments for the charge.",
              "nullable": true
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "ID of the invoice this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "charge"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "outcome": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_outcome"
                }
              ],
              "description": "Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details.",
              "nullable": true
            },
            "paid": {
              "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
              "type": "boolean"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "ID of the PaymentIntent associated with this charge, if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "payment_method": {
              "description": "ID of the payment method used in this charge.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "payment_method_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_details"
                }
              ],
              "description": "Details about the payment method at the time of the transaction.",
              "nullable": true
            },
            "radar_options": {
              "$ref": "#/components/schemas/radar_radar_options"
            },
            "receipt_email": {
              "description": "This is the email address that the receipt for this charge was sent to.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_url": {
              "description": "This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "refunded": {
              "description": "Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.",
              "type": "boolean"
            },
            "refunds": {
              "description": "A list of refunds that have been applied to the charge.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/refund"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "RefundList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "review": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/review"
                }
              ],
              "description": "ID of the review associated with this charge if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/review"
                  }
                ]
              }
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Shipping information for the charge.",
              "nullable": true
            },
            "source_transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "statement_descriptor": {
              "description": "For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "statement_descriptor_suffix": {
              "description": "Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the payment is either `succeeded`, `pending`, or `failed`.",
              "enum": [
                "failed",
                "pending",
                "succeeded"
              ],
              "type": "string"
            },
            "transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_transfer_data"
                }
              ],
              "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true
            },
            "transfer_group": {
              "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "amount_captured",
            "amount_refunded",
            "billing_details",
            "captured",
            "created",
            "currency",
            "disputed",
            "id",
            "livemode",
            "metadata",
            "object",
            "paid",
            "refunded",
            "refunds",
            "status"
          ],
          "title": "Charge",
          "type": "object",
          "x-expandableFields": [
            "application",
            "application_fee",
            "balance_transaction",
            "billing_details",
            "customer",
            "failure_balance_transaction",
            "fraud_details",
            "invoice",
            "on_behalf_of",
            "outcome",
            "payment_intent",
            "payment_method_details",
            "radar_options",
            "refunds",
            "review",
            "shipping",
            "source_transfer",
            "transfer",
            "transfer_data"
          ],
          "x-resourceId": "charge"
        }
      ],
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "application_fee"
        ],
        "type": "string"
      },
      "originating_transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "To charge a credit or a debit card, you create a `Charge` object. You can\nretrieve and refund individual charges as well as list all charges. Charges\nare identified by a unique, random ID.\n\nRelated guide: [Accept a payment with the Charges API](https://stripe.com/docs/payments/accept-a-payment-charges).",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "amount_captured": {
              "description": "Amount in %s captured (can be less than the amount attribute on the charge if a partial capture was made).",
              "type": "integer"
            },
            "amount_refunded": {
              "description": "Amount in %s refunded (can be less than the amount attribute on the charge if a partial refund was issued).",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the charge.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "application_fee": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                }
              ],
              "description": "The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "type": "integer"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "billing_details": {
              "$ref": "#/components/schemas/billing_details"
            },
            "calculated_statement_descriptor": {
              "description": "The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "captured": {
              "description": "If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.",
              "type": "boolean"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the customer this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 40000,
              "nullable": true,
              "type": "string"
            },
            "disputed": {
              "description": "Whether the charge has been disputed.",
              "type": "boolean"
            },
            "failure_balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the reversal of the balance on your account due to payment failure.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "failure_code": {
              "description": "Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "failure_message": {
              "description": "Message to user further explaining reason for charge failure if available.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "fraud_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_fraud_details"
                }
              ],
              "description": "Information on fraud assessments for the charge.",
              "nullable": true
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "ID of the invoice this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "charge"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "outcome": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_outcome"
                }
              ],
              "description": "Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details.",
              "nullable": true
            },
            "paid": {
              "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
              "type": "boolean"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "ID of the PaymentIntent associated with this charge, if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "payment_method": {
              "description": "ID of the payment method used in this charge.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "payment_method_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_details"
                }
              ],
              "description": "Details about the payment method at the time of the transaction.",
              "nullable": true
            },
            "radar_options": {
              "$ref": "#/components/schemas/radar_radar_options"
            },
            "receipt_email": {
              "description": "This is the email address that the receipt for this charge was sent to.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_url": {
              "description": "This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "refunded": {
              "description": "Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.",
              "type": "boolean"
            },
            "refunds": {
              "description": "A list of refunds that have been applied to the charge.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/refund"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "RefundList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "review": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/review"
                }
              ],
              "description": "ID of the review associated with this charge if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/review"
                  }
                ]
              }
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Shipping information for the charge.",
              "nullable": true
            },
            "source_transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "statement_descriptor": {
              "description": "For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "statement_descriptor_suffix": {
              "description": "Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the payment is either `succeeded`, `pending`, or `failed`.",
              "enum": [
                "failed",
                "pending",
                "succeeded"
              ],
              "type": "string"
            },
            "transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_transfer_data"
                }
              ],
              "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true
            },
            "transfer_group": {
              "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "amount_captured",
            "amount_refunded",
            "billing_details",
            "captured",
            "created",
            "currency",
            "disputed",
            "id",
            "livemode",
            "metadata",
            "object",
            "paid",
            "refunded",
            "refunds",
            "status"
          ],
          "title": "Charge",
          "type": "object",
          "x-expandableFields": [
            "application",
            "application_fee",
            "balance_transaction",
            "billing_details",
            "customer",
            "failure_balance_transaction",
            "fraud_details",
            "invoice",
            "on_behalf_of",
            "outcome",
            "payment_intent",
            "payment_method_details",
            "radar_options",
            "refunds",
            "review",
            "shipping",
            "source_transfer",
            "transfer",
            "transfer_data"
          ],
          "x-resourceId": "charge"
        }
      ],
      "refunded": {
        "description": "Whether the fee has been fully refunded. If the fee is only partially refunded, this attribute will still be false.",
        "type": "boolean"
      },
      "refunds": {
        "description": "A list of refunds that have been applied to the fee.",
        "properties": {
          "data": {
            "description": "Details about each object.",
            "items": {
              "description": "`Application Fee Refund` objects allow you to refund an application fee that\nhas previously been created but not yet refunded. Funds will be refunded to\nthe Stripe account from which the fee was originally collected.\n\nRelated guide: [Refunding Application Fees](https://stripe.com/docs/connect/destination-charges#refunding-app-fee).",
              "properties": {
                "amount": {
                  "description": "Amount, in %s.",
                  "type": "integer"
                },
                "balance_transaction": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/balance_transaction"
                    }
                  ],
                  "description": "Balance transaction that describes the impact on your account balance.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/balance_transaction"
                      }
                    ]
                  }
                },
                "created": {
                  "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                  "format": "unix-time",
                  "type": "integer"
                },
                "currency": {
                  "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                  "type": "string"
                },
                "fee": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/application_fee"
                    }
                  ],
                  "description": "ID of the application fee that was refunded.",
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/application_fee"
                      }
                    ]
                  }
                },
                "id": {
                  "description": "Unique identifier for the object.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "metadata": {
                  "additionalProperties": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                  "nullable": true,
                  "type": "object"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "fee_refund"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "amount",
                "created",
                "currency",
                "fee",
                "id",
                "object"
              ],
              "title": "FeeRefund",
              "type": "object",
              "x-expandableFields": [
                "balance_transaction",
                "fee"
              ],
              "x-resourceId": "fee_refund"
            },
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "FeeRefundList",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      }
    },
    "required": [
      "account",
      "amount",
      "amount_refunded",
      "application",
      "charge",
      "created",
      "currency",
      "id",
      "livemode",
      "object",
      "refunded",
      "refunds"
    ],
    "title": "PlatformFee",
    "type": "object",
    "x-expandableFields": [
      "account",
      "application",
      "balance_transaction",
      "charge",
      "originating_transaction",
      "refunds"
    ],
    "x-resourceId": "application_fee"
  },
  "refund": {
    "description": "`Refund` objects allow you to refund a charge that has previously been created\nbut not yet refunded. Funds will be refunded to the credit or debit card that\nwas originally charged.\n\nRelated guide: [Refunds](https://stripe.com/docs/refunds).",
    "properties": {
      "amount": {
        "description": "Amount, in %s.",
        "type": "integer"
      },
      "balance_transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Balance transactions represent funds moving through your Stripe account.\nThey're created for every type of transaction that comes into or flows out of your Stripe account balance.\n\nRelated guide: [Balance Transaction Types](https://stripe.com/docs/reports/balance-transaction-types).",
          "properties": {
            "amount": {
              "description": "Gross amount of the transaction, in %s.",
              "type": "integer"
            },
            "available_on": {
              "description": "The date the transaction's net funds will become available in the Stripe balance.",
              "format": "unix-time",
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exchange_rate": {
              "description": "The exchange rate used, if applicable, for this transaction. Specifically, if money was converted from currency A to currency B, then the `amount` in currency A, times `exchange_rate`, would be the `amount` in currency B. For example, suppose you charged a customer 10.00 EUR. Then the PaymentIntent's `amount` would be `1000` and `currency` would be `eur`. Suppose this was converted into 12.34 USD in your Stripe account. Then the BalanceTransaction's `amount` would be `1234`, `currency` would be `usd`, and `exchange_rate` would be `1.234`.",
              "nullable": true,
              "type": "number"
            },
            "fee": {
              "description": "Fees (in %s) paid for this transaction.",
              "type": "integer"
            },
            "fee_details": {
              "description": "Detailed breakdown of fees (in %s) paid for this transaction.",
              "items": {
                "$ref": "#/components/schemas/fee"
              },
              "type": "array"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "net": {
              "description": "Net amount of the transaction, in %s.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "balance_transaction"
              ],
              "type": "string"
            },
            "reporting_category": {
              "description": "[Learn more](https://stripe.com/docs/reports/reporting-categories) about how reporting categories can help you understand balance transactions from an accounting perspective.",
              "maxLength": 5000,
              "type": "string"
            },
            "source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                },
                {
                  "$ref": "#/components/schemas/charge"
                },
                {
                  "$ref": "#/components/schemas/connect_collection_transfer"
                },
                {
                  "$ref": "#/components/schemas/dispute"
                },
                {
                  "$ref": "#/components/schemas/fee_refund"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                },
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                },
                {
                  "$ref": "#/components/schemas/payout"
                },
                {
                  "$ref": "#/components/schemas/platform_tax_fee"
                },
                {
                  "$ref": "#/components/schemas/refund"
                },
                {
                  "$ref": "#/components/schemas/reserve_transaction"
                },
                {
                  "$ref": "#/components/schemas/tax_deducted_at_source"
                },
                {
                  "$ref": "#/components/schemas/topup"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ],
              "description": "The Stripe object to which this transaction is related.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  },
                  {
                    "$ref": "#/components/schemas/charge"
                  },
                  {
                    "$ref": "#/components/schemas/connect_collection_transfer"
                  },
                  {
                    "$ref": "#/components/schemas/dispute"
                  },
                  {
                    "$ref": "#/components/schemas/fee_refund"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.authorization"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.dispute"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.transaction"
                  },
                  {
                    "$ref": "#/components/schemas/payout"
                  },
                  {
                    "$ref": "#/components/schemas/platform_tax_fee"
                  },
                  {
                    "$ref": "#/components/schemas/refund"
                  },
                  {
                    "$ref": "#/components/schemas/reserve_transaction"
                  },
                  {
                    "$ref": "#/components/schemas/tax_deducted_at_source"
                  },
                  {
                    "$ref": "#/components/schemas/topup"
                  },
                  {
                    "$ref": "#/components/schemas/transfer"
                  },
                  {
                    "$ref": "#/components/schemas/transfer_reversal"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "status": {
              "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
              "maxLength": 5000,
              "type": "string"
            },
            "type": {
              "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. If you are looking to classify transactions for accounting purposes, you might want to consider `reporting_category` instead.",
              "enum": [
                "adjustment",
                "advance",
                "advance_funding",
                "anticipation_repayment",
                "application_fee",
                "application_fee_refund",
                "charge",
                "connect_collection_transfer",
                "contribution",
                "issuing_authorization_hold",
                "issuing_authorization_release",
                "issuing_dispute",
                "issuing_transaction",
                "payment",
                "payment_failure_refund",
                "payment_refund",
                "payout",
                "payout_cancel",
                "payout_failure",
                "refund",
                "refund_failure",
                "reserve_transaction",
                "reserved_funds",
                "stripe_fee",
                "stripe_fx_fee",
                "tax_fee",
                "topup",
                "topup_reversal",
                "transfer",
                "transfer_cancel",
                "transfer_failure",
                "transfer_refund"
              ],
              "type": "string"
            }
          },
          "required": [
            "amount",
            "available_on",
            "created",
            "currency",
            "fee",
            "fee_details",
            "id",
            "net",
            "object",
            "reporting_category",
            "status",
            "type"
          ],
          "title": "BalanceTransaction",
          "type": "object",
          "x-expandableFields": [
            "fee_details",
            "source"
          ],
          "x-resourceId": "balance_transaction"
        }
      ],
      "charge": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "To charge a credit or a debit card, you create a `Charge` object. You can\nretrieve and refund individual charges as well as list all charges. Charges\nare identified by a unique, random ID.\n\nRelated guide: [Accept a payment with the Charges API](https://stripe.com/docs/payments/accept-a-payment-charges).",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "amount_captured": {
              "description": "Amount in %s captured (can be less than the amount attribute on the charge if a partial capture was made).",
              "type": "integer"
            },
            "amount_refunded": {
              "description": "Amount in %s refunded (can be less than the amount attribute on the charge if a partial refund was issued).",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the charge.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "application_fee": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                }
              ],
              "description": "The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "type": "integer"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "billing_details": {
              "$ref": "#/components/schemas/billing_details"
            },
            "calculated_statement_descriptor": {
              "description": "The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "captured": {
              "description": "If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.",
              "type": "boolean"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the customer this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 40000,
              "nullable": true,
              "type": "string"
            },
            "disputed": {
              "description": "Whether the charge has been disputed.",
              "type": "boolean"
            },
            "failure_balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the reversal of the balance on your account due to payment failure.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "failure_code": {
              "description": "Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "failure_message": {
              "description": "Message to user further explaining reason for charge failure if available.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "fraud_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_fraud_details"
                }
              ],
              "description": "Information on fraud assessments for the charge.",
              "nullable": true
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "ID of the invoice this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "charge"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "outcome": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_outcome"
                }
              ],
              "description": "Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details.",
              "nullable": true
            },
            "paid": {
              "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
              "type": "boolean"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "ID of the PaymentIntent associated with this charge, if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "payment_method": {
              "description": "ID of the payment method used in this charge.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "payment_method_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_details"
                }
              ],
              "description": "Details about the payment method at the time of the transaction.",
              "nullable": true
            },
            "radar_options": {
              "$ref": "#/components/schemas/radar_radar_options"
            },
            "receipt_email": {
              "description": "This is the email address that the receipt for this charge was sent to.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_url": {
              "description": "This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "refunded": {
              "description": "Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.",
              "type": "boolean"
            },
            "refunds": {
              "description": "A list of refunds that have been applied to the charge.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/refund"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "RefundList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "review": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/review"
                }
              ],
              "description": "ID of the review associated with this charge if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/review"
                  }
                ]
              }
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Shipping information for the charge.",
              "nullable": true
            },
            "source_transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "statement_descriptor": {
              "description": "For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "statement_descriptor_suffix": {
              "description": "Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the payment is either `succeeded`, `pending`, or `failed`.",
              "enum": [
                "failed",
                "pending",
                "succeeded"
              ],
              "type": "string"
            },
            "transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_transfer_data"
                }
              ],
              "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true
            },
            "transfer_group": {
              "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "amount_captured",
            "amount_refunded",
            "billing_details",
            "captured",
            "created",
            "currency",
            "disputed",
            "id",
            "livemode",
            "metadata",
            "object",
            "paid",
            "refunded",
            "refunds",
            "status"
          ],
          "title": "Charge",
          "type": "object",
          "x-expandableFields": [
            "application",
            "application_fee",
            "balance_transaction",
            "billing_details",
            "customer",
            "failure_balance_transaction",
            "fraud_details",
            "invoice",
            "on_behalf_of",
            "outcome",
            "payment_intent",
            "payment_method_details",
            "radar_options",
            "refunds",
            "review",
            "shipping",
            "source_transfer",
            "transfer",
            "transfer_data"
          ],
          "x-resourceId": "charge"
        }
      ],
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users. (Available on non-card refunds only)",
        "maxLength": 5000,
        "type": "string"
      },
      "failure_balance_transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Balance transactions represent funds moving through your Stripe account.\nThey're created for every type of transaction that comes into or flows out of your Stripe account balance.\n\nRelated guide: [Balance Transaction Types](https://stripe.com/docs/reports/balance-transaction-types).",
          "properties": {
            "amount": {
              "description": "Gross amount of the transaction, in %s.",
              "type": "integer"
            },
            "available_on": {
              "description": "The date the transaction's net funds will become available in the Stripe balance.",
              "format": "unix-time",
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exchange_rate": {
              "description": "The exchange rate used, if applicable, for this transaction. Specifically, if money was converted from currency A to currency B, then the `amount` in currency A, times `exchange_rate`, would be the `amount` in currency B. For example, suppose you charged a customer 10.00 EUR. Then the PaymentIntent's `amount` would be `1000` and `currency` would be `eur`. Suppose this was converted into 12.34 USD in your Stripe account. Then the BalanceTransaction's `amount` would be `1234`, `currency` would be `usd`, and `exchange_rate` would be `1.234`.",
              "nullable": true,
              "type": "number"
            },
            "fee": {
              "description": "Fees (in %s) paid for this transaction.",
              "type": "integer"
            },
            "fee_details": {
              "description": "Detailed breakdown of fees (in %s) paid for this transaction.",
              "items": {
                "$ref": "#/components/schemas/fee"
              },
              "type": "array"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "net": {
              "description": "Net amount of the transaction, in %s.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "balance_transaction"
              ],
              "type": "string"
            },
            "reporting_category": {
              "description": "[Learn more](https://stripe.com/docs/reports/reporting-categories) about how reporting categories can help you understand balance transactions from an accounting perspective.",
              "maxLength": 5000,
              "type": "string"
            },
            "source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                },
                {
                  "$ref": "#/components/schemas/charge"
                },
                {
                  "$ref": "#/components/schemas/connect_collection_transfer"
                },
                {
                  "$ref": "#/components/schemas/dispute"
                },
                {
                  "$ref": "#/components/schemas/fee_refund"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                },
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                },
                {
                  "$ref": "#/components/schemas/payout"
                },
                {
                  "$ref": "#/components/schemas/platform_tax_fee"
                },
                {
                  "$ref": "#/components/schemas/refund"
                },
                {
                  "$ref": "#/components/schemas/reserve_transaction"
                },
                {
                  "$ref": "#/components/schemas/tax_deducted_at_source"
                },
                {
                  "$ref": "#/components/schemas/topup"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ],
              "description": "The Stripe object to which this transaction is related.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  },
                  {
                    "$ref": "#/components/schemas/charge"
                  },
                  {
                    "$ref": "#/components/schemas/connect_collection_transfer"
                  },
                  {
                    "$ref": "#/components/schemas/dispute"
                  },
                  {
                    "$ref": "#/components/schemas/fee_refund"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.authorization"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.dispute"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.transaction"
                  },
                  {
                    "$ref": "#/components/schemas/payout"
                  },
                  {
                    "$ref": "#/components/schemas/platform_tax_fee"
                  },
                  {
                    "$ref": "#/components/schemas/refund"
                  },
                  {
                    "$ref": "#/components/schemas/reserve_transaction"
                  },
                  {
                    "$ref": "#/components/schemas/tax_deducted_at_source"
                  },
                  {
                    "$ref": "#/components/schemas/topup"
                  },
                  {
                    "$ref": "#/components/schemas/transfer"
                  },
                  {
                    "$ref": "#/components/schemas/transfer_reversal"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "status": {
              "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
              "maxLength": 5000,
              "type": "string"
            },
            "type": {
              "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. If you are looking to classify transactions for accounting purposes, you might want to consider `reporting_category` instead.",
              "enum": [
                "adjustment",
                "advance",
                "advance_funding",
                "anticipation_repayment",
                "application_fee",
                "application_fee_refund",
                "charge",
                "connect_collection_transfer",
                "contribution",
                "issuing_authorization_hold",
                "issuing_authorization_release",
                "issuing_dispute",
                "issuing_transaction",
                "payment",
                "payment_failure_refund",
                "payment_refund",
                "payout",
                "payout_cancel",
                "payout_failure",
                "refund",
                "refund_failure",
                "reserve_transaction",
                "reserved_funds",
                "stripe_fee",
                "stripe_fx_fee",
                "tax_fee",
                "topup",
                "topup_reversal",
                "transfer",
                "transfer_cancel",
                "transfer_failure",
                "transfer_refund"
              ],
              "type": "string"
            }
          },
          "required": [
            "amount",
            "available_on",
            "created",
            "currency",
            "fee",
            "fee_details",
            "id",
            "net",
            "object",
            "reporting_category",
            "status",
            "type"
          ],
          "title": "BalanceTransaction",
          "type": "object",
          "x-expandableFields": [
            "fee_details",
            "source"
          ],
          "x-resourceId": "balance_transaction"
        }
      ],
      "failure_reason": {
        "description": "If the refund failed, the reason for refund failure if known. Possible values are `lost_or_stolen_card`, `expired_or_canceled_card`, or `unknown`.",
        "maxLength": 5000,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "instructions_email": {
        "description": "Email to which refund instructions, if required, are sent to.",
        "maxLength": 5000,
        "type": "string"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "next_action": {
        "description": "",
        "properties": {
          "display_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/refund_next_action_display_details"
              }
            ],
            "description": "Contains the refund details.",
            "nullable": true
          },
          "type": {
            "description": "Type of the next action to perform.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "RefundNextAction",
        "type": "object",
        "x-expandableFields": [
          "display_details"
        ]
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "refund"
        ],
        "type": "string"
      },
      "payment_intent": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A PaymentIntent guides you through the process of collecting a payment from your customer.\nWe recommend that you create exactly one PaymentIntent for each order or\ncustomer session in your system. You can reference the PaymentIntent later to\nsee the history of payment attempts for a particular session.\n\nA PaymentIntent transitions through\n[multiple statuses](https://stripe.com/docs/payments/intents#intent-statuses)\nthroughout its lifetime as it interfaces with Stripe.js to perform\nauthentication flows and ultimately creates at most one successful charge.\n\nRelated guide: [Payment Intents API](https://stripe.com/docs/payments/payment-intents).",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "amount_capturable": {
              "description": "Amount that can be captured from this PaymentIntent.",
              "type": "integer"
            },
            "amount_details": {
              "$ref": "#/components/schemas/payment_flows_amount_details"
            },
            "amount_received": {
              "description": "Amount that was collected by this PaymentIntent.",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
              "nullable": true,
              "type": "integer"
            },
            "automatic_payment_methods": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_flows_automatic_payment_methods_payment_intent"
                }
              ],
              "description": "Settings to configure compatible payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods)",
              "nullable": true
            },
            "canceled_at": {
              "description": "Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "cancellation_reason": {
              "description": "Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`).",
              "enum": [
                "abandoned",
                "automatic",
                "duplicate",
                "failed_invoice",
                "fraudulent",
                "requested_by_customer",
                "void_invoice"
              ],
              "nullable": true,
              "type": "string"
            },
            "capture_method": {
              "description": "Controls when the funds will be captured from the customer's account.",
              "enum": [
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "charges": {
              "description": "Charges that were created by this PaymentIntent, if any.",
              "properties": {
                "data": {
                  "description": "This list only contains the latest charge, even if there were previously multiple unsuccessful charges. To view all previous charges for a PaymentIntent, you can filter the charges list using the `payment_intent` [parameter](https://stripe.com/docs/api/charges/list#list_charges-payment_intent).",
                  "items": {
                    "$ref": "#/components/schemas/charge"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentFlowsPaymentIntentResourceChargeList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "client_secret": {
              "description": "The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. \n\nThe client secret can be used to complete a payment from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.\n\nRefer to our docs to [accept a payment](https://stripe.com/docs/payments/accept-a-payment?ui=elements) and learn about how `client_secret` should be handled.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "confirmation_method": {
              "enum": [
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the Customer this PaymentIntent belongs to, if one exists.\n\nPayment methods attached to other Customers cannot be used with this PaymentIntent.\n\nIf present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "ID of the invoice that created this PaymentIntent, if it exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "last_payment_error": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/api_errors"
                }
              ],
              "description": "The payment error encountered in the previous PaymentIntent confirmation. It will be cleared if the PaymentIntent is later updated for any reason.",
              "nullable": true
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. For more information, see the [documentation](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).",
              "type": "object"
            },
            "next_action": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_next_action"
                }
              ],
              "description": "If present, this property tells you what actions you need to take in order for your customer to fulfill a payment using the provided source.",
              "nullable": true
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "payment_intent"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) for which the funds of the PaymentIntent are intended. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the payment method used in this PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "payment_method_options": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_payment_method_options"
                }
              ],
              "description": "Payment-method-specific configuration for this PaymentIntent.",
              "nullable": true
            },
            "payment_method_types": {
              "description": "The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "processing": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_processing"
                }
              ],
              "description": "If present, this property tells you about the processing state of the payment.",
              "nullable": true
            },
            "receipt_email": {
              "description": "Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "review": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/review"
                }
              ],
              "description": "ID of the review associated with this PaymentIntent, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/review"
                  }
                ]
              }
            },
            "setup_future_usage": {
              "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
              "enum": [
                "off_session",
                "on_session"
              ],
              "nullable": true,
              "type": "string"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Shipping information for this PaymentIntent.",
              "nullable": true
            },
            "statement_descriptor": {
              "description": "For non-card charges, you can use this value as the complete description that appears on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "statement_descriptor_suffix": {
              "description": "Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "Status of this PaymentIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `requires_capture`, `canceled`, or `succeeded`. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses).",
              "enum": [
                "canceled",
                "processing",
                "requires_action",
                "requires_capture",
                "requires_confirmation",
                "requires_payment_method",
                "succeeded"
              ],
              "type": "string"
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/transfer_data"
                }
              ],
              "description": "The data with which to automatically create a Transfer when the payment is finalized. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "nullable": true
            },
            "transfer_group": {
              "description": "A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "capture_method",
            "confirmation_method",
            "created",
            "currency",
            "id",
            "livemode",
            "object",
            "payment_method_types",
            "status"
          ],
          "title": "PaymentIntent",
          "type": "object",
          "x-expandableFields": [
            "amount_details",
            "application",
            "automatic_payment_methods",
            "charges",
            "customer",
            "invoice",
            "last_payment_error",
            "next_action",
            "on_behalf_of",
            "payment_method",
            "payment_method_options",
            "processing",
            "review",
            "shipping",
            "transfer_data"
          ],
          "x-resourceId": "payment_intent"
        }
      ],
      "reason": {
        "description": "Reason for the refund, either user-provided (`duplicate`, `fraudulent`, or `requested_by_customer`) or generated by Stripe internally (`expired_uncaptured_charge`).",
        "enum": [
          "duplicate",
          "expired_uncaptured_charge",
          "fraudulent",
          "requested_by_customer"
        ],
        "nullable": true,
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "receipt_number": {
        "description": "This is the transaction number that appears on email receipts sent for this refund.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "source_transfer_reversal": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "[Stripe Connect](https://stripe.com/docs/connect) platforms can reverse transfers made to a\nconnected account, either entirely or partially, and can also specify whether\nto refund any related application fees. Transfer reversals add to the\nplatform's balance and subtract from the destination account's balance.\n\nReversing a transfer that was made for a [destination\ncharge](/docs/connect/destination-charges) is allowed only up to the amount of\nthe charge. It is possible to reverse a\n[transfer_group](https://stripe.com/docs/connect/charges-transfers#transfer-options)\ntransfer only if the destination account has enough balance to cover the\nreversal.\n\nRelated guide: [Reversing Transfers](https://stripe.com/docs/connect/charges-transfers#reversing-transfers).",
          "properties": {
            "amount": {
              "description": "Amount, in %s.",
              "type": "integer"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "Balance transaction that describes the impact on your account balance.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "destination_payment_refund": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/refund"
                }
              ],
              "description": "Linked payment refund for the transfer reversal.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/refund"
                  }
                ]
              }
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "transfer_reversal"
              ],
              "type": "string"
            },
            "source_refund": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/refund"
                }
              ],
              "description": "ID of the refund responsible for the transfer reversal.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/refund"
                  }
                ]
              }
            },
            "transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "ID of the transfer that was reversed.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            }
          },
          "required": [
            "amount",
            "created",
            "currency",
            "id",
            "object",
            "transfer"
          ],
          "title": "TransferReversal",
          "type": "object",
          "x-expandableFields": [
            "balance_transaction",
            "destination_payment_refund",
            "source_refund",
            "transfer"
          ],
          "x-resourceId": "transfer_reversal"
        }
      ],
      "status": {
        "description": "Status of the refund. For credit card refunds, this can be `pending`, `succeeded`, or `failed`. For other types of refunds, it can be `pending`, `requires_action`, `succeeded`, `failed`, or `canceled`. Refer to our [refunds](https://stripe.com/docs/refunds#failed-refunds) documentation for more details.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "transfer_reversal": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "[Stripe Connect](https://stripe.com/docs/connect) platforms can reverse transfers made to a\nconnected account, either entirely or partially, and can also specify whether\nto refund any related application fees. Transfer reversals add to the\nplatform's balance and subtract from the destination account's balance.\n\nReversing a transfer that was made for a [destination\ncharge](/docs/connect/destination-charges) is allowed only up to the amount of\nthe charge. It is possible to reverse a\n[transfer_group](https://stripe.com/docs/connect/charges-transfers#transfer-options)\ntransfer only if the destination account has enough balance to cover the\nreversal.\n\nRelated guide: [Reversing Transfers](https://stripe.com/docs/connect/charges-transfers#reversing-transfers).",
          "properties": {
            "amount": {
              "description": "Amount, in %s.",
              "type": "integer"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "Balance transaction that describes the impact on your account balance.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "destination_payment_refund": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/refund"
                }
              ],
              "description": "Linked payment refund for the transfer reversal.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/refund"
                  }
                ]
              }
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "transfer_reversal"
              ],
              "type": "string"
            },
            "source_refund": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/refund"
                }
              ],
              "description": "ID of the refund responsible for the transfer reversal.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/refund"
                  }
                ]
              }
            },
            "transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "ID of the transfer that was reversed.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            }
          },
          "required": [
            "amount",
            "created",
            "currency",
            "id",
            "object",
            "transfer"
          ],
          "title": "TransferReversal",
          "type": "object",
          "x-expandableFields": [
            "balance_transaction",
            "destination_payment_refund",
            "source_refund",
            "transfer"
          ],
          "x-resourceId": "transfer_reversal"
        }
      ]
    },
    "required": [
      "amount",
      "created",
      "currency",
      "id",
      "object"
    ],
    "title": "Refund",
    "type": "object",
    "x-expandableFields": [
      "balance_transaction",
      "charge",
      "failure_balance_transaction",
      "next_action",
      "payment_intent",
      "source_transfer_reversal",
      "transfer_reversal"
    ],
    "x-resourceId": "refund"
  },
  "balance": {
    "description": "This is an object representing your Stripe balance. You can retrieve it to see\nthe balance currently on your Stripe account.\n\nYou can also retrieve the balance history, which contains a list of\n[transactions](https://stripe.com/docs/reporting/balance-transaction-types) that contributed to the balance\n(charges, payouts, and so forth).\n\nThe available and pending amounts for each currency are broken down further by\npayment source types.\n\nRelated guide: [Understanding Connect Account Balances](https://stripe.com/docs/connect/account-balances).",
    "properties": {
      "available": {
        "description": "Funds that are available to be transferred or paid out, whether automatically by Stripe or explicitly via the [Transfers API](https://stripe.com/docs/api#transfers) or [Payouts API](https://stripe.com/docs/api#payouts). The available balance for each currency and payment type can be found in the `source_types` property.",
        "items": {
          "description": "",
          "properties": {
            "amount": {
              "description": "Balance amount.",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "source_types": {
              "$ref": "#/components/schemas/balance_amount_by_source_type"
            }
          },
          "required": [
            "amount",
            "currency"
          ],
          "title": "BalanceAmount",
          "type": "object",
          "x-expandableFields": [
            "source_types"
          ]
        },
        "type": "array"
      },
      "connect_reserved": {
        "description": "Funds held due to negative balances on connected Custom accounts. The connect reserve balance for each currency and payment type can be found in the `source_types` property.",
        "items": {
          "description": "",
          "properties": {
            "amount": {
              "description": "Balance amount.",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "source_types": {
              "$ref": "#/components/schemas/balance_amount_by_source_type"
            }
          },
          "required": [
            "amount",
            "currency"
          ],
          "title": "BalanceAmount",
          "type": "object",
          "x-expandableFields": [
            "source_types"
          ]
        },
        "type": "array"
      },
      "instant_available": {
        "description": "Funds that can be paid out using Instant Payouts.",
        "items": {
          "description": "",
          "properties": {
            "amount": {
              "description": "Balance amount.",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "source_types": {
              "$ref": "#/components/schemas/balance_amount_by_source_type"
            }
          },
          "required": [
            "amount",
            "currency"
          ],
          "title": "BalanceAmount",
          "type": "object",
          "x-expandableFields": [
            "source_types"
          ]
        },
        "type": "array"
      },
      "issuing": {
        "description": "",
        "properties": {
          "available": {
            "description": "Funds that are available for use.",
            "items": {
              "$ref": "#/components/schemas/balance_amount"
            },
            "type": "array"
          }
        },
        "required": [
          "available"
        ],
        "title": "BalanceDetail",
        "type": "object",
        "x-expandableFields": [
          "available"
        ]
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "balance"
        ],
        "type": "string"
      },
      "pending": {
        "description": "Funds that are not yet available in the balance, due to the 7-day rolling pay cycle. The pending balance for each currency, and for each payment type, can be found in the `source_types` property.",
        "items": {
          "description": "",
          "properties": {
            "amount": {
              "description": "Balance amount.",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "source_types": {
              "$ref": "#/components/schemas/balance_amount_by_source_type"
            }
          },
          "required": [
            "amount",
            "currency"
          ],
          "title": "BalanceAmount",
          "type": "object",
          "x-expandableFields": [
            "source_types"
          ]
        },
        "type": "array"
      }
    },
    "required": [
      "available",
      "livemode",
      "object",
      "pending"
    ],
    "title": "Balance",
    "type": "object",
    "x-expandableFields": [
      "available",
      "connect_reserved",
      "instant_available",
      "issuing",
      "pending"
    ],
    "x-resourceId": "balance"
  },
  "configuration": {
    "description": "A portal configuration describes the functionality and behavior of a portal session.",
    "properties": {
      "active": {
        "description": "Whether the configuration is active and can be used to create portal sessions.",
        "type": "boolean"
      },
      "application": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "",
          "properties": {
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "The name of the application.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Application",
          "type": "object",
          "x-expandableFields": []
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "The name of the application.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedApplication",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "business_profile": {
        "description": "",
        "properties": {
          "headline": {
            "description": "The messaging shown to customers in the portal.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "privacy_policy_url": {
            "description": "A link to the businessâ€™s publicly available privacy policy.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "terms_of_service_url": {
            "description": "A link to the businessâ€™s publicly available terms of service.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "PortalBusinessProfile",
        "type": "object",
        "x-expandableFields": []
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "default_return_url": {
        "description": "The default URL to redirect customers to when they click on the portal's link to return to your website. This can be [overriden](https://stripe.com/docs/api/customer_portal/sessions/create#create_portal_session-return_url) when creating the session.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "features": {
        "description": "",
        "properties": {
          "customer_update": {
            "$ref": "#/components/schemas/portal_customer_update"
          },
          "invoice_history": {
            "$ref": "#/components/schemas/portal_invoice_list"
          },
          "payment_method_update": {
            "$ref": "#/components/schemas/portal_payment_method_update"
          },
          "subscription_cancel": {
            "$ref": "#/components/schemas/portal_subscription_cancel"
          },
          "subscription_pause": {
            "$ref": "#/components/schemas/portal_subscription_pause"
          },
          "subscription_update": {
            "$ref": "#/components/schemas/portal_subscription_update"
          }
        },
        "required": [
          "customer_update",
          "invoice_history",
          "payment_method_update",
          "subscription_cancel",
          "subscription_pause",
          "subscription_update"
        ],
        "title": "PortalFeatures",
        "type": "object",
        "x-expandableFields": [
          "customer_update",
          "invoice_history",
          "payment_method_update",
          "subscription_cancel",
          "subscription_pause",
          "subscription_update"
        ]
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "is_default": {
        "description": "Whether the configuration is the default. If `true`, this configuration can be managed in the Dashboard and portal sessions will use this configuration unless it is overriden when creating the session.",
        "type": "boolean"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "billing_portal.configuration"
        ],
        "type": "string"
      },
      "updated": {
        "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      }
    },
    "required": [
      "active",
      "business_profile",
      "created",
      "features",
      "id",
      "is_default",
      "livemode",
      "object",
      "updated"
    ],
    "title": "PortalConfiguration",
    "type": "object",
    "x-expandableFields": [
      "application",
      "business_profile",
      "features"
    ],
    "x-resourceId": "billing_portal.configuration"
  },
  "session": {
    "description": "The Billing customer portal is a Stripe-hosted UI for subscription and\nbilling management.\n\nA portal configuration describes the functionality and features that you\nwant to provide to your customers through the portal.\n\nA portal session describes the instantiation of the customer portal for\na particular customer. By visiting the session's URL, the customer\ncan manage their subscriptions and billing details. For security reasons,\nsessions are short-lived and will expire if the customer does not visit the URL.\nCreate sessions on-demand when customers intend to manage their subscriptions\nand billing details.\n\nLearn more in the [integration guide](https://stripe.com/docs/billing/subscriptions/integrating-customer-portal).",
    "properties": {
      "configuration": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A portal configuration describes the functionality and behavior of a portal session.",
          "properties": {
            "active": {
              "description": "Whether the configuration is active and can be used to create portal sessions.",
              "type": "boolean"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ],
              "description": "ID of the Connect Application that created the configuration.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_application"
                  }
                ]
              }
            },
            "business_profile": {
              "$ref": "#/components/schemas/portal_business_profile"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "default_return_url": {
              "description": "The default URL to redirect customers to when they click on the portal's link to return to your website. This can be [overriden](https://stripe.com/docs/api/customer_portal/sessions/create#create_portal_session-return_url) when creating the session.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "features": {
              "$ref": "#/components/schemas/portal_features"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "is_default": {
              "description": "Whether the configuration is the default. If `true`, this configuration can be managed in the Dashboard and portal sessions will use this configuration unless it is overriden when creating the session.",
              "type": "boolean"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "billing_portal.configuration"
              ],
              "type": "string"
            },
            "updated": {
              "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            }
          },
          "required": [
            "active",
            "business_profile",
            "created",
            "features",
            "id",
            "is_default",
            "livemode",
            "object",
            "updated"
          ],
          "title": "PortalConfiguration",
          "type": "object",
          "x-expandableFields": [
            "application",
            "business_profile",
            "features"
          ],
          "x-resourceId": "billing_portal.configuration"
        }
      ],
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "customer": {
        "description": "The ID of the customer for this session.",
        "maxLength": 5000,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "locale": {
        "description": "The IETF language tag of the locale Customer Portal is displayed in. If blank or auto, the customerâ€™s `preferred_locales` or browserâ€™s locale is used.",
        "enum": [
          "auto",
          "bg",
          "cs",
          "da",
          "de",
          "el",
          "en",
          "en-AU",
          "en-CA",
          "en-GB",
          "en-IE",
          "en-IN",
          "en-NZ",
          "en-SG",
          "es",
          "es-419",
          "et",
          "fi",
          "fil",
          "fr",
          "fr-CA",
          "hr",
          "hu",
          "id",
          "it",
          "ja",
          "ko",
          "lt",
          "lv",
          "ms",
          "mt",
          "nb",
          "nl",
          "pl",
          "pt",
          "pt-BR",
          "ro",
          "ru",
          "sk",
          "sl",
          "sv",
          "th",
          "tr",
          "vi",
          "zh",
          "zh-HK",
          "zh-TW"
        ],
        "nullable": true,
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "billing_portal.session"
        ],
        "type": "string"
      },
      "on_behalf_of": {
        "description": "The account for which the session was created on behalf of. When specified, only subscriptions and invoices with this `on_behalf_of` account appear in the portal. For more information, see the [docs](https://stripe.com/docs/connect/charges-transfers#on-behalf-of). Use the [Accounts API](https://stripe.com/docs/api/accounts/object#account_object-settings-branding) to modify the `on_behalf_of` account's branding settings, which the portal displays.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "return_url": {
        "description": "The URL to redirect customers to when they click on the portal's link to return to your website.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "url": {
        "description": "The short-lived URL of the session that gives customers access to the customer portal.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "configuration",
      "created",
      "customer",
      "id",
      "livemode",
      "object",
      "url"
    ],
    "title": "PortalSession",
    "type": "object",
    "x-expandableFields": [
      "configuration"
    ],
    "x-resourceId": "billing_portal.session"
  },
  "capability": {
    "description": "This is an object representing a capability for a Stripe account.\n\nRelated guide: [Account capabilities](https://stripe.com/docs/connect/account-capabilities).",
    "properties": {
      "account": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current e-mail address or if the account is\nenabled yet to make live charges.\n\nSome properties, marked below, are available only to platforms that want to\n[create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts).",
          "properties": {
            "business_profile": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_business_profile"
                }
              ],
              "description": "Business information about the account.",
              "nullable": true
            },
            "business_type": {
              "description": "The business type.",
              "enum": [
                "company",
                "government_entity",
                "individual",
                "non_profit"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "capabilities": {
              "$ref": "#/components/schemas/account_capabilities"
            },
            "charges_enabled": {
              "description": "Whether the account can create live charges.",
              "type": "boolean"
            },
            "company": {
              "$ref": "#/components/schemas/legal_entity_company"
            },
            "controller": {
              "$ref": "#/components/schemas/account_unification_account_controller"
            },
            "country": {
              "description": "The account's country.",
              "maxLength": 5000,
              "type": "string"
            },
            "created": {
              "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "default_currency": {
              "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
              "maxLength": 5000,
              "type": "string"
            },
            "details_submitted": {
              "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
              "type": "boolean"
            },
            "email": {
              "description": "An email address associated with the account. You can treat this as metadata: it is not used for authentication or messaging account holders.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "external_accounts": {
              "description": "External accounts (bank accounts and debit cards) currently attached to this account",
              "properties": {
                "data": {
                  "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ExternalAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "future_requirements": {
              "$ref": "#/components/schemas/account_future_requirements"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "individual": {
              "$ref": "#/components/schemas/person"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "account"
              ],
              "type": "string"
            },
            "payouts_enabled": {
              "description": "Whether Stripe can send payouts to this account.",
              "type": "boolean"
            },
            "requirements": {
              "$ref": "#/components/schemas/account_requirements"
            },
            "settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_settings"
                }
              ],
              "description": "Options for customizing how the account functions within Stripe.",
              "nullable": true
            },
            "tos_acceptance": {
              "$ref": "#/components/schemas/account_tos_acceptance"
            },
            "type": {
              "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
              "enum": [
                "custom",
                "express",
                "standard"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Account",
          "type": "object",
          "x-expandableFields": [
            "business_profile",
            "capabilities",
            "company",
            "controller",
            "external_accounts",
            "future_requirements",
            "individual",
            "requirements",
            "settings",
            "tos_acceptance"
          ],
          "x-resourceId": "account"
        }
      ],
      "future_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "current_deadline": {
            "description": "Date on which `future_requirements` merges with the main `requirements` hash and `future_requirements` becomes empty. After the transition, `currently_due` requirements may immediately become `past_due`, but the account may also be given a grace period depending on the capability's enablement state prior to transitioning.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the capability enabled. If not collected by `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "disabled_reason": {
            "description": "This is typed as a string for consistency with `requirements.disabled_reason`, but it safe to assume `future_requirements.disabled_reason` is empty because fields in `future_requirements` will never disable the account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by `requirements.current_deadline`. These fields need to be collected to enable the capability on the account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "currently_due",
          "errors",
          "eventually_due",
          "past_due",
          "pending_verification"
        ],
        "title": "AccountCapabilityFutureRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ]
      },
      "id": {
        "description": "The identifier for the capability.",
        "maxLength": 5000,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "capability"
        ],
        "type": "string"
      },
      "requested": {
        "description": "Whether the capability has been requested.",
        "type": "boolean"
      },
      "requested_at": {
        "description": "Time at which the capability was requested. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "current_deadline": {
            "description": "Date by which the fields in `currently_due` must be collected to keep the capability enabled for the account. These fields may disable the capability sooner if the next threshold is reached before they are collected.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the capability enabled. If not collected by `current_deadline`, these fields appear in `past_due` as well, and the capability is disabled.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "disabled_reason": {
            "description": "If the capability is disabled, this string describes why. Can be `requirements.past_due`, `requirements.pending_verification`, `listed`, `platform_paused`, `rejected.fraud`, `rejected.listed`, `rejected.terms_of_service`, `rejected.other`, `under_review`, or `other`.\n\n`rejected.unsupported_business` means that the account's business is not supported by the capability. For example, payment methods may restrict the businesses they support in their terms of service:\n\n- [Afterpay Clearpay's terms of service](/afterpay-clearpay/legal#restricted-businesses)\n\nIf you believe that the rejection is in error, please contact support at https://support.stripe.com/contact/ for assistance.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and `current_deadline` becomes set.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by `current_deadline`. These fields need to be collected to enable the capability on the account.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "currently_due",
          "errors",
          "eventually_due",
          "past_due",
          "pending_verification"
        ],
        "title": "AccountCapabilityRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ]
      },
      "status": {
        "description": "The status of the capability. Can be `active`, `inactive`, `pending`, or `unrequested`.",
        "enum": [
          "active",
          "disabled",
          "inactive",
          "pending",
          "unrequested"
        ],
        "type": "string"
      }
    },
    "required": [
      "account",
      "id",
      "object",
      "requested",
      "status"
    ],
    "title": "AccountCapability",
    "type": "object",
    "x-expandableFields": [
      "account",
      "future_requirements",
      "requirements"
    ],
    "x-resourceId": "capability"
  },
  "cash_balance": {
    "description": "A customer's `Cash balance` represents real funds. Customers can add funds to their cash balance by sending a bank transfer. These funds can be used for payment and can eventually be paid out to your bank account.",
    "properties": {
      "available": {
        "additionalProperties": {
          "type": "integer"
        },
        "description": "A hash of all cash balances available to this customer. You cannot delete a customer with any cash balances, even if the balance is 0. Amounts are represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
        "nullable": true,
        "type": "object"
      },
      "customer": {
        "description": "The ID of the customer whose cash balance this object represents.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "cash_balance"
        ],
        "type": "string"
      },
      "settings": {
        "description": "",
        "properties": {
          "reconciliation_mode": {
            "description": "The configuration for how funds that land in the customer cash balance are reconciled.",
            "enum": [
              "automatic",
              "manual"
            ],
            "type": "string"
          }
        },
        "required": [
          "reconciliation_mode"
        ],
        "title": "CustomerBalanceCustomerBalanceSettings",
        "type": "object",
        "x-expandableFields": []
      }
    },
    "required": [
      "customer",
      "livemode",
      "object",
      "settings"
    ],
    "title": "cash_balance",
    "type": "object",
    "x-expandableFields": [
      "settings"
    ],
    "x-resourceId": "cash_balance"
  },
  "charge": {
    "description": "To charge a credit or a debit card, you create a `Charge` object. You can\nretrieve and refund individual charges as well as list all charges. Charges\nare identified by a unique, random ID.\n\nRelated guide: [Accept a payment with the Charges API](https://stripe.com/docs/payments/accept-a-payment-charges).",
    "properties": {
      "amount": {
        "description": "Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
        "type": "integer"
      },
      "amount_captured": {
        "description": "Amount in %s captured (can be less than the amount attribute on the charge if a partial capture was made).",
        "type": "integer"
      },
      "amount_refunded": {
        "description": "Amount in %s refunded (can be less than the amount attribute on the charge if a partial refund was issued).",
        "type": "integer"
      },
      "application": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "",
          "properties": {
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "The name of the application.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Application",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "application_fee": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "",
          "properties": {
            "account": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "ID of the Stripe account this fee was taken from.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "amount": {
              "description": "Amount earned, in %s.",
              "type": "integer"
            },
            "amount_refunded": {
              "description": "Amount in %s refunded (can be less than the amount attribute on the fee if a partial refund was issued)",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that earned the fee.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "charge": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/charge"
                }
              ],
              "description": "ID of the charge that the application fee was taken from.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/charge"
                  }
                ]
              }
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application_fee"
              ],
              "type": "string"
            },
            "originating_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/charge"
                }
              ],
              "description": "ID of the corresponding charge on the platform account, if this fee was the result of a charge using the `destination` parameter.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/charge"
                  }
                ]
              }
            },
            "refunded": {
              "description": "Whether the fee has been fully refunded. If the fee is only partially refunded, this attribute will still be false.",
              "type": "boolean"
            },
            "refunds": {
              "description": "A list of refunds that have been applied to the fee.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/fee_refund"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "FeeRefundList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            }
          },
          "required": [
            "account",
            "amount",
            "amount_refunded",
            "application",
            "charge",
            "created",
            "currency",
            "id",
            "livemode",
            "object",
            "refunded",
            "refunds"
          ],
          "title": "PlatformFee",
          "type": "object",
          "x-expandableFields": [
            "account",
            "application",
            "balance_transaction",
            "charge",
            "originating_transaction",
            "refunds"
          ],
          "x-resourceId": "application_fee"
        }
      ],
      "application_fee_amount": {
        "description": "The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
        "nullable": true,
        "type": "integer"
      },
      "balance_transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Balance transactions represent funds moving through your Stripe account.\nThey're created for every type of transaction that comes into or flows out of your Stripe account balance.\n\nRelated guide: [Balance Transaction Types](https://stripe.com/docs/reports/balance-transaction-types).",
          "properties": {
            "amount": {
              "description": "Gross amount of the transaction, in %s.",
              "type": "integer"
            },
            "available_on": {
              "description": "The date the transaction's net funds will become available in the Stripe balance.",
              "format": "unix-time",
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exchange_rate": {
              "description": "The exchange rate used, if applicable, for this transaction. Specifically, if money was converted from currency A to currency B, then the `amount` in currency A, times `exchange_rate`, would be the `amount` in currency B. For example, suppose you charged a customer 10.00 EUR. Then the PaymentIntent's `amount` would be `1000` and `currency` would be `eur`. Suppose this was converted into 12.34 USD in your Stripe account. Then the BalanceTransaction's `amount` would be `1234`, `currency` would be `usd`, and `exchange_rate` would be `1.234`.",
              "nullable": true,
              "type": "number"
            },
            "fee": {
              "description": "Fees (in %s) paid for this transaction.",
              "type": "integer"
            },
            "fee_details": {
              "description": "Detailed breakdown of fees (in %s) paid for this transaction.",
              "items": {
                "$ref": "#/components/schemas/fee"
              },
              "type": "array"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "net": {
              "description": "Net amount of the transaction, in %s.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "balance_transaction"
              ],
              "type": "string"
            },
            "reporting_category": {
              "description": "[Learn more](https://stripe.com/docs/reports/reporting-categories) about how reporting categories can help you understand balance transactions from an accounting perspective.",
              "maxLength": 5000,
              "type": "string"
            },
            "source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                },
                {
                  "$ref": "#/components/schemas/charge"
                },
                {
                  "$ref": "#/components/schemas/connect_collection_transfer"
                },
                {
                  "$ref": "#/components/schemas/dispute"
                },
                {
                  "$ref": "#/components/schemas/fee_refund"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                },
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                },
                {
                  "$ref": "#/components/schemas/payout"
                },
                {
                  "$ref": "#/components/schemas/platform_tax_fee"
                },
                {
                  "$ref": "#/components/schemas/refund"
                },
                {
                  "$ref": "#/components/schemas/reserve_transaction"
                },
                {
                  "$ref": "#/components/schemas/tax_deducted_at_source"
                },
                {
                  "$ref": "#/components/schemas/topup"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ],
              "description": "The Stripe object to which this transaction is related.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  },
                  {
                    "$ref": "#/components/schemas/charge"
                  },
                  {
                    "$ref": "#/components/schemas/connect_collection_transfer"
                  },
                  {
                    "$ref": "#/components/schemas/dispute"
                  },
                  {
                    "$ref": "#/components/schemas/fee_refund"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.authorization"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.dispute"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.transaction"
                  },
                  {
                    "$ref": "#/components/schemas/payout"
                  },
                  {
                    "$ref": "#/components/schemas/platform_tax_fee"
                  },
                  {
                    "$ref": "#/components/schemas/refund"
                  },
                  {
                    "$ref": "#/components/schemas/reserve_transaction"
                  },
                  {
                    "$ref": "#/components/schemas/tax_deducted_at_source"
                  },
                  {
                    "$ref": "#/components/schemas/topup"
                  },
                  {
                    "$ref": "#/components/schemas/transfer"
                  },
                  {
                    "$ref": "#/components/schemas/transfer_reversal"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "status": {
              "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
              "maxLength": 5000,
              "type": "string"
            },
            "type": {
              "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. If you are looking to classify transactions for accounting purposes, you might want to consider `reporting_category` instead.",
              "enum": [
                "adjustment",
                "advance",
                "advance_funding",
                "anticipation_repayment",
                "application_fee",
                "application_fee_refund",
                "charge",
                "connect_collection_transfer",
                "contribution",
                "issuing_authorization_hold",
                "issuing_authorization_release",
                "issuing_dispute",
                "issuing_transaction",
                "payment",
                "payment_failure_refund",
                "payment_refund",
                "payout",
                "payout_cancel",
                "payout_failure",
                "refund",
                "refund_failure",
                "reserve_transaction",
                "reserved_funds",
                "stripe_fee",
                "stripe_fx_fee",
                "tax_fee",
                "topup",
                "topup_reversal",
                "transfer",
                "transfer_cancel",
                "transfer_failure",
                "transfer_refund"
              ],
              "type": "string"
            }
          },
          "required": [
            "amount",
            "available_on",
            "created",
            "currency",
            "fee",
            "fee_details",
            "id",
            "net",
            "object",
            "reporting_category",
            "status",
            "type"
          ],
          "title": "BalanceTransaction",
          "type": "object",
          "x-expandableFields": [
            "fee_details",
            "source"
          ],
          "x-resourceId": "balance_transaction"
        }
      ],
      "billing_details": {
        "description": "",
        "properties": {
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Billing address.",
            "nullable": true
          },
          "email": {
            "description": "Email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Full name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "phone": {
            "description": "Billing phone number (including extension).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "billing_details",
        "type": "object",
        "x-expandableFields": [
          "address"
        ]
      },
      "calculated_statement_descriptor": {
        "description": "The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "captured": {
        "description": "If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.",
        "type": "boolean"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "customer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address.",
              "nullable": true
            },
            "balance": {
              "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
              "type": "integer"
            },
            "cash_balance": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cash_balance"
                }
              ],
              "description": "The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the customer.\n\nIf you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "delinquent": {
              "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
              "nullable": true,
              "type": "boolean"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount active on the customer, if there is one.",
              "nullable": true
            },
            "email": {
              "description": "The customer's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_credit_balance": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "The current multi-currency balances, if any, being stored on the customer.If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency.If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices.They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
              "type": "object"
            },
            "invoice_prefix": {
              "description": "The prefix for the customer used to generate unique invoice numbers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_settings": {
              "$ref": "#/components/schemas/invoice_setting_customer_setting"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The customer's full name or business name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "next_invoice_sequence": {
              "description": "The suffix of the customer's next invoice number, e.g., 0001.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            },
            "phone": {
              "description": "The customer's phone number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "preferred_locales": {
              "description": "The customer's preferred locales (languages), ordered by preference.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
              "nullable": true
            },
            "sources": {
              "description": "The customer's payment sources, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      },
                      {
                        "$ref": "#/components/schemas/source"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "subscriptions": {
              "description": "The customer's current subscriptions, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "tax": {
              "$ref": "#/components/schemas/customer_tax"
            },
            "tax_exempt": {
              "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "tax_ids": {
              "description": "The customer's tax IDs.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this customer belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object"
          ],
          "title": "Customer",
          "type": "object",
          "x-expandableFields": [
            "address",
            "cash_balance",
            "default_source",
            "discount",
            "invoice_settings",
            "shipping",
            "sources",
            "subscriptions",
            "tax",
            "tax_ids",
            "test_clock"
          ],
          "x-resourceId": "customer"
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedCustomer",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "deleted_customer"
        }
      ],
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
        "maxLength": 40000,
        "nullable": true,
        "type": "string"
      },
      "disputed": {
        "description": "Whether the charge has been disputed.",
        "type": "boolean"
      },
      "failure_balance_transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Balance transactions represent funds moving through your Stripe account.\nThey're created for every type of transaction that comes into or flows out of your Stripe account balance.\n\nRelated guide: [Balance Transaction Types](https://stripe.com/docs/reports/balance-transaction-types).",
          "properties": {
            "amount": {
              "description": "Gross amount of the transaction, in %s.",
              "type": "integer"
            },
            "available_on": {
              "description": "The date the transaction's net funds will become available in the Stripe balance.",
              "format": "unix-time",
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exchange_rate": {
              "description": "The exchange rate used, if applicable, for this transaction. Specifically, if money was converted from currency A to currency B, then the `amount` in currency A, times `exchange_rate`, would be the `amount` in currency B. For example, suppose you charged a customer 10.00 EUR. Then the PaymentIntent's `amount` would be `1000` and `currency` would be `eur`. Suppose this was converted into 12.34 USD in your Stripe account. Then the BalanceTransaction's `amount` would be `1234`, `currency` would be `usd`, and `exchange_rate` would be `1.234`.",
              "nullable": true,
              "type": "number"
            },
            "fee": {
              "description": "Fees (in %s) paid for this transaction.",
              "type": "integer"
            },
            "fee_details": {
              "description": "Detailed breakdown of fees (in %s) paid for this transaction.",
              "items": {
                "$ref": "#/components/schemas/fee"
              },
              "type": "array"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "net": {
              "description": "Net amount of the transaction, in %s.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "balance_transaction"
              ],
              "type": "string"
            },
            "reporting_category": {
              "description": "[Learn more](https://stripe.com/docs/reports/reporting-categories) about how reporting categories can help you understand balance transactions from an accounting perspective.",
              "maxLength": 5000,
              "type": "string"
            },
            "source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                },
                {
                  "$ref": "#/components/schemas/charge"
                },
                {
                  "$ref": "#/components/schemas/connect_collection_transfer"
                },
                {
                  "$ref": "#/components/schemas/dispute"
                },
                {
                  "$ref": "#/components/schemas/fee_refund"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                },
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                },
                {
                  "$ref": "#/components/schemas/payout"
                },
                {
                  "$ref": "#/components/schemas/platform_tax_fee"
                },
                {
                  "$ref": "#/components/schemas/refund"
                },
                {
                  "$ref": "#/components/schemas/reserve_transaction"
                },
                {
                  "$ref": "#/components/schemas/tax_deducted_at_source"
                },
                {
                  "$ref": "#/components/schemas/topup"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ],
              "description": "The Stripe object to which this transaction is related.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  },
                  {
                    "$ref": "#/components/schemas/charge"
                  },
                  {
                    "$ref": "#/components/schemas/connect_collection_transfer"
                  },
                  {
                    "$ref": "#/components/schemas/dispute"
                  },
                  {
                    "$ref": "#/components/schemas/fee_refund"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.authorization"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.dispute"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.transaction"
                  },
                  {
                    "$ref": "#/components/schemas/payout"
                  },
                  {
                    "$ref": "#/components/schemas/platform_tax_fee"
                  },
                  {
                    "$ref": "#/components/schemas/refund"
                  },
                  {
                    "$ref": "#/components/schemas/reserve_transaction"
                  },
                  {
                    "$ref": "#/components/schemas/tax_deducted_at_source"
                  },
                  {
                    "$ref": "#/components/schemas/topup"
                  },
                  {
                    "$ref": "#/components/schemas/transfer"
                  },
                  {
                    "$ref": "#/components/schemas/transfer_reversal"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "status": {
              "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
              "maxLength": 5000,
              "type": "string"
            },
            "type": {
              "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. If you are looking to classify transactions for accounting purposes, you might want to consider `reporting_category` instead.",
              "enum": [
                "adjustment",
                "advance",
                "advance_funding",
                "anticipation_repayment",
                "application_fee",
                "application_fee_refund",
                "charge",
                "connect_collection_transfer",
                "contribution",
                "issuing_authorization_hold",
                "issuing_authorization_release",
                "issuing_dispute",
                "issuing_transaction",
                "payment",
                "payment_failure_refund",
                "payment_refund",
                "payout",
                "payout_cancel",
                "payout_failure",
                "refund",
                "refund_failure",
                "reserve_transaction",
                "reserved_funds",
                "stripe_fee",
                "stripe_fx_fee",
                "tax_fee",
                "topup",
                "topup_reversal",
                "transfer",
                "transfer_cancel",
                "transfer_failure",
                "transfer_refund"
              ],
              "type": "string"
            }
          },
          "required": [
            "amount",
            "available_on",
            "created",
            "currency",
            "fee",
            "fee_details",
            "id",
            "net",
            "object",
            "reporting_category",
            "status",
            "type"
          ],
          "title": "BalanceTransaction",
          "type": "object",
          "x-expandableFields": [
            "fee_details",
            "source"
          ],
          "x-resourceId": "balance_transaction"
        }
      ],
      "failure_code": {
        "description": "Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "failure_message": {
        "description": "Message to user further explaining reason for charge failure if available.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "fraud_details": [
        {
          "description": "",
          "properties": {
            "stripe_report": {
              "description": "Assessments from Stripe. If set, the value is `fraudulent`.",
              "maxLength": 5000,
              "type": "string"
            },
            "user_report": {
              "description": "Assessments reported by you. If set, possible values of are `safe` and `fraudulent`.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "title": "ChargeFraudDetails",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "invoice": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Invoices are statements of amounts owed by a customer, and are either\ngenerated one-off, or generated periodically from a subscription.\n\nThey contain [invoice items](https://stripe.com/docs/api#invoiceitems), and proration adjustments\nthat may be caused by subscription upgrades/downgrades (if necessary).\n\nIf your invoice is configured to be billed through automatic charges,\nStripe automatically finalizes your invoice and attempts payment. Note\nthat finalizing the invoice,\n[when automatic](https://stripe.com/docs/billing/invoices/workflow/#auto_advance), does\nnot happen immediately as the invoice is created. Stripe waits\nuntil one hour after the last webhook was successfully sent (or the last\nwebhook timed out after failing). If you (and the platforms you may have\nconnected to) have no webhooks configured, Stripe waits one hour after\ncreation to finalize the invoice.\n\nIf your invoice is configured to be billed by sending an email, then based on your\n[email settings](https://dashboard.stripe.com/account/billing/automatic),\nStripe will email the invoice to your customer and await payment. These\nemails can contain a link to a hosted page to pay the invoice.\n\nStripe applies any customer credit on the account before determining the\namount due for the invoice (i.e., the amount that will be actually\ncharged). If the amount due for the invoice is less than Stripe's [minimum allowed charge\nper currency](/docs/currencies#minimum-and-maximum-charge-amounts), the\ninvoice is automatically marked paid, and we add the amount due to the\ncustomer's credit balance which is applied to the next invoice.\n\nMore details on the customer's credit balance are\n[here](https://stripe.com/docs/billing/customer/balance).\n\nRelated guide: [Send Invoices to Customers](https://stripe.com/docs/billing/invoices/sending).",
          "properties": {
            "account_country": {
              "description": "The country of the business associated with this invoice, most often the business creating the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_name": {
              "description": "The public name of the business associated with this invoice, most often the business creating the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_tax_ids": {
              "description": "The account tax IDs associated with the invoice. Only editable when the invoice is a draft.",
              "items": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_tax_id"
                  }
                ],
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/tax_id"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_tax_id"
                    }
                  ]
                }
              },
              "nullable": true,
              "type": "array"
            },
            "amount_due": {
              "description": "Final amount due at this time for this invoice. If the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.",
              "type": "integer"
            },
            "amount_paid": {
              "description": "The amount, in %s, that was paid.",
              "type": "integer"
            },
            "amount_remaining": {
              "description": "The difference between amount_due and amount_paid, in %s.",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ],
              "description": "ID of the Connect Application that created the invoice.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_application"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The fee in %s that will be applied to the invoice and transferred to the application owner's Stripe account when the invoice is paid.",
              "nullable": true,
              "type": "integer"
            },
            "attempt_count": {
              "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule.",
              "type": "integer"
            },
            "attempted": {
              "description": "Whether an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.",
              "type": "boolean"
            },
            "auto_advance": {
              "description": "Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance) of the invoice. When `false`, the invoice's state will not automatically advance without an explicit action.",
              "type": "boolean"
            },
            "automatic_tax": {
              "$ref": "#/components/schemas/automatic_tax"
            },
            "billing_reason": {
              "description": "Indicates the reason why the invoice was created. `subscription_cycle` indicates an invoice created by a subscription advancing into a new period. `subscription_create` indicates an invoice created due to creating a subscription. `subscription_update` indicates an invoice created due to updating a subscription. `subscription` is set for all old invoices to indicate either a change to a subscription or a period advancement. `manual` is set for all invoices unrelated to a subscription (for example: created via the invoice editor). The `upcoming` value is reserved for simulated invoices per the upcoming invoice endpoint. `subscription_threshold` indicates an invoice created due to a billing threshold being reached.",
              "enum": [
                "automatic_pending_invoice_item_invoice",
                "manual",
                "quote_accept",
                "subscription",
                "subscription_create",
                "subscription_cycle",
                "subscription_threshold",
                "subscription_update",
                "upcoming"
              ],
              "nullable": true,
              "type": "string"
            },
            "charge": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/charge"
                }
              ],
              "description": "ID of the latest charge generated for this invoice, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/charge"
                  }
                ]
              }
            },
            "collection_method": {
              "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.",
              "enum": [
                "charge_automatically",
                "send_invoice"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "custom_fields": {
              "description": "Custom fields displayed on the invoice.",
              "items": {
                "$ref": "#/components/schemas/invoice_setting_custom_field"
              },
              "nullable": true,
              "type": "array"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The ID of the customer who will be billed.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "customer_address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address. Until the invoice is finalized, this field will equal `customer.address`. Once the invoice is finalized, this field will no longer be updated.",
              "nullable": true
            },
            "customer_email": {
              "description": "The customer's email. Until the invoice is finalized, this field will equal `customer.email`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_name": {
              "description": "The customer's name. Until the invoice is finalized, this field will equal `customer.name`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_phone": {
              "description": "The customer's phone number. Until the invoice is finalized, this field will equal `customer.phone`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "The customer's shipping information. Until the invoice is finalized, this field will equal `customer.shipping`. Once the invoice is finalized, this field will no longer be updated.",
              "nullable": true
            },
            "customer_tax_exempt": {
              "description": "The customer's tax exempt status. Until the invoice is finalized, this field will equal `customer.tax_exempt`. Once the invoice is finalized, this field will no longer be updated.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "customer_tax_ids": {
              "description": "The customer's tax IDs. Until the invoice is finalized, this field will contain the same tax IDs as `customer.tax_ids`. Once the invoice is finalized, this field will no longer be updated.",
              "items": {
                "$ref": "#/components/schemas/invoices_resource_invoice_tax_id"
              },
              "nullable": true,
              "type": "array"
            },
            "default_payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "default_tax_rates": {
              "description": "The tax rates applied to this invoice, if any.",
              "items": {
                "$ref": "#/components/schemas/tax_rate"
              },
              "type": "array"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount applied to this invoice, if there is one. Not populated if there are multiple discounts.",
              "nullable": true
            },
            "discounts": {
              "description": "The discounts applied to the invoice. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
              "items": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/discount"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_discount"
                  }
                ],
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/discount"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_discount"
                    }
                  ]
                }
              },
              "nullable": true,
              "type": "array"
            },
            "due_date": {
              "description": "The date on which payment for this invoice is due. This value will be `null` for invoices where `collection_method=charge_automatically`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "ending_balance": {
              "description": "Ending customer balance after the invoice is finalized. Invoices are finalized approximately an hour after successful webhook delivery or when payment collection is attempted for the invoice. If the invoice has not been finalized yet, this will be null.",
              "nullable": true,
              "type": "integer"
            },
            "footer": {
              "description": "Footer displayed on the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "hosted_invoice_url": {
              "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_pdf": {
              "description": "The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "last_finalization_error": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/api_errors"
                }
              ],
              "description": "The error encountered during the previous attempt to finalize the invoice. This field is cleared when the invoice is successfully finalized.",
              "nullable": true
            },
            "lines": {
              "description": "The individual line items that make up the invoice. `lines` is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/line_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "InvoiceLinesList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "next_payment_attempt": {
              "description": "The time at which payment will next be attempted. This value will be `null` for invoices where `collection_method=send_invoice`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "number": {
              "description": "A unique, identifying string that appears on emails sent to the customer for this invoice. This starts with the customer's unique invoice_prefix if it is specified.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "invoice"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "paid": {
              "description": "Whether payment was successfully collected for this invoice. An invoice can be paid (most commonly) with a charge or with credit from the customer's account balance.",
              "type": "boolean"
            },
            "paid_out_of_band": {
              "description": "Returns true if the invoice was manually marked paid, returns false if the invoice hasn't been paid yet or was paid on Stripe.",
              "type": "boolean"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "The PaymentIntent associated with this invoice. The PaymentIntent is generated when the invoice is finalized, and can then be used to pay the invoice. Note that voiding an invoice will cancel the PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "payment_settings": {
              "$ref": "#/components/schemas/invoices_payment_settings"
            },
            "period_end": {
              "description": "End of the usage period during which invoice items were added to this invoice.",
              "format": "unix-time",
              "type": "integer"
            },
            "period_start": {
              "description": "Start of the usage period during which invoice items were added to this invoice.",
              "format": "unix-time",
              "type": "integer"
            },
            "post_payment_credit_notes_amount": {
              "description": "Total amount of all post-payment credit notes issued for this invoice.",
              "type": "integer"
            },
            "pre_payment_credit_notes_amount": {
              "description": "Total amount of all pre-payment credit notes issued for this invoice.",
              "type": "integer"
            },
            "quote": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/quote"
                }
              ],
              "description": "The quote this invoice was generated from.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/quote"
                  }
                ]
              }
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "rendering_options": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/invoice_setting_rendering_options"
                }
              ],
              "description": "Options for invoice PDF rendering.",
              "nullable": true
            },
            "starting_balance": {
              "description": "Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance.",
              "type": "integer"
            },
            "statement_descriptor": {
              "description": "Extra information about an invoice for the customer's credit card statement.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)",
              "enum": [
                "deleted",
                "draft",
                "open",
                "paid",
                "uncollectible",
                "void"
              ],
              "nullable": true,
              "type": "string"
            },
            "status_transitions": {
              "$ref": "#/components/schemas/invoices_status_transitions"
            },
            "subscription": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ],
              "description": "The subscription that this invoice was prepared for, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/subscription"
                  }
                ]
              }
            },
            "subscription_proration_date": {
              "description": "Only set for upcoming invoices that preview prorations. The time used to calculate prorations.",
              "type": "integer"
            },
            "subtotal": {
              "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or exclusive tax is applied. Item discounts are already incorporated",
              "type": "integer"
            },
            "subtotal_excluding_tax": {
              "description": "The integer amount in %s representing the subtotal of the invoice before any invoice level discount or tax is applied. Item discounts are already incorporated",
              "nullable": true,
              "type": "integer"
            },
            "tax": {
              "description": "The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice.",
              "nullable": true,
              "type": "integer"
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this invoice belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            },
            "threshold_reason": {
              "$ref": "#/components/schemas/invoice_threshold_reason"
            },
            "total": {
              "description": "Total after discounts and taxes.",
              "type": "integer"
            },
            "total_discount_amounts": {
              "description": "The aggregate amounts calculated per discount across all line items.",
              "items": {
                "$ref": "#/components/schemas/discounts_resource_discount_amount"
              },
              "nullable": true,
              "type": "array"
            },
            "total_excluding_tax": {
              "description": "The integer amount in %s representing the total amount of the invoice including all discounts but excluding all tax.",
              "nullable": true,
              "type": "integer"
            },
            "total_tax_amounts": {
              "description": "The aggregate amounts calculated per tax rate for all line items.",
              "items": {
                "$ref": "#/components/schemas/invoice_tax_amount"
              },
              "type": "array"
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/invoice_transfer_data"
                }
              ],
              "description": "The account (if any) the payment will be attributed to for tax reporting, and where funds from the payment will be transferred to for the invoice.",
              "nullable": true
            },
            "webhooks_delivered_at": {
              "description": "Invoices are automatically paid or sent 1 hour after webhooks are delivered, or until all webhook delivery attempts have [been exhausted](https://stripe.com/docs/billing/webhooks#understand). This field tracks the time when webhooks for this invoice were successfully delivered. If the invoice had no webhooks to deliver, this will be set while the invoice is being created.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            }
          },
          "required": [
            "amount_due",
            "amount_paid",
            "amount_remaining",
            "attempt_count",
            "attempted",
            "automatic_tax",
            "collection_method",
            "created",
            "currency",
            "default_tax_rates",
            "lines",
            "livemode",
            "object",
            "paid",
            "paid_out_of_band",
            "payment_settings",
            "period_end",
            "period_start",
            "post_payment_credit_notes_amount",
            "pre_payment_credit_notes_amount",
            "starting_balance",
            "status_transitions",
            "subtotal",
            "total",
            "total_tax_amounts"
          ],
          "title": "Invoice",
          "type": "object",
          "x-expandableFields": [
            "account_tax_ids",
            "application",
            "automatic_tax",
            "charge",
            "custom_fields",
            "customer",
            "customer_address",
            "customer_shipping",
            "customer_tax_ids",
            "default_payment_method",
            "default_source",
            "default_tax_rates",
            "discount",
            "discounts",
            "last_finalization_error",
            "lines",
            "on_behalf_of",
            "payment_intent",
            "payment_settings",
            "quote",
            "rendering_options",
            "status_transitions",
            "subscription",
            "test_clock",
            "threshold_reason",
            "total_discount_amounts",
            "total_tax_amounts",
            "transfer_data"
          ],
          "x-resourceId": "invoice"
        }
      ],
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "charge"
        ],
        "type": "string"
      },
      "on_behalf_of": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current e-mail address or if the account is\nenabled yet to make live charges.\n\nSome properties, marked below, are available only to platforms that want to\n[create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts).",
          "properties": {
            "business_profile": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_business_profile"
                }
              ],
              "description": "Business information about the account.",
              "nullable": true
            },
            "business_type": {
              "description": "The business type.",
              "enum": [
                "company",
                "government_entity",
                "individual",
                "non_profit"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "capabilities": {
              "$ref": "#/components/schemas/account_capabilities"
            },
            "charges_enabled": {
              "description": "Whether the account can create live charges.",
              "type": "boolean"
            },
            "company": {
              "$ref": "#/components/schemas/legal_entity_company"
            },
            "controller": {
              "$ref": "#/components/schemas/account_unification_account_controller"
            },
            "country": {
              "description": "The account's country.",
              "maxLength": 5000,
              "type": "string"
            },
            "created": {
              "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "default_currency": {
              "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
              "maxLength": 5000,
              "type": "string"
            },
            "details_submitted": {
              "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
              "type": "boolean"
            },
            "email": {
              "description": "An email address associated with the account. You can treat this as metadata: it is not used for authentication or messaging account holders.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "external_accounts": {
              "description": "External accounts (bank accounts and debit cards) currently attached to this account",
              "properties": {
                "data": {
                  "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ExternalAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "future_requirements": {
              "$ref": "#/components/schemas/account_future_requirements"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "individual": {
              "$ref": "#/components/schemas/person"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "account"
              ],
              "type": "string"
            },
            "payouts_enabled": {
              "description": "Whether Stripe can send payouts to this account.",
              "type": "boolean"
            },
            "requirements": {
              "$ref": "#/components/schemas/account_requirements"
            },
            "settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_settings"
                }
              ],
              "description": "Options for customizing how the account functions within Stripe.",
              "nullable": true
            },
            "tos_acceptance": {
              "$ref": "#/components/schemas/account_tos_acceptance"
            },
            "type": {
              "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
              "enum": [
                "custom",
                "express",
                "standard"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Account",
          "type": "object",
          "x-expandableFields": [
            "business_profile",
            "capabilities",
            "company",
            "controller",
            "external_accounts",
            "future_requirements",
            "individual",
            "requirements",
            "settings",
            "tos_acceptance"
          ],
          "x-resourceId": "account"
        }
      ],
      "outcome": [
        {
          "description": "",
          "properties": {
            "network_status": {
              "description": "Possible values are `approved_by_network`, `declined_by_network`, `not_sent_to_network`, and `reversed_after_approval`. The value `reversed_after_approval` indicates the payment was [blocked by Stripe](https://stripe.com/docs/declines#blocked-payments) after bank authorization, and may temporarily appear as \"pending\" on a cardholder's statement.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "reason": {
              "description": "An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](https://stripe.com/docs/declines) for more details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "risk_level": {
              "description": "Stripe Radar's evaluation of the riskiness of the payment. Possible values for evaluated payments are `normal`, `elevated`, `highest`. For non-card payments, and card-based payments predating the public assignment of risk levels, this field will have the value `not_assessed`. In the event of an error in the evaluation, this field will have the value `unknown`. This field is only available with Radar.",
              "maxLength": 5000,
              "type": "string"
            },
            "risk_score": {
              "description": "Stripe Radar's evaluation of the riskiness of the payment. Possible values for evaluated payments are between 0 and 100. For non-card payments, card-based payments predating the public assignment of risk scores, or in the event of an error during evaluation, this field will not be present. This field is only available with Radar for Fraud Teams.",
              "type": "integer"
            },
            "rule": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/rule"
                }
              ],
              "description": "The ID of the Radar rule that matched the payment, if applicable.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/rule"
                  }
                ]
              }
            },
            "seller_message": {
              "description": "A human-readable description of the outcome type and reason, designed for you (the recipient of the payment), not your customer.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Possible values are `authorized`, `manual_review`, `issuer_declined`, `blocked`, and `invalid`. See [understanding declines](https://stripe.com/docs/declines) and [Radar reviews](https://stripe.com/docs/radar/reviews) for details.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "ChargeOutcome",
          "type": "object",
          "x-expandableFields": [
            "rule"
          ]
        }
      ],
      "paid": {
        "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
        "type": "boolean"
      },
      "payment_intent": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A PaymentIntent guides you through the process of collecting a payment from your customer.\nWe recommend that you create exactly one PaymentIntent for each order or\ncustomer session in your system. You can reference the PaymentIntent later to\nsee the history of payment attempts for a particular session.\n\nA PaymentIntent transitions through\n[multiple statuses](https://stripe.com/docs/payments/intents#intent-statuses)\nthroughout its lifetime as it interfaces with Stripe.js to perform\nauthentication flows and ultimately creates at most one successful charge.\n\nRelated guide: [Payment Intents API](https://stripe.com/docs/payments/payment-intents).",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "amount_capturable": {
              "description": "Amount that can be captured from this PaymentIntent.",
              "type": "integer"
            },
            "amount_details": {
              "$ref": "#/components/schemas/payment_flows_amount_details"
            },
            "amount_received": {
              "description": "Amount that was collected by this PaymentIntent.",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
              "nullable": true,
              "type": "integer"
            },
            "automatic_payment_methods": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_flows_automatic_payment_methods_payment_intent"
                }
              ],
              "description": "Settings to configure compatible payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods)",
              "nullable": true
            },
            "canceled_at": {
              "description": "Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "cancellation_reason": {
              "description": "Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`).",
              "enum": [
                "abandoned",
                "automatic",
                "duplicate",
                "failed_invoice",
                "fraudulent",
                "requested_by_customer",
                "void_invoice"
              ],
              "nullable": true,
              "type": "string"
            },
            "capture_method": {
              "description": "Controls when the funds will be captured from the customer's account.",
              "enum": [
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "charges": {
              "description": "Charges that were created by this PaymentIntent, if any.",
              "properties": {
                "data": {
                  "description": "This list only contains the latest charge, even if there were previously multiple unsuccessful charges. To view all previous charges for a PaymentIntent, you can filter the charges list using the `payment_intent` [parameter](https://stripe.com/docs/api/charges/list#list_charges-payment_intent).",
                  "items": {
                    "$ref": "#/components/schemas/charge"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentFlowsPaymentIntentResourceChargeList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "client_secret": {
              "description": "The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. \n\nThe client secret can be used to complete a payment from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.\n\nRefer to our docs to [accept a payment](https://stripe.com/docs/payments/accept-a-payment?ui=elements) and learn about how `client_secret` should be handled.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "confirmation_method": {
              "enum": [
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the Customer this PaymentIntent belongs to, if one exists.\n\nPayment methods attached to other Customers cannot be used with this PaymentIntent.\n\nIf present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "ID of the invoice that created this PaymentIntent, if it exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "last_payment_error": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/api_errors"
                }
              ],
              "description": "The payment error encountered in the previous PaymentIntent confirmation. It will be cleared if the PaymentIntent is later updated for any reason.",
              "nullable": true
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. For more information, see the [documentation](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).",
              "type": "object"
            },
            "next_action": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_next_action"
                }
              ],
              "description": "If present, this property tells you what actions you need to take in order for your customer to fulfill a payment using the provided source.",
              "nullable": true
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "payment_intent"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) for which the funds of the PaymentIntent are intended. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the payment method used in this PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "payment_method_options": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_payment_method_options"
                }
              ],
              "description": "Payment-method-specific configuration for this PaymentIntent.",
              "nullable": true
            },
            "payment_method_types": {
              "description": "The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "processing": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_processing"
                }
              ],
              "description": "If present, this property tells you about the processing state of the payment.",
              "nullable": true
            },
            "receipt_email": {
              "description": "Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "review": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/review"
                }
              ],
              "description": "ID of the review associated with this PaymentIntent, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/review"
                  }
                ]
              }
            },
            "setup_future_usage": {
              "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
              "enum": [
                "off_session",
                "on_session"
              ],
              "nullable": true,
              "type": "string"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Shipping information for this PaymentIntent.",
              "nullable": true
            },
            "statement_descriptor": {
              "description": "For non-card charges, you can use this value as the complete description that appears on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "statement_descriptor_suffix": {
              "description": "Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "Status of this PaymentIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `requires_capture`, `canceled`, or `succeeded`. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses).",
              "enum": [
                "canceled",
                "processing",
                "requires_action",
                "requires_capture",
                "requires_confirmation",
                "requires_payment_method",
                "succeeded"
              ],
              "type": "string"
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/transfer_data"
                }
              ],
              "description": "The data with which to automatically create a Transfer when the payment is finalized. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "nullable": true
            },
            "transfer_group": {
              "description": "A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "capture_method",
            "confirmation_method",
            "created",
            "currency",
            "id",
            "livemode",
            "object",
            "payment_method_types",
            "status"
          ],
          "title": "PaymentIntent",
          "type": "object",
          "x-expandableFields": [
            "amount_details",
            "application",
            "automatic_payment_methods",
            "charges",
            "customer",
            "invoice",
            "last_payment_error",
            "next_action",
            "on_behalf_of",
            "payment_method",
            "payment_method_options",
            "processing",
            "review",
            "shipping",
            "transfer_data"
          ],
          "x-resourceId": "payment_intent"
        }
      ],
      "payment_method": {
        "description": "ID of the payment method used in this charge.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "payment_method_details": [
        {
          "description": "",
          "properties": {
            "ach_credit_transfer": {
              "$ref": "#/components/schemas/payment_method_details_ach_credit_transfer"
            },
            "ach_debit": {
              "$ref": "#/components/schemas/payment_method_details_ach_debit"
            },
            "acss_debit": {
              "$ref": "#/components/schemas/payment_method_details_acss_debit"
            },
            "affirm": {
              "$ref": "#/components/schemas/payment_method_details_affirm"
            },
            "afterpay_clearpay": {
              "$ref": "#/components/schemas/payment_method_details_afterpay_clearpay"
            },
            "alipay": {
              "$ref": "#/components/schemas/payment_flows_private_payment_methods_alipay_details"
            },
            "au_becs_debit": {
              "$ref": "#/components/schemas/payment_method_details_au_becs_debit"
            },
            "bacs_debit": {
              "$ref": "#/components/schemas/payment_method_details_bacs_debit"
            },
            "bancontact": {
              "$ref": "#/components/schemas/payment_method_details_bancontact"
            },
            "blik": {
              "$ref": "#/components/schemas/payment_method_details_blik"
            },
            "boleto": {
              "$ref": "#/components/schemas/payment_method_details_boleto"
            },
            "card": {
              "$ref": "#/components/schemas/payment_method_details_card"
            },
            "card_present": {
              "$ref": "#/components/schemas/payment_method_details_card_present"
            },
            "customer_balance": {
              "$ref": "#/components/schemas/payment_method_details_customer_balance"
            },
            "eps": {
              "$ref": "#/components/schemas/payment_method_details_eps"
            },
            "fpx": {
              "$ref": "#/components/schemas/payment_method_details_fpx"
            },
            "giropay": {
              "$ref": "#/components/schemas/payment_method_details_giropay"
            },
            "grabpay": {
              "$ref": "#/components/schemas/payment_method_details_grabpay"
            },
            "ideal": {
              "$ref": "#/components/schemas/payment_method_details_ideal"
            },
            "interac_present": {
              "$ref": "#/components/schemas/payment_method_details_interac_present"
            },
            "klarna": {
              "$ref": "#/components/schemas/payment_method_details_klarna"
            },
            "konbini": {
              "$ref": "#/components/schemas/payment_method_details_konbini"
            },
            "link": {
              "$ref": "#/components/schemas/payment_method_details_link"
            },
            "multibanco": {
              "$ref": "#/components/schemas/payment_method_details_multibanco"
            },
            "oxxo": {
              "$ref": "#/components/schemas/payment_method_details_oxxo"
            },
            "p24": {
              "$ref": "#/components/schemas/payment_method_details_p24"
            },
            "paynow": {
              "$ref": "#/components/schemas/payment_method_details_paynow"
            },
            "promptpay": {
              "$ref": "#/components/schemas/payment_method_details_promptpay"
            },
            "sepa_debit": {
              "$ref": "#/components/schemas/payment_method_details_sepa_debit"
            },
            "sofort": {
              "$ref": "#/components/schemas/payment_method_details_sofort"
            },
            "stripe_account": {
              "$ref": "#/components/schemas/payment_method_details_stripe_account"
            },
            "type": {
              "description": "The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `ach_debit`, `acss_debit`, `alipay`, `au_becs_debit`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `klarna`, `multibanco`, `p24`, `sepa_debit`, `sofort`, `stripe_account`, or `wechat`.\nAn additional hash is included on `payment_method_details` with a name matching this value.\nIt contains information specific to the payment method.",
              "maxLength": 5000,
              "type": "string"
            },
            "us_bank_account": {
              "$ref": "#/components/schemas/payment_method_details_us_bank_account"
            },
            "wechat": {
              "$ref": "#/components/schemas/payment_method_details_wechat"
            },
            "wechat_pay": {
              "$ref": "#/components/schemas/payment_method_details_wechat_pay"
            }
          },
          "required": [
            "type"
          ],
          "title": "payment_method_details",
          "type": "object",
          "x-expandableFields": [
            "ach_credit_transfer",
            "ach_debit",
            "acss_debit",
            "affirm",
            "afterpay_clearpay",
            "alipay",
            "au_becs_debit",
            "bacs_debit",
            "bancontact",
            "blik",
            "boleto",
            "card",
            "card_present",
            "customer_balance",
            "eps",
            "fpx",
            "giropay",
            "grabpay",
            "ideal",
            "interac_present",
            "klarna",
            "konbini",
            "link",
            "multibanco",
            "oxxo",
            "p24",
            "paynow",
            "promptpay",
            "sepa_debit",
            "sofort",
            "stripe_account",
            "us_bank_account",
            "wechat",
            "wechat_pay"
          ]
        }
      ],
      "radar_options": {
        "description": "Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.",
        "properties": {
          "session": {
            "description": "A [Radar Session](https://stripe.com/docs/radar/radar-session) is a snapshot of the browser metadata and device details that help Radar make more accurate predictions on your payments.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "RadarRadarOptions",
        "type": "object",
        "x-expandableFields": []
      },
      "receipt_email": {
        "description": "This is the email address that the receipt for this charge was sent to.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "receipt_number": {
        "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "receipt_url": {
        "description": "This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "refunded": {
        "description": "Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.",
        "type": "boolean"
      },
      "refunds": {
        "description": "A list of refunds that have been applied to the charge.",
        "properties": {
          "data": {
            "description": "Details about each object.",
            "items": {
              "description": "`Refund` objects allow you to refund a charge that has previously been created\nbut not yet refunded. Funds will be refunded to the credit or debit card that\nwas originally charged.\n\nRelated guide: [Refunds](https://stripe.com/docs/refunds).",
              "properties": {
                "amount": {
                  "description": "Amount, in %s.",
                  "type": "integer"
                },
                "balance_transaction": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/balance_transaction"
                    }
                  ],
                  "description": "Balance transaction that describes the impact on your account balance.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/balance_transaction"
                      }
                    ]
                  }
                },
                "charge": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/charge"
                    }
                  ],
                  "description": "ID of the charge that was refunded.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/charge"
                      }
                    ]
                  }
                },
                "created": {
                  "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                  "format": "unix-time",
                  "type": "integer"
                },
                "currency": {
                  "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                  "type": "string"
                },
                "description": {
                  "description": "An arbitrary string attached to the object. Often useful for displaying to users. (Available on non-card refunds only)",
                  "maxLength": 5000,
                  "type": "string"
                },
                "failure_balance_transaction": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/balance_transaction"
                    }
                  ],
                  "description": "If the refund failed, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.",
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/balance_transaction"
                      }
                    ]
                  }
                },
                "failure_reason": {
                  "description": "If the refund failed, the reason for refund failure if known. Possible values are `lost_or_stolen_card`, `expired_or_canceled_card`, or `unknown`.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "id": {
                  "description": "Unique identifier for the object.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "instructions_email": {
                  "description": "Email to which refund instructions, if required, are sent to.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "metadata": {
                  "additionalProperties": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                  "nullable": true,
                  "type": "object"
                },
                "next_action": {
                  "$ref": "#/components/schemas/refund_next_action"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "refund"
                  ],
                  "type": "string"
                },
                "payment_intent": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/payment_intent"
                    }
                  ],
                  "description": "ID of the PaymentIntent that was refunded.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/payment_intent"
                      }
                    ]
                  }
                },
                "reason": {
                  "description": "Reason for the refund, either user-provided (`duplicate`, `fraudulent`, or `requested_by_customer`) or generated by Stripe internally (`expired_uncaptured_charge`).",
                  "enum": [
                    "duplicate",
                    "expired_uncaptured_charge",
                    "fraudulent",
                    "requested_by_customer"
                  ],
                  "nullable": true,
                  "type": "string",
                  "x-stripeBypassValidation": true
                },
                "receipt_number": {
                  "description": "This is the transaction number that appears on email receipts sent for this refund.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "source_transfer_reversal": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/transfer_reversal"
                    }
                  ],
                  "description": "The transfer reversal that is associated with the refund. Only present if the charge came from another Stripe account. See the Connect documentation for details.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/transfer_reversal"
                      }
                    ]
                  }
                },
                "status": {
                  "description": "Status of the refund. For credit card refunds, this can be `pending`, `succeeded`, or `failed`. For other types of refunds, it can be `pending`, `requires_action`, `succeeded`, `failed`, or `canceled`. Refer to our [refunds](https://stripe.com/docs/refunds#failed-refunds) documentation for more details.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "transfer_reversal": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/transfer_reversal"
                    }
                  ],
                  "description": "If the accompanying transfer was reversed, the transfer reversal object. Only applicable if the charge was created using the destination parameter.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/transfer_reversal"
                      }
                    ]
                  }
                }
              },
              "required": [
                "amount",
                "created",
                "currency",
                "id",
                "object"
              ],
              "title": "Refund",
              "type": "object",
              "x-expandableFields": [
                "balance_transaction",
                "charge",
                "failure_balance_transaction",
                "next_action",
                "payment_intent",
                "source_transfer_reversal",
                "transfer_reversal"
              ],
              "x-resourceId": "refund"
            },
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "RefundList",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      },
      "review": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Reviews can be used to supplement automated fraud detection with human expertise.\n\nLearn more about [Radar](/radar) and reviewing payments\n[here](https://stripe.com/docs/radar/reviews).",
          "properties": {
            "billing_zip": {
              "description": "The ZIP or postal code of the card used, if applicable.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "charge": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/charge"
                }
              ],
              "description": "The charge associated with this review.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/charge"
                  }
                ]
              }
            },
            "closed_reason": {
              "description": "The reason the review was closed, or null if it has not yet been closed. One of `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.",
              "enum": [
                "approved",
                "disputed",
                "redacted",
                "refunded",
                "refunded_as_fraud"
              ],
              "nullable": true,
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "ip_address": {
              "description": "The IP address where the payment originated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "ip_address_location": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/radar_review_resource_location"
                }
              ],
              "description": "Information related to the location of the payment. Note that this information is an approximation and attempts to locate the nearest population center - it should not be used to determine a specific address.",
              "nullable": true
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "review"
              ],
              "type": "string"
            },
            "open": {
              "description": "If `true`, the review needs action.",
              "type": "boolean"
            },
            "opened_reason": {
              "description": "The reason the review was opened. One of `rule` or `manual`.",
              "enum": [
                "manual",
                "rule"
              ],
              "type": "string"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "The PaymentIntent ID associated with this review, if one exists.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "reason": {
              "description": "The reason the review is currently open or closed. One of `rule`, `manual`, `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.",
              "maxLength": 5000,
              "type": "string"
            },
            "session": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/radar_review_resource_session"
                }
              ],
              "description": "Information related to the browsing session of the user who initiated the payment.",
              "nullable": true
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object",
            "open",
            "opened_reason",
            "reason"
          ],
          "title": "RadarReview",
          "type": "object",
          "x-expandableFields": [
            "charge",
            "ip_address_location",
            "payment_intent",
            "session"
          ],
          "x-resourceId": "review"
        }
      ],
      "shipping": [
        {
          "description": "",
          "properties": {
            "address": {
              "$ref": "#/components/schemas/address"
            },
            "carrier": {
              "description": "The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "name": {
              "description": "Recipient name.",
              "maxLength": 5000,
              "type": "string"
            },
            "phone": {
              "description": "Recipient phone (including extension).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tracking_number": {
              "description": "The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "Shipping",
          "type": "object",
          "x-expandableFields": [
            "address"
          ]
        }
      ],
      "source_transfer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A `Transfer` object is created when you move funds between Stripe accounts as\npart of Connect.\n\nBefore April 6, 2017, transfers also represented movement of funds from a\nStripe account to a card or bank account. This behavior has since been split\nout into a [Payout](https://stripe.com/docs/api#payout_object) object, with corresponding payout endpoints. For more\ninformation, read about the\n[transfer/payout split](https://stripe.com/docs/transfer-payout-split).\n\nRelated guide: [Creating Separate Charges and Transfers](https://stripe.com/docs/connect/charges-transfers).",
          "properties": {
            "amount": {
              "description": "Amount in %s to be transferred.",
              "type": "integer"
            },
            "amount_reversed": {
              "description": "Amount in %s reversed (can be less than the amount attribute on the transfer if a partial reversal was issued).",
              "type": "integer"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "Balance transaction that describes the impact of this transfer on your account balance.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "created": {
              "description": "Time that this record of the transfer was first created.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "destination": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "ID of the Stripe account the transfer was sent to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "destination_payment": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/charge"
                }
              ],
              "description": "If the destination is a Stripe account, this will be the ID of the payment that the destination account received for the transfer.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/charge"
                  }
                ]
              }
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "transfer"
              ],
              "type": "string"
            },
            "reversals": {
              "description": "A list of reversals that have been applied to the transfer.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/transfer_reversal"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TransferReversalList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "reversed": {
              "description": "Whether the transfer has been fully reversed. If the transfer is only partially reversed, this attribute will still be false.",
              "type": "boolean"
            },
            "source_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/charge"
                }
              ],
              "description": "ID of the charge or payment that was used to fund the transfer. If null, the transfer was funded from the available balance.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/charge"
                  }
                ]
              }
            },
            "source_type": {
              "description": "The source balance this transfer came from. One of `card`, `fpx`, or `bank_account`.",
              "maxLength": 5000,
              "type": "string"
            },
            "transfer_group": {
              "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "amount_reversed",
            "created",
            "currency",
            "id",
            "livemode",
            "metadata",
            "object",
            "reversals",
            "reversed"
          ],
          "title": "Transfer",
          "type": "object",
          "x-expandableFields": [
            "balance_transaction",
            "destination",
            "destination_payment",
            "reversals",
            "source_transaction"
          ],
          "x-resourceId": "transfer"
        }
      ],
      "statement_descriptor": {
        "description": "For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "statement_descriptor_suffix": {
        "description": "Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "status": {
        "description": "The status of the payment is either `succeeded`, `pending`, or `failed`.",
        "enum": [
          "failed",
          "pending",
          "succeeded"
        ],
        "type": "string"
      },
      "transfer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A `Transfer` object is created when you move funds between Stripe accounts as\npart of Connect.\n\nBefore April 6, 2017, transfers also represented movement of funds from a\nStripe account to a card or bank account. This behavior has since been split\nout into a [Payout](https://stripe.com/docs/api#payout_object) object, with corresponding payout endpoints. For more\ninformation, read about the\n[transfer/payout split](https://stripe.com/docs/transfer-payout-split).\n\nRelated guide: [Creating Separate Charges and Transfers](https://stripe.com/docs/connect/charges-transfers).",
          "properties": {
            "amount": {
              "description": "Amount in %s to be transferred.",
              "type": "integer"
            },
            "amount_reversed": {
              "description": "Amount in %s reversed (can be less than the amount attribute on the transfer if a partial reversal was issued).",
              "type": "integer"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "Balance transaction that describes the impact of this transfer on your account balance.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "created": {
              "description": "Time that this record of the transfer was first created.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "destination": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "ID of the Stripe account the transfer was sent to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "destination_payment": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/charge"
                }
              ],
              "description": "If the destination is a Stripe account, this will be the ID of the payment that the destination account received for the transfer.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/charge"
                  }
                ]
              }
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "transfer"
              ],
              "type": "string"
            },
            "reversals": {
              "description": "A list of reversals that have been applied to the transfer.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/transfer_reversal"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TransferReversalList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "reversed": {
              "description": "Whether the transfer has been fully reversed. If the transfer is only partially reversed, this attribute will still be false.",
              "type": "boolean"
            },
            "source_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/charge"
                }
              ],
              "description": "ID of the charge or payment that was used to fund the transfer. If null, the transfer was funded from the available balance.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/charge"
                  }
                ]
              }
            },
            "source_type": {
              "description": "The source balance this transfer came from. One of `card`, `fpx`, or `bank_account`.",
              "maxLength": 5000,
              "type": "string"
            },
            "transfer_group": {
              "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "amount_reversed",
            "created",
            "currency",
            "id",
            "livemode",
            "metadata",
            "object",
            "reversals",
            "reversed"
          ],
          "title": "Transfer",
          "type": "object",
          "x-expandableFields": [
            "balance_transaction",
            "destination",
            "destination_payment",
            "reversals",
            "source_transaction"
          ],
          "x-resourceId": "transfer"
        }
      ],
      "transfer_data": [
        {
          "description": "",
          "properties": {
            "amount": {
              "description": "The amount transferred to the destination account, if specified. By default, the entire charge amount is transferred to the destination account.",
              "nullable": true,
              "type": "integer"
            },
            "destination": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "ID of an existing, connected Stripe account to transfer funds to if `transfer_data` was specified in the charge request.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            }
          },
          "required": [
            "destination"
          ],
          "title": "ChargeTransferData",
          "type": "object",
          "x-expandableFields": [
            "destination"
          ]
        }
      ],
      "transfer_group": {
        "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      }
    },
    "required": [
      "amount",
      "amount_captured",
      "amount_refunded",
      "billing_details",
      "captured",
      "created",
      "currency",
      "disputed",
      "id",
      "livemode",
      "metadata",
      "object",
      "paid",
      "refunded",
      "refunds",
      "status"
    ],
    "title": "Charge",
    "type": "object",
    "x-expandableFields": [
      "application",
      "application_fee",
      "balance_transaction",
      "billing_details",
      "customer",
      "failure_balance_transaction",
      "fraud_details",
      "invoice",
      "on_behalf_of",
      "outcome",
      "payment_intent",
      "payment_method_details",
      "radar_options",
      "refunds",
      "review",
      "shipping",
      "source_transfer",
      "transfer",
      "transfer_data"
    ],
    "x-resourceId": "charge"
  },
  "dispute": {
    "description": "A dispute occurs when a customer questions your charge with their card issuer.\nWhen this happens, you're given the opportunity to respond to the dispute with\nevidence that shows that the charge is legitimate. You can find more\ninformation about the dispute process in our [Disputes and\nFraud](/docs/disputes) documentation.\n\nRelated guide: [Disputes and Fraud](https://stripe.com/docs/disputes).",
    "properties": {
      "amount": {
        "description": "Disputed amount. Usually the amount of the charge, but can differ (usually because of currency fluctuation or because only part of the order is disputed).",
        "type": "integer"
      },
      "balance_transactions": {
        "description": "List of zero, one, or two balance transactions that show funds withdrawn and reinstated to your Stripe account as a result of this dispute.",
        "items": {
          "description": "Balance transactions represent funds moving through your Stripe account.\nThey're created for every type of transaction that comes into or flows out of your Stripe account balance.\n\nRelated guide: [Balance Transaction Types](https://stripe.com/docs/reports/balance-transaction-types).",
          "properties": {
            "amount": {
              "description": "Gross amount of the transaction, in %s.",
              "type": "integer"
            },
            "available_on": {
              "description": "The date the transaction's net funds will become available in the Stripe balance.",
              "format": "unix-time",
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exchange_rate": {
              "description": "The exchange rate used, if applicable, for this transaction. Specifically, if money was converted from currency A to currency B, then the `amount` in currency A, times `exchange_rate`, would be the `amount` in currency B. For example, suppose you charged a customer 10.00 EUR. Then the PaymentIntent's `amount` would be `1000` and `currency` would be `eur`. Suppose this was converted into 12.34 USD in your Stripe account. Then the BalanceTransaction's `amount` would be `1234`, `currency` would be `usd`, and `exchange_rate` would be `1.234`.",
              "nullable": true,
              "type": "number"
            },
            "fee": {
              "description": "Fees (in %s) paid for this transaction.",
              "type": "integer"
            },
            "fee_details": {
              "description": "Detailed breakdown of fees (in %s) paid for this transaction.",
              "items": {
                "$ref": "#/components/schemas/fee"
              },
              "type": "array"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "net": {
              "description": "Net amount of the transaction, in %s.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "balance_transaction"
              ],
              "type": "string"
            },
            "reporting_category": {
              "description": "[Learn more](https://stripe.com/docs/reports/reporting-categories) about how reporting categories can help you understand balance transactions from an accounting perspective.",
              "maxLength": 5000,
              "type": "string"
            },
            "source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                },
                {
                  "$ref": "#/components/schemas/charge"
                },
                {
                  "$ref": "#/components/schemas/connect_collection_transfer"
                },
                {
                  "$ref": "#/components/schemas/dispute"
                },
                {
                  "$ref": "#/components/schemas/fee_refund"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                },
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                },
                {
                  "$ref": "#/components/schemas/payout"
                },
                {
                  "$ref": "#/components/schemas/platform_tax_fee"
                },
                {
                  "$ref": "#/components/schemas/refund"
                },
                {
                  "$ref": "#/components/schemas/reserve_transaction"
                },
                {
                  "$ref": "#/components/schemas/tax_deducted_at_source"
                },
                {
                  "$ref": "#/components/schemas/topup"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ],
              "description": "The Stripe object to which this transaction is related.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  },
                  {
                    "$ref": "#/components/schemas/charge"
                  },
                  {
                    "$ref": "#/components/schemas/connect_collection_transfer"
                  },
                  {
                    "$ref": "#/components/schemas/dispute"
                  },
                  {
                    "$ref": "#/components/schemas/fee_refund"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.authorization"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.dispute"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.transaction"
                  },
                  {
                    "$ref": "#/components/schemas/payout"
                  },
                  {
                    "$ref": "#/components/schemas/platform_tax_fee"
                  },
                  {
                    "$ref": "#/components/schemas/refund"
                  },
                  {
                    "$ref": "#/components/schemas/reserve_transaction"
                  },
                  {
                    "$ref": "#/components/schemas/tax_deducted_at_source"
                  },
                  {
                    "$ref": "#/components/schemas/topup"
                  },
                  {
                    "$ref": "#/components/schemas/transfer"
                  },
                  {
                    "$ref": "#/components/schemas/transfer_reversal"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "status": {
              "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
              "maxLength": 5000,
              "type": "string"
            },
            "type": {
              "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. If you are looking to classify transactions for accounting purposes, you might want to consider `reporting_category` instead.",
              "enum": [
                "adjustment",
                "advance",
                "advance_funding",
                "anticipation_repayment",
                "application_fee",
                "application_fee_refund",
                "charge",
                "connect_collection_transfer",
                "contribution",
                "issuing_authorization_hold",
                "issuing_authorization_release",
                "issuing_dispute",
                "issuing_transaction",
                "payment",
                "payment_failure_refund",
                "payment_refund",
                "payout",
                "payout_cancel",
                "payout_failure",
                "refund",
                "refund_failure",
                "reserve_transaction",
                "reserved_funds",
                "stripe_fee",
                "stripe_fx_fee",
                "tax_fee",
                "topup",
                "topup_reversal",
                "transfer",
                "transfer_cancel",
                "transfer_failure",
                "transfer_refund"
              ],
              "type": "string"
            }
          },
          "required": [
            "amount",
            "available_on",
            "created",
            "currency",
            "fee",
            "fee_details",
            "id",
            "net",
            "object",
            "reporting_category",
            "status",
            "type"
          ],
          "title": "BalanceTransaction",
          "type": "object",
          "x-expandableFields": [
            "fee_details",
            "source"
          ],
          "x-resourceId": "balance_transaction"
        },
        "type": "array"
      },
      "charge": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "To charge a credit or a debit card, you create a `Charge` object. You can\nretrieve and refund individual charges as well as list all charges. Charges\nare identified by a unique, random ID.\n\nRelated guide: [Accept a payment with the Charges API](https://stripe.com/docs/payments/accept-a-payment-charges).",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "amount_captured": {
              "description": "Amount in %s captured (can be less than the amount attribute on the charge if a partial capture was made).",
              "type": "integer"
            },
            "amount_refunded": {
              "description": "Amount in %s refunded (can be less than the amount attribute on the charge if a partial refund was issued).",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the charge.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "application_fee": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                }
              ],
              "description": "The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "type": "integer"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "billing_details": {
              "$ref": "#/components/schemas/billing_details"
            },
            "calculated_statement_descriptor": {
              "description": "The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "captured": {
              "description": "If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.",
              "type": "boolean"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the customer this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 40000,
              "nullable": true,
              "type": "string"
            },
            "disputed": {
              "description": "Whether the charge has been disputed.",
              "type": "boolean"
            },
            "failure_balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the reversal of the balance on your account due to payment failure.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "failure_code": {
              "description": "Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "failure_message": {
              "description": "Message to user further explaining reason for charge failure if available.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "fraud_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_fraud_details"
                }
              ],
              "description": "Information on fraud assessments for the charge.",
              "nullable": true
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "ID of the invoice this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "charge"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "outcome": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_outcome"
                }
              ],
              "description": "Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details.",
              "nullable": true
            },
            "paid": {
              "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
              "type": "boolean"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "ID of the PaymentIntent associated with this charge, if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "payment_method": {
              "description": "ID of the payment method used in this charge.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "payment_method_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_details"
                }
              ],
              "description": "Details about the payment method at the time of the transaction.",
              "nullable": true
            },
            "radar_options": {
              "$ref": "#/components/schemas/radar_radar_options"
            },
            "receipt_email": {
              "description": "This is the email address that the receipt for this charge was sent to.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_url": {
              "description": "This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "refunded": {
              "description": "Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.",
              "type": "boolean"
            },
            "refunds": {
              "description": "A list of refunds that have been applied to the charge.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/refund"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "RefundList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "review": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/review"
                }
              ],
              "description": "ID of the review associated with this charge if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/review"
                  }
                ]
              }
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Shipping information for the charge.",
              "nullable": true
            },
            "source_transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "statement_descriptor": {
              "description": "For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "statement_descriptor_suffix": {
              "description": "Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the payment is either `succeeded`, `pending`, or `failed`.",
              "enum": [
                "failed",
                "pending",
                "succeeded"
              ],
              "type": "string"
            },
            "transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_transfer_data"
                }
              ],
              "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true
            },
            "transfer_group": {
              "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "amount_captured",
            "amount_refunded",
            "billing_details",
            "captured",
            "created",
            "currency",
            "disputed",
            "id",
            "livemode",
            "metadata",
            "object",
            "paid",
            "refunded",
            "refunds",
            "status"
          ],
          "title": "Charge",
          "type": "object",
          "x-expandableFields": [
            "application",
            "application_fee",
            "balance_transaction",
            "billing_details",
            "customer",
            "failure_balance_transaction",
            "fraud_details",
            "invoice",
            "on_behalf_of",
            "outcome",
            "payment_intent",
            "payment_method_details",
            "radar_options",
            "refunds",
            "review",
            "shipping",
            "source_transfer",
            "transfer",
            "transfer_data"
          ],
          "x-resourceId": "charge"
        }
      ],
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "evidence": {
        "description": "",
        "properties": {
          "access_activity_log": {
            "description": "Any server or activity logs showing proof that the customer accessed or downloaded the purchased digital product. This information should include IP addresses, corresponding timestamps, and any detailed recorded activity.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "billing_address": {
            "description": "The billing address provided by the customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cancellation_policy": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your subscription cancellation policy, as shown to the customer.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "cancellation_policy_disclosure": {
            "description": "An explanation of how and when the customer was shown your refund policy prior to purchase.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "cancellation_rebuttal": {
            "description": "A justification for why the customer's subscription was not canceled.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "customer_communication": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any communication with the customer that you feel is relevant to your case. Examples include emails proving that the customer received the product or service, or demonstrating their use of or satisfaction with the product or service.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "customer_email_address": {
            "description": "The email address of the customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer_name": {
            "description": "The name of the customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer_purchase_ip": {
            "description": "The IP address that the customer used when making the purchase.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer_signature": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A relevant document or contract showing the customer's signature.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "duplicate_charge_documentation": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation for the prior charge that can uniquely identify the charge, such as a receipt, shipping label, work order, etc. This document should be paired with a similar document from the disputed payment that proves the two payments are separate.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "duplicate_charge_explanation": {
            "description": "An explanation of the difference between the disputed charge versus the prior charge that appears to be a duplicate.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "duplicate_charge_id": {
            "description": "The Stripe ID for the prior charge which appears to be a duplicate of the disputed charge.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "product_description": {
            "description": "A description of the product or service that was sold.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "receipt": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any receipt or message sent to the customer notifying them of the charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "refund_policy": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your refund policy, as shown to the customer.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "refund_policy_disclosure": {
            "description": "Documentation demonstrating that the customer was shown your refund policy prior to purchase.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "refund_refusal_explanation": {
            "description": "A justification for why the customer is not entitled to a refund.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "service_date": {
            "description": "The date on which the customer received or began receiving the purchased service, in a clear human-readable format.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "service_documentation": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a service was provided to the customer. This could include a copy of a signed contract, work order, or other form of written agreement.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "shipping_address": {
            "description": "The address to which a physical product was shipped. You should try to include as complete address information as possible.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_carrier": {
            "description": "The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc. If multiple carriers were used for this purchase, please separate them with commas.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_date": {
            "description": "The date on which a physical product began its route to the shipping address, in a clear human-readable format.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_documentation": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a product was shipped to the customer at the same address the customer provided to you. This could include a copy of the shipment receipt, shipping label, etc. It should show the customer's full shipping address, if possible.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "shipping_tracking_number": {
            "description": "The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "uncategorized_file": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any additional evidence or statements.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "uncategorized_text": {
            "description": "Any additional evidence or statements.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "DisputeEvidence",
        "type": "object",
        "x-expandableFields": [
          "cancellation_policy",
          "customer_communication",
          "customer_signature",
          "duplicate_charge_documentation",
          "receipt",
          "refund_policy",
          "service_documentation",
          "shipping_documentation",
          "uncategorized_file"
        ]
      },
      "evidence_details": {
        "description": "",
        "properties": {
          "due_by": {
            "description": "Date by which evidence must be submitted in order to successfully challenge dispute. Will be null if the customer's bank or credit card company doesn't allow a response for this particular dispute.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "has_evidence": {
            "description": "Whether evidence has been staged for this dispute.",
            "type": "boolean"
          },
          "past_due": {
            "description": "Whether the last evidence submission was submitted past the due date. Defaults to `false` if no evidence submissions have occurred. If `true`, then delivery of the latest evidence is *not* guaranteed.",
            "type": "boolean"
          },
          "submission_count": {
            "description": "The number of times evidence has been submitted. Typically, you may only submit evidence once.",
            "type": "integer"
          }
        },
        "required": [
          "has_evidence",
          "past_due",
          "submission_count"
        ],
        "title": "DisputeEvidenceDetails",
        "type": "object",
        "x-expandableFields": []
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "is_charge_refundable": {
        "description": "If true, it is still possible to refund the disputed payment. Once the payment has been fully refunded, no further funds will be withdrawn from your Stripe account as a result of this dispute.",
        "type": "boolean"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "dispute"
        ],
        "type": "string"
      },
      "payment_intent": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A PaymentIntent guides you through the process of collecting a payment from your customer.\nWe recommend that you create exactly one PaymentIntent for each order or\ncustomer session in your system. You can reference the PaymentIntent later to\nsee the history of payment attempts for a particular session.\n\nA PaymentIntent transitions through\n[multiple statuses](https://stripe.com/docs/payments/intents#intent-statuses)\nthroughout its lifetime as it interfaces with Stripe.js to perform\nauthentication flows and ultimately creates at most one successful charge.\n\nRelated guide: [Payment Intents API](https://stripe.com/docs/payments/payment-intents).",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "amount_capturable": {
              "description": "Amount that can be captured from this PaymentIntent.",
              "type": "integer"
            },
            "amount_details": {
              "$ref": "#/components/schemas/payment_flows_amount_details"
            },
            "amount_received": {
              "description": "Amount that was collected by this PaymentIntent.",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
              "nullable": true,
              "type": "integer"
            },
            "automatic_payment_methods": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_flows_automatic_payment_methods_payment_intent"
                }
              ],
              "description": "Settings to configure compatible payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods)",
              "nullable": true
            },
            "canceled_at": {
              "description": "Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "cancellation_reason": {
              "description": "Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`).",
              "enum": [
                "abandoned",
                "automatic",
                "duplicate",
                "failed_invoice",
                "fraudulent",
                "requested_by_customer",
                "void_invoice"
              ],
              "nullable": true,
              "type": "string"
            },
            "capture_method": {
              "description": "Controls when the funds will be captured from the customer's account.",
              "enum": [
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "charges": {
              "description": "Charges that were created by this PaymentIntent, if any.",
              "properties": {
                "data": {
                  "description": "This list only contains the latest charge, even if there were previously multiple unsuccessful charges. To view all previous charges for a PaymentIntent, you can filter the charges list using the `payment_intent` [parameter](https://stripe.com/docs/api/charges/list#list_charges-payment_intent).",
                  "items": {
                    "$ref": "#/components/schemas/charge"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentFlowsPaymentIntentResourceChargeList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "client_secret": {
              "description": "The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. \n\nThe client secret can be used to complete a payment from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.\n\nRefer to our docs to [accept a payment](https://stripe.com/docs/payments/accept-a-payment?ui=elements) and learn about how `client_secret` should be handled.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "confirmation_method": {
              "enum": [
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the Customer this PaymentIntent belongs to, if one exists.\n\nPayment methods attached to other Customers cannot be used with this PaymentIntent.\n\nIf present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "ID of the invoice that created this PaymentIntent, if it exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "last_payment_error": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/api_errors"
                }
              ],
              "description": "The payment error encountered in the previous PaymentIntent confirmation. It will be cleared if the PaymentIntent is later updated for any reason.",
              "nullable": true
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. For more information, see the [documentation](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).",
              "type": "object"
            },
            "next_action": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_next_action"
                }
              ],
              "description": "If present, this property tells you what actions you need to take in order for your customer to fulfill a payment using the provided source.",
              "nullable": true
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "payment_intent"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) for which the funds of the PaymentIntent are intended. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the payment method used in this PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "payment_method_options": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_payment_method_options"
                }
              ],
              "description": "Payment-method-specific configuration for this PaymentIntent.",
              "nullable": true
            },
            "payment_method_types": {
              "description": "The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "processing": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_processing"
                }
              ],
              "description": "If present, this property tells you about the processing state of the payment.",
              "nullable": true
            },
            "receipt_email": {
              "description": "Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "review": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/review"
                }
              ],
              "description": "ID of the review associated with this PaymentIntent, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/review"
                  }
                ]
              }
            },
            "setup_future_usage": {
              "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
              "enum": [
                "off_session",
                "on_session"
              ],
              "nullable": true,
              "type": "string"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Shipping information for this PaymentIntent.",
              "nullable": true
            },
            "statement_descriptor": {
              "description": "For non-card charges, you can use this value as the complete description that appears on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "statement_descriptor_suffix": {
              "description": "Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "Status of this PaymentIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `requires_capture`, `canceled`, or `succeeded`. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses).",
              "enum": [
                "canceled",
                "processing",
                "requires_action",
                "requires_capture",
                "requires_confirmation",
                "requires_payment_method",
                "succeeded"
              ],
              "type": "string"
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/transfer_data"
                }
              ],
              "description": "The data with which to automatically create a Transfer when the payment is finalized. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "nullable": true
            },
            "transfer_group": {
              "description": "A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "capture_method",
            "confirmation_method",
            "created",
            "currency",
            "id",
            "livemode",
            "object",
            "payment_method_types",
            "status"
          ],
          "title": "PaymentIntent",
          "type": "object",
          "x-expandableFields": [
            "amount_details",
            "application",
            "automatic_payment_methods",
            "charges",
            "customer",
            "invoice",
            "last_payment_error",
            "next_action",
            "on_behalf_of",
            "payment_method",
            "payment_method_options",
            "processing",
            "review",
            "shipping",
            "transfer_data"
          ],
          "x-resourceId": "payment_intent"
        }
      ],
      "reason": {
        "description": "Reason given by cardholder for dispute. Possible values are `bank_cannot_process`, `check_returned`, `credit_not_processed`, `customer_initiated`, `debit_not_authorized`, `duplicate`, `fraudulent`, `general`, `incorrect_account_details`, `insufficient_funds`, `product_not_received`, `product_unacceptable`, `subscription_canceled`, or `unrecognized`. Read more about [dispute reasons](https://stripe.com/docs/disputes/categories).",
        "maxLength": 5000,
        "type": "string"
      },
      "status": {
        "description": "Current status of dispute. Possible values are `warning_needs_response`, `warning_under_review`, `warning_closed`, `needs_response`, `under_review`, `charge_refunded`, `won`, or `lost`.",
        "enum": [
          "charge_refunded",
          "lost",
          "needs_response",
          "under_review",
          "warning_closed",
          "warning_needs_response",
          "warning_under_review",
          "won"
        ],
        "type": "string"
      }
    },
    "required": [
      "amount",
      "balance_transactions",
      "charge",
      "created",
      "currency",
      "evidence",
      "evidence_details",
      "id",
      "is_charge_refundable",
      "livemode",
      "metadata",
      "object",
      "reason",
      "status"
    ],
    "title": "Dispute",
    "type": "object",
    "x-expandableFields": [
      "balance_transactions",
      "charge",
      "evidence",
      "evidence_details",
      "payment_intent"
    ],
    "x-resourceId": "dispute"
  },
  "coupon": {
    "description": "A coupon contains information about a percent-off or amount-off discount you\nmight want to apply to a customer. Coupons may be applied to [subscriptions](https://stripe.com/docs/api#subscriptions), [invoices](https://stripe.com/docs/api#invoices),\n[checkout sessions](https://stripe.com/docs/api/checkout/sessions), [quotes](https://stripe.com/docs/api#quotes), and more. Coupons do not work with conventional one-off [charges](https://stripe.com/docs/api#create_charge) or [payment intents](https://stripe.com/docs/api/payment_intents).",
    "properties": {
      "amount_off": {
        "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.",
        "nullable": true,
        "type": "integer"
      },
      "applies_to": {
        "description": "",
        "properties": {
          "products": {
            "description": "A list of product IDs this coupon applies to",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "products"
        ],
        "title": "CouponAppliesTo",
        "type": "object",
        "x-expandableFields": []
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "If `amount_off` has been set, the three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the amount to take off.",
        "nullable": true,
        "type": "string"
      },
      "currency_options": {
        "additionalProperties": {
          "description": "",
          "properties": {
            "amount_off": {
              "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.",
              "type": "integer"
            }
          },
          "required": [
            "amount_off"
          ],
          "title": "CouponCurrencyOption",
          "type": "object",
          "x-expandableFields": []
        },
        "description": "Coupons defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
        "type": "object"
      },
      "duration": {
        "description": "One of `forever`, `once`, and `repeating`. Describes how long a customer who applies this coupon will get the discount.",
        "enum": [
          "forever",
          "once",
          "repeating"
        ],
        "type": "string"
      },
      "duration_in_months": {
        "description": "If `duration` is `repeating`, the number of months the coupon applies. Null if coupon `duration` is `forever` or `once`.",
        "nullable": true,
        "type": "integer"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "max_redemptions": {
        "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.",
        "nullable": true,
        "type": "integer"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "name": {
        "description": "Name of the coupon displayed to customers on for instance invoices or receipts.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "coupon"
        ],
        "type": "string"
      },
      "percent_off": {
        "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a %s100 invoice %s50 instead.",
        "nullable": true,
        "type": "number"
      },
      "redeem_by": {
        "description": "Date after which the coupon can no longer be redeemed.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "times_redeemed": {
        "description": "Number of times this coupon has been applied to a customer.",
        "type": "integer"
      },
      "valid": {
        "description": "Taking account of the above properties, whether this coupon can still be applied to a customer.",
        "type": "boolean"
      }
    },
    "required": [
      "created",
      "duration",
      "id",
      "livemode",
      "object",
      "times_redeemed",
      "valid"
    ],
    "title": "Coupon",
    "type": "object",
    "x-expandableFields": [
      "applies_to",
      "currency_options"
    ],
    "x-resourceId": "coupon"
  },
  "credit_note": {
    "description": "Issue a credit note to adjust an invoice's amount after the invoice is finalized.\n\nRelated guide: [Credit Notes](https://stripe.com/docs/billing/invoices/credit-notes).",
    "properties": {
      "amount": {
        "description": "The integer amount in %s representing the total amount of the credit note, including tax.",
        "type": "integer"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "customer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address.",
              "nullable": true
            },
            "balance": {
              "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
              "type": "integer"
            },
            "cash_balance": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cash_balance"
                }
              ],
              "description": "The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the customer.\n\nIf you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "delinquent": {
              "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
              "nullable": true,
              "type": "boolean"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount active on the customer, if there is one.",
              "nullable": true
            },
            "email": {
              "description": "The customer's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_credit_balance": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "The current multi-currency balances, if any, being stored on the customer.If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency.If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices.They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
              "type": "object"
            },
            "invoice_prefix": {
              "description": "The prefix for the customer used to generate unique invoice numbers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_settings": {
              "$ref": "#/components/schemas/invoice_setting_customer_setting"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The customer's full name or business name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "next_invoice_sequence": {
              "description": "The suffix of the customer's next invoice number, e.g., 0001.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            },
            "phone": {
              "description": "The customer's phone number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "preferred_locales": {
              "description": "The customer's preferred locales (languages), ordered by preference.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
              "nullable": true
            },
            "sources": {
              "description": "The customer's payment sources, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      },
                      {
                        "$ref": "#/components/schemas/source"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "subscriptions": {
              "description": "The customer's current subscriptions, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "tax": {
              "$ref": "#/components/schemas/customer_tax"
            },
            "tax_exempt": {
              "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "tax_ids": {
              "description": "The customer's tax IDs.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this customer belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object"
          ],
          "title": "Customer",
          "type": "object",
          "x-expandableFields": [
            "address",
            "cash_balance",
            "default_source",
            "discount",
            "invoice_settings",
            "shipping",
            "sources",
            "subscriptions",
            "tax",
            "tax_ids",
            "test_clock"
          ],
          "x-resourceId": "customer"
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedCustomer",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "deleted_customer"
        }
      ],
      "customer_balance_transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Each customer has a [`balance`](https://stripe.com/docs/api/customers/object#customer_object-balance) value,\nwhich denotes a debit or credit that's automatically applied to their next invoice upon finalization.\nYou may modify the value directly by using the [update customer API](https://stripe.com/docs/api/customers/update),\nor by creating a Customer Balance Transaction, which increments or decrements the customer's `balance` by the specified `amount`.\n\nRelated guide: [Customer Balance](https://stripe.com/docs/billing/customer/balance) to learn more.",
          "properties": {
            "amount": {
              "description": "The amount of the transaction. A negative value is a credit for the customer's balance, and a positive value is a debit to the customer's `balance`.",
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "credit_note": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/credit_note"
                }
              ],
              "description": "The ID of the credit note (if any) related to the transaction.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/credit_note"
                  }
                ]
              }
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                }
              ],
              "description": "The ID of the customer the transaction belongs to.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "ending_balance": {
              "description": "The customer's `balance` after the transaction was applied. A negative value decreases the amount due on the customer's next invoice. A positive value increases the amount due on the customer's next invoice.",
              "type": "integer"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "The ID of the invoice (if any) related to the transaction.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer_balance_transaction"
              ],
              "type": "string"
            },
            "type": {
              "description": "Transaction type: `adjustment`, `applied_to_invoice`, `credit_note`, `initial`, `invoice_too_large`, `invoice_too_small`, `unspent_receiver_credit`, or `unapplied_from_invoice`. See the [Customer Balance page](https://stripe.com/docs/billing/customer/balance#types) to learn more about transaction types.",
              "enum": [
                "adjustment",
                "applied_to_invoice",
                "credit_note",
                "initial",
                "invoice_too_large",
                "invoice_too_small",
                "migration",
                "unapplied_from_invoice",
                "unspent_receiver_credit"
              ],
              "type": "string"
            }
          },
          "required": [
            "amount",
            "created",
            "currency",
            "customer",
            "ending_balance",
            "id",
            "livemode",
            "object",
            "type"
          ],
          "title": "CustomerBalanceTransaction",
          "type": "object",
          "x-expandableFields": [
            "credit_note",
            "customer",
            "invoice"
          ],
          "x-resourceId": "customer_balance_transaction"
        }
      ],
      "discount_amount": {
        "description": "The integer amount in %s representing the total amount of discount that was credited.",
        "type": "integer"
      },
      "discount_amounts": {
        "description": "The aggregate amounts calculated per discount for all line items.",
        "items": {
          "description": "",
          "properties": {
            "amount": {
              "description": "The amount, in %s, of the discount.",
              "type": "integer"
            },
            "discount": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/discount"
                },
                {
                  "$ref": "#/components/schemas/deleted_discount"
                }
              ],
              "description": "The discount that was applied to get this discount amount.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/discount"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_discount"
                  }
                ]
              }
            }
          },
          "required": [
            "amount",
            "discount"
          ],
          "title": "DiscountsResourceDiscountAmount",
          "type": "object",
          "x-expandableFields": [
            "discount"
          ]
        },
        "type": "array"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "invoice": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Invoices are statements of amounts owed by a customer, and are either\ngenerated one-off, or generated periodically from a subscription.\n\nThey contain [invoice items](https://stripe.com/docs/api#invoiceitems), and proration adjustments\nthat may be caused by subscription upgrades/downgrades (if necessary).\n\nIf your invoice is configured to be billed through automatic charges,\nStripe automatically finalizes your invoice and attempts payment. Note\nthat finalizing the invoice,\n[when automatic](https://stripe.com/docs/billing/invoices/workflow/#auto_advance), does\nnot happen immediately as the invoice is created. Stripe waits\nuntil one hour after the last webhook was successfully sent (or the last\nwebhook timed out after failing). If you (and the platforms you may have\nconnected to) have no webhooks configured, Stripe waits one hour after\ncreation to finalize the invoice.\n\nIf your invoice is configured to be billed by sending an email, then based on your\n[email settings](https://dashboard.stripe.com/account/billing/automatic),\nStripe will email the invoice to your customer and await payment. These\nemails can contain a link to a hosted page to pay the invoice.\n\nStripe applies any customer credit on the account before determining the\namount due for the invoice (i.e., the amount that will be actually\ncharged). If the amount due for the invoice is less than Stripe's [minimum allowed charge\nper currency](/docs/currencies#minimum-and-maximum-charge-amounts), the\ninvoice is automatically marked paid, and we add the amount due to the\ncustomer's credit balance which is applied to the next invoice.\n\nMore details on the customer's credit balance are\n[here](https://stripe.com/docs/billing/customer/balance).\n\nRelated guide: [Send Invoices to Customers](https://stripe.com/docs/billing/invoices/sending).",
          "properties": {
            "account_country": {
              "description": "The country of the business associated with this invoice, most often the business creating the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_name": {
              "description": "The public name of the business associated with this invoice, most often the business creating the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_tax_ids": {
              "description": "The account tax IDs associated with the invoice. Only editable when the invoice is a draft.",
              "items": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_tax_id"
                  }
                ],
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/tax_id"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_tax_id"
                    }
                  ]
                }
              },
              "nullable": true,
              "type": "array"
            },
            "amount_due": {
              "description": "Final amount due at this time for this invoice. If the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.",
              "type": "integer"
            },
            "amount_paid": {
              "description": "The amount, in %s, that was paid.",
              "type": "integer"
            },
            "amount_remaining": {
              "description": "The difference between amount_due and amount_paid, in %s.",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ],
              "description": "ID of the Connect Application that created the invoice.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_application"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The fee in %s that will be applied to the invoice and transferred to the application owner's Stripe account when the invoice is paid.",
              "nullable": true,
              "type": "integer"
            },
            "attempt_count": {
              "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule.",
              "type": "integer"
            },
            "attempted": {
              "description": "Whether an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.",
              "type": "boolean"
            },
            "auto_advance": {
              "description": "Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance) of the invoice. When `false`, the invoice's state will not automatically advance without an explicit action.",
              "type": "boolean"
            },
            "automatic_tax": {
              "$ref": "#/components/schemas/automatic_tax"
            },
            "billing_reason": {
              "description": "Indicates the reason why the invoice was created. `subscription_cycle` indicates an invoice created by a subscription advancing into a new period. `subscription_create` indicates an invoice created due to creating a subscription. `subscription_update` indicates an invoice created due to updating a subscription. `subscription` is set for all old invoices to indicate either a change to a subscription or a period advancement. `manual` is set for all invoices unrelated to a subscription (for example: created via the invoice editor). The `upcoming` value is reserved for simulated invoices per the upcoming invoice endpoint. `subscription_threshold` indicates an invoice created due to a billing threshold being reached.",
              "enum": [
                "automatic_pending_invoice_item_invoice",
                "manual",
                "quote_accept",
                "subscription",
                "subscription_create",
                "subscription_cycle",
                "subscription_threshold",
                "subscription_update",
                "upcoming"
              ],
              "nullable": true,
              "type": "string"
            },
            "charge": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/charge"
                }
              ],
              "description": "ID of the latest charge generated for this invoice, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/charge"
                  }
                ]
              }
            },
            "collection_method": {
              "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.",
              "enum": [
                "charge_automatically",
                "send_invoice"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "custom_fields": {
              "description": "Custom fields displayed on the invoice.",
              "items": {
                "$ref": "#/components/schemas/invoice_setting_custom_field"
              },
              "nullable": true,
              "type": "array"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The ID of the customer who will be billed.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "customer_address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address. Until the invoice is finalized, this field will equal `customer.address`. Once the invoice is finalized, this field will no longer be updated.",
              "nullable": true
            },
            "customer_email": {
              "description": "The customer's email. Until the invoice is finalized, this field will equal `customer.email`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_name": {
              "description": "The customer's name. Until the invoice is finalized, this field will equal `customer.name`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_phone": {
              "description": "The customer's phone number. Until the invoice is finalized, this field will equal `customer.phone`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "The customer's shipping information. Until the invoice is finalized, this field will equal `customer.shipping`. Once the invoice is finalized, this field will no longer be updated.",
              "nullable": true
            },
            "customer_tax_exempt": {
              "description": "The customer's tax exempt status. Until the invoice is finalized, this field will equal `customer.tax_exempt`. Once the invoice is finalized, this field will no longer be updated.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "customer_tax_ids": {
              "description": "The customer's tax IDs. Until the invoice is finalized, this field will contain the same tax IDs as `customer.tax_ids`. Once the invoice is finalized, this field will no longer be updated.",
              "items": {
                "$ref": "#/components/schemas/invoices_resource_invoice_tax_id"
              },
              "nullable": true,
              "type": "array"
            },
            "default_payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "default_tax_rates": {
              "description": "The tax rates applied to this invoice, if any.",
              "items": {
                "$ref": "#/components/schemas/tax_rate"
              },
              "type": "array"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount applied to this invoice, if there is one. Not populated if there are multiple discounts.",
              "nullable": true
            },
            "discounts": {
              "description": "The discounts applied to the invoice. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
              "items": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/discount"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_discount"
                  }
                ],
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/discount"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_discount"
                    }
                  ]
                }
              },
              "nullable": true,
              "type": "array"
            },
            "due_date": {
              "description": "The date on which payment for this invoice is due. This value will be `null` for invoices where `collection_method=charge_automatically`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "ending_balance": {
              "description": "Ending customer balance after the invoice is finalized. Invoices are finalized approximately an hour after successful webhook delivery or when payment collection is attempted for the invoice. If the invoice has not been finalized yet, this will be null.",
              "nullable": true,
              "type": "integer"
            },
            "footer": {
              "description": "Footer displayed on the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "hosted_invoice_url": {
              "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_pdf": {
              "description": "The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "last_finalization_error": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/api_errors"
                }
              ],
              "description": "The error encountered during the previous attempt to finalize the invoice. This field is cleared when the invoice is successfully finalized.",
              "nullable": true
            },
            "lines": {
              "description": "The individual line items that make up the invoice. `lines` is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/line_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "InvoiceLinesList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "next_payment_attempt": {
              "description": "The time at which payment will next be attempted. This value will be `null` for invoices where `collection_method=send_invoice`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "number": {
              "description": "A unique, identifying string that appears on emails sent to the customer for this invoice. This starts with the customer's unique invoice_prefix if it is specified.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "invoice"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "paid": {
              "description": "Whether payment was successfully collected for this invoice. An invoice can be paid (most commonly) with a charge or with credit from the customer's account balance.",
              "type": "boolean"
            },
            "paid_out_of_band": {
              "description": "Returns true if the invoice was manually marked paid, returns false if the invoice hasn't been paid yet or was paid on Stripe.",
              "type": "boolean"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "The PaymentIntent associated with this invoice. The PaymentIntent is generated when the invoice is finalized, and can then be used to pay the invoice. Note that voiding an invoice will cancel the PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "payment_settings": {
              "$ref": "#/components/schemas/invoices_payment_settings"
            },
            "period_end": {
              "description": "End of the usage period during which invoice items were added to this invoice.",
              "format": "unix-time",
              "type": "integer"
            },
            "period_start": {
              "description": "Start of the usage period during which invoice items were added to this invoice.",
              "format": "unix-time",
              "type": "integer"
            },
            "post_payment_credit_notes_amount": {
              "description": "Total amount of all post-payment credit notes issued for this invoice.",
              "type": "integer"
            },
            "pre_payment_credit_notes_amount": {
              "description": "Total amount of all pre-payment credit notes issued for this invoice.",
              "type": "integer"
            },
            "quote": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/quote"
                }
              ],
              "description": "The quote this invoice was generated from.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/quote"
                  }
                ]
              }
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "rendering_options": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/invoice_setting_rendering_options"
                }
              ],
              "description": "Options for invoice PDF rendering.",
              "nullable": true
            },
            "starting_balance": {
              "description": "Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance.",
              "type": "integer"
            },
            "statement_descriptor": {
              "description": "Extra information about an invoice for the customer's credit card statement.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)",
              "enum": [
                "deleted",
                "draft",
                "open",
                "paid",
                "uncollectible",
                "void"
              ],
              "nullable": true,
              "type": "string"
            },
            "status_transitions": {
              "$ref": "#/components/schemas/invoices_status_transitions"
            },
            "subscription": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ],
              "description": "The subscription that this invoice was prepared for, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/subscription"
                  }
                ]
              }
            },
            "subscription_proration_date": {
              "description": "Only set for upcoming invoices that preview prorations. The time used to calculate prorations.",
              "type": "integer"
            },
            "subtotal": {
              "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or exclusive tax is applied. Item discounts are already incorporated",
              "type": "integer"
            },
            "subtotal_excluding_tax": {
              "description": "The integer amount in %s representing the subtotal of the invoice before any invoice level discount or tax is applied. Item discounts are already incorporated",
              "nullable": true,
              "type": "integer"
            },
            "tax": {
              "description": "The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice.",
              "nullable": true,
              "type": "integer"
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this invoice belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            },
            "threshold_reason": {
              "$ref": "#/components/schemas/invoice_threshold_reason"
            },
            "total": {
              "description": "Total after discounts and taxes.",
              "type": "integer"
            },
            "total_discount_amounts": {
              "description": "The aggregate amounts calculated per discount across all line items.",
              "items": {
                "$ref": "#/components/schemas/discounts_resource_discount_amount"
              },
              "nullable": true,
              "type": "array"
            },
            "total_excluding_tax": {
              "description": "The integer amount in %s representing the total amount of the invoice including all discounts but excluding all tax.",
              "nullable": true,
              "type": "integer"
            },
            "total_tax_amounts": {
              "description": "The aggregate amounts calculated per tax rate for all line items.",
              "items": {
                "$ref": "#/components/schemas/invoice_tax_amount"
              },
              "type": "array"
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/invoice_transfer_data"
                }
              ],
              "description": "The account (if any) the payment will be attributed to for tax reporting, and where funds from the payment will be transferred to for the invoice.",
              "nullable": true
            },
            "webhooks_delivered_at": {
              "description": "Invoices are automatically paid or sent 1 hour after webhooks are delivered, or until all webhook delivery attempts have [been exhausted](https://stripe.com/docs/billing/webhooks#understand). This field tracks the time when webhooks for this invoice were successfully delivered. If the invoice had no webhooks to deliver, this will be set while the invoice is being created.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            }
          },
          "required": [
            "amount_due",
            "amount_paid",
            "amount_remaining",
            "attempt_count",
            "attempted",
            "automatic_tax",
            "collection_method",
            "created",
            "currency",
            "default_tax_rates",
            "lines",
            "livemode",
            "object",
            "paid",
            "paid_out_of_band",
            "payment_settings",
            "period_end",
            "period_start",
            "post_payment_credit_notes_amount",
            "pre_payment_credit_notes_amount",
            "starting_balance",
            "status_transitions",
            "subtotal",
            "total",
            "total_tax_amounts"
          ],
          "title": "Invoice",
          "type": "object",
          "x-expandableFields": [
            "account_tax_ids",
            "application",
            "automatic_tax",
            "charge",
            "custom_fields",
            "customer",
            "customer_address",
            "customer_shipping",
            "customer_tax_ids",
            "default_payment_method",
            "default_source",
            "default_tax_rates",
            "discount",
            "discounts",
            "last_finalization_error",
            "lines",
            "on_behalf_of",
            "payment_intent",
            "payment_settings",
            "quote",
            "rendering_options",
            "status_transitions",
            "subscription",
            "test_clock",
            "threshold_reason",
            "total_discount_amounts",
            "total_tax_amounts",
            "transfer_data"
          ],
          "x-resourceId": "invoice"
        }
      ],
      "lines": {
        "description": "Line items that make up the credit note",
        "properties": {
          "data": {
            "description": "Details about each object.",
            "items": {
              "description": "",
              "properties": {
                "amount": {
                  "description": "The integer amount in %s representing the gross amount being credited for this line item, excluding (exclusive) tax and discounts.",
                  "type": "integer"
                },
                "amount_excluding_tax": {
                  "description": "The integer amount in %s representing the amount being credited for this line item, excluding all tax and discounts.",
                  "nullable": true,
                  "type": "integer"
                },
                "description": {
                  "description": "Description of the item being credited.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "discount_amount": {
                  "description": "The integer amount in %s representing the discount being credited for this line item.",
                  "type": "integer"
                },
                "discount_amounts": {
                  "description": "The amount of discount calculated per discount for this line item",
                  "items": {
                    "$ref": "#/components/schemas/discounts_resource_discount_amount"
                  },
                  "type": "array"
                },
                "id": {
                  "description": "Unique identifier for the object.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "invoice_line_item": {
                  "description": "ID of the invoice line item being credited",
                  "maxLength": 5000,
                  "type": "string"
                },
                "livemode": {
                  "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "credit_note_line_item"
                  ],
                  "type": "string"
                },
                "quantity": {
                  "description": "The number of units of product being credited.",
                  "nullable": true,
                  "type": "integer"
                },
                "tax_amounts": {
                  "description": "The amount of tax calculated per tax rate for this line item",
                  "items": {
                    "$ref": "#/components/schemas/credit_note_tax_amount"
                  },
                  "type": "array"
                },
                "tax_rates": {
                  "description": "The tax rates which apply to the line item.",
                  "items": {
                    "$ref": "#/components/schemas/tax_rate"
                  },
                  "type": "array"
                },
                "type": {
                  "description": "The type of the credit note line item, one of `invoice_line_item` or `custom_line_item`. When the type is `invoice_line_item` there is an additional `invoice_line_item` property on the resource the value of which is the id of the credited line item on the invoice.",
                  "enum": [
                    "custom_line_item",
                    "invoice_line_item"
                  ],
                  "type": "string"
                },
                "unit_amount": {
                  "description": "The cost of each unit of product being credited.",
                  "nullable": true,
                  "type": "integer"
                },
                "unit_amount_decimal": {
                  "description": "Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.",
                  "format": "decimal",
                  "nullable": true,
                  "type": "string"
                },
                "unit_amount_excluding_tax": {
                  "description": "The amount in %s representing the unit amount being credited for this line item, excluding all tax and discounts.",
                  "format": "decimal",
                  "nullable": true,
                  "type": "string"
                }
              },
              "required": [
                "amount",
                "discount_amount",
                "discount_amounts",
                "id",
                "livemode",
                "object",
                "tax_amounts",
                "tax_rates",
                "type"
              ],
              "title": "CreditNoteLineItem",
              "type": "object",
              "x-expandableFields": [
                "discount_amounts",
                "tax_amounts",
                "tax_rates"
              ],
              "x-resourceId": "credit_note_line_item"
            },
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "CreditNoteLinesList",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "memo": {
        "description": "Customer-facing text that appears on the credit note PDF.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "number": {
        "description": "A unique number that identifies this particular credit note and appears on the PDF of the credit note and its associated invoice.",
        "maxLength": 5000,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "credit_note"
        ],
        "type": "string"
      },
      "out_of_band_amount": {
        "description": "Amount that was credited outside of Stripe.",
        "nullable": true,
        "type": "integer"
      },
      "pdf": {
        "description": "The link to download the PDF of the credit note.",
        "maxLength": 5000,
        "type": "string"
      },
      "reason": {
        "description": "Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`",
        "enum": [
          "duplicate",
          "fraudulent",
          "order_change",
          "product_unsatisfactory"
        ],
        "nullable": true,
        "type": "string"
      },
      "refund": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "`Refund` objects allow you to refund a charge that has previously been created\nbut not yet refunded. Funds will be refunded to the credit or debit card that\nwas originally charged.\n\nRelated guide: [Refunds](https://stripe.com/docs/refunds).",
          "properties": {
            "amount": {
              "description": "Amount, in %s.",
              "type": "integer"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "Balance transaction that describes the impact on your account balance.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "charge": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/charge"
                }
              ],
              "description": "ID of the charge that was refunded.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/charge"
                  }
                ]
              }
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users. (Available on non-card refunds only)",
              "maxLength": 5000,
              "type": "string"
            },
            "failure_balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "If the refund failed, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "failure_reason": {
              "description": "If the refund failed, the reason for refund failure if known. Possible values are `lost_or_stolen_card`, `expired_or_canceled_card`, or `unknown`.",
              "maxLength": 5000,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "instructions_email": {
              "description": "Email to which refund instructions, if required, are sent to.",
              "maxLength": 5000,
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "next_action": {
              "$ref": "#/components/schemas/refund_next_action"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "refund"
              ],
              "type": "string"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "ID of the PaymentIntent that was refunded.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "reason": {
              "description": "Reason for the refund, either user-provided (`duplicate`, `fraudulent`, or `requested_by_customer`) or generated by Stripe internally (`expired_uncaptured_charge`).",
              "enum": [
                "duplicate",
                "expired_uncaptured_charge",
                "fraudulent",
                "requested_by_customer"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this refund.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "source_transfer_reversal": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ],
              "description": "The transfer reversal that is associated with the refund. Only present if the charge came from another Stripe account. See the Connect documentation for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer_reversal"
                  }
                ]
              }
            },
            "status": {
              "description": "Status of the refund. For credit card refunds, this can be `pending`, `succeeded`, or `failed`. For other types of refunds, it can be `pending`, `requires_action`, `succeeded`, `failed`, or `canceled`. Refer to our [refunds](https://stripe.com/docs/refunds#failed-refunds) documentation for more details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "transfer_reversal": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ],
              "description": "If the accompanying transfer was reversed, the transfer reversal object. Only applicable if the charge was created using the destination parameter.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer_reversal"
                  }
                ]
              }
            }
          },
          "required": [
            "amount",
            "created",
            "currency",
            "id",
            "object"
          ],
          "title": "Refund",
          "type": "object",
          "x-expandableFields": [
            "balance_transaction",
            "charge",
            "failure_balance_transaction",
            "next_action",
            "payment_intent",
            "source_transfer_reversal",
            "transfer_reversal"
          ],
          "x-resourceId": "refund"
        }
      ],
      "status": {
        "description": "Status of this credit note, one of `issued` or `void`. Learn more about [voiding credit notes](https://stripe.com/docs/billing/invoices/credit-notes#voiding).",
        "enum": [
          "issued",
          "void"
        ],
        "type": "string"
      },
      "subtotal": {
        "description": "The integer amount in %s representing the amount of the credit note, excluding exclusive tax and invoice level discounts.",
        "type": "integer"
      },
      "subtotal_excluding_tax": {
        "description": "The integer amount in %s representing the amount of the credit note, excluding all tax and invoice level discounts.",
        "nullable": true,
        "type": "integer"
      },
      "tax_amounts": {
        "description": "The aggregate amounts calculated per tax rate for all line items.",
        "items": {
          "description": "",
          "properties": {
            "amount": {
              "description": "The amount, in %s, of the tax.",
              "type": "integer"
            },
            "inclusive": {
              "description": "Whether this tax amount is inclusive or exclusive.",
              "type": "boolean"
            },
            "tax_rate": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/tax_rate"
                }
              ],
              "description": "The tax rate that was applied to get this tax amount.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/tax_rate"
                  }
                ]
              }
            }
          },
          "required": [
            "amount",
            "inclusive",
            "tax_rate"
          ],
          "title": "CreditNoteTaxAmount",
          "type": "object",
          "x-expandableFields": [
            "tax_rate"
          ]
        },
        "type": "array"
      },
      "total": {
        "description": "The integer amount in %s representing the total amount of the credit note, including tax and all discount.",
        "type": "integer"
      },
      "total_excluding_tax": {
        "description": "The integer amount in %s representing the total amount of the credit note, excluding tax, but including discounts.",
        "nullable": true,
        "type": "integer"
      },
      "type": {
        "description": "Type of this credit note, one of `pre_payment` or `post_payment`. A `pre_payment` credit note means it was issued when the invoice was open. A `post_payment` credit note means it was issued when the invoice was paid.",
        "enum": [
          "post_payment",
          "pre_payment"
        ],
        "type": "string"
      },
      "voided_at": {
        "description": "The time that the credit note was voided.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      }
    },
    "required": [
      "amount",
      "created",
      "currency",
      "customer",
      "discount_amount",
      "discount_amounts",
      "id",
      "invoice",
      "lines",
      "livemode",
      "number",
      "object",
      "pdf",
      "status",
      "subtotal",
      "tax_amounts",
      "total",
      "type"
    ],
    "title": "CreditNote",
    "type": "object",
    "x-expandableFields": [
      "customer",
      "customer_balance_transaction",
      "discount_amounts",
      "invoice",
      "lines",
      "refund",
      "tax_amounts"
    ],
    "x-resourceId": "credit_note"
  },
  "customer": {
    "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
    "properties": {
      "address": [
        {
          "description": "",
          "properties": {
            "city": {
              "description": "City, district, suburb, town, or village.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "country": {
              "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "line1": {
              "description": "Address line 1 (e.g., street, PO Box, or company name).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "line2": {
              "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "postal_code": {
              "description": "ZIP or postal code.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "state": {
              "description": "State, county, province, or region.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "Address",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "balance": {
        "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
        "type": "integer"
      },
      "cash_balance": [
        {
          "description": "A customer's `Cash balance` represents real funds. Customers can add funds to their cash balance by sending a bank transfer. These funds can be used for payment and can eventually be paid out to your bank account.",
          "properties": {
            "available": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "A hash of all cash balances available to this customer. You cannot delete a customer with any cash balances, even if the balance is 0. Amounts are represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
              "nullable": true,
              "type": "object"
            },
            "customer": {
              "description": "The ID of the customer whose cash balance this object represents.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "cash_balance"
              ],
              "type": "string"
            },
            "settings": {
              "$ref": "#/components/schemas/customer_balance_customer_balance_settings"
            }
          },
          "required": [
            "customer",
            "livemode",
            "object",
            "settings"
          ],
          "title": "cash_balance",
          "type": "object",
          "x-expandableFields": [
            "settings"
          ],
          "x-resourceId": "cash_balance"
        }
      ],
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "default_source": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "These bank accounts are payment methods on `Customer` objects.\n\nOn the other hand [External Accounts](https://stripe.com/docs/api#external_accounts) are transfer\ndestinations on `Account` objects for [Custom accounts](https://stripe.com/docs/connect/custom-accounts).\nThey can be bank accounts or debit cards as well, and are documented in the links above.\n\nRelated guide: [Bank Debits and Transfers](https://stripe.com/docs/payments/bank-debits-transfers).",
          "properties": {
            "account": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The ID of the account that the bank account is associated with.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "account_holder_name": {
              "description": "The name of the person or business that owns the bank account.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_holder_type": {
              "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_type": {
              "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "available_payout_methods": {
              "description": "A set of available payout methods for this bank account. Only values from this set should be passed as the `method` when creating a payout.",
              "items": {
                "enum": [
                  "instant",
                  "standard"
                ],
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "bank_name": {
              "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "country": {
              "description": "Two-letter ISO code representing the country the bank account is located in.",
              "maxLength": 5000,
              "type": "string"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The ID of the customer that the bank account is associated with.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "default_for_currency": {
              "description": "Whether this bank account is the default external account for its currency.",
              "nullable": true,
              "type": "boolean"
            },
            "fingerprint": {
              "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "last4": {
              "description": "The last four digits of the bank account number.",
              "maxLength": 5000,
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "bank_account"
              ],
              "type": "string"
            },
            "routing_number": {
              "description": "The routing transit number for the bank account.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Stripe can determine that the bank account exists, its status will be `validated`. Note that there often isnâ€™t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a transfer sent to this bank account fails, we'll set the status to `errored` and will not continue to send transfers until the bank details are updated.\n\nFor external accounts, possible values are `new` and `errored`. Validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "country",
            "currency",
            "id",
            "last4",
            "object",
            "status"
          ],
          "title": "BankAccount",
          "type": "object",
          "x-expandableFields": [
            "account",
            "customer"
          ],
          "x-resourceId": "bank_account"
        },
        {
          "description": "You can store multiple cards on a customer in order to charge the customer\nlater. You can also store multiple debit cards on a recipient in order to\ntransfer to those cards later.\n\nRelated guide: [Card Payments with Sources](https://stripe.com/docs/sources/cards).",
          "properties": {
            "account": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account this card belongs to. This attribute will not be in the card object if the card belongs to a customer or recipient instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "address_city": {
              "description": "City/District/Suburb/Town/Village.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_country": {
              "description": "Billing address country, if provided when creating card.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_line1": {
              "description": "Address line 1 (Street address/PO Box/Company name).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_line1_check": {
              "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_line2": {
              "description": "Address line 2 (Apartment/Suite/Unit/Building).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_state": {
              "description": "State/County/Province/Region.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_zip": {
              "description": "ZIP or postal code.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_zip_check": {
              "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "available_payout_methods": {
              "description": "A set of available payout methods for this card. Only values from this set should be passed as the `method` when creating a payout.",
              "items": {
                "enum": [
                  "instant",
                  "standard"
                ],
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "brand": {
              "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
              "maxLength": 5000,
              "type": "string"
            },
            "country": {
              "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "currency": {
              "description": "Three-letter [ISO code for currency](https://stripe.com/docs/payouts). Only applicable on accounts (not customers or recipients). The card can be used as a transfer destination for funds in this currency.",
              "nullable": true,
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "cvc_check": {
              "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. A result of unchecked indicates that CVC was provided but hasn't been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https://support.stripe.com/questions/check-if-a-card-is-valid-without-a-charge).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_for_currency": {
              "description": "Whether this card is the default external account for its currency.",
              "nullable": true,
              "type": "boolean"
            },
            "dynamic_last4": {
              "description": "(For tokenized numbers only.) The last four digits of the device account number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exp_month": {
              "description": "Two-digit number representing the card's expiration month.",
              "type": "integer"
            },
            "exp_year": {
              "description": "Four-digit number representing the card's expiration year.",
              "type": "integer"
            },
            "fingerprint": {
              "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers whoâ€™ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "funding": {
              "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
              "maxLength": 5000,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "last4": {
              "description": "The last four digits of the card.",
              "maxLength": 5000,
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "name": {
              "description": "Cardholder name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "card"
              ],
              "type": "string"
            },
            "recipient": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/recipient"
                }
              ],
              "description": "The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/recipient"
                  }
                ]
              }
            },
            "status": {
              "description": "For external accounts, possible values are `new` and `errored`. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tokenization_method": {
              "description": "If the card number is tokenized, this is the method that was used. Can be `android_pay` (includes Google Pay), `apple_pay`, `masterpass`, `visa_checkout`, or null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "brand",
            "exp_month",
            "exp_year",
            "funding",
            "id",
            "last4",
            "object"
          ],
          "title": "Card",
          "type": "object",
          "x-expandableFields": [
            "account",
            "customer",
            "recipient"
          ],
          "x-resourceId": "card"
        },
        {
          "description": "`Source` objects allow you to accept a variety of payment methods. They\nrepresent a customer's payment instrument, and can be used with the Stripe API\njust like a `Card` object: once chargeable, they can be charged, or can be\nattached to customers.\n\nRelated guides: [Sources API](https://stripe.com/docs/sources) and [Sources & Customers](https://stripe.com/docs/sources/customers).",
          "properties": {
            "ach_credit_transfer": {
              "$ref": "#/components/schemas/source_type_ach_credit_transfer"
            },
            "ach_debit": {
              "$ref": "#/components/schemas/source_type_ach_debit"
            },
            "acss_debit": {
              "$ref": "#/components/schemas/source_type_acss_debit"
            },
            "alipay": {
              "$ref": "#/components/schemas/source_type_alipay"
            },
            "amount": {
              "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for Â¥1, Japanese Yen being a zero-decimal currency) representing the total amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources.",
              "nullable": true,
              "type": "integer"
            },
            "au_becs_debit": {
              "$ref": "#/components/schemas/source_type_au_becs_debit"
            },
            "bancontact": {
              "$ref": "#/components/schemas/source_type_bancontact"
            },
            "card": {
              "$ref": "#/components/schemas/source_type_card"
            },
            "card_present": {
              "$ref": "#/components/schemas/source_type_card_present"
            },
            "client_secret": {
              "description": "The client secret of the source. Used for client-side retrieval using a publishable key.",
              "maxLength": 5000,
              "type": "string"
            },
            "code_verification": {
              "$ref": "#/components/schemas/source_code_verification_flow"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready. Required for `single_use` sources.",
              "nullable": true,
              "type": "string"
            },
            "customer": {
              "description": "The ID of the customer to which this source is attached. This will not be present when the source has not been attached to a customer.",
              "maxLength": 5000,
              "type": "string"
            },
            "eps": {
              "$ref": "#/components/schemas/source_type_eps"
            },
            "flow": {
              "description": "The authentication `flow` of the source. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`.",
              "maxLength": 5000,
              "type": "string"
            },
            "giropay": {
              "$ref": "#/components/schemas/source_type_giropay"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "ideal": {
              "$ref": "#/components/schemas/source_type_ideal"
            },
            "klarna": {
              "$ref": "#/components/schemas/source_type_klarna"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "multibanco": {
              "$ref": "#/components/schemas/source_type_multibanco"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "source"
              ],
              "type": "string"
            },
            "owner": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/source_owner"
                }
              ],
              "description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
              "nullable": true
            },
            "p24": {
              "$ref": "#/components/schemas/source_type_p24"
            },
            "receiver": {
              "$ref": "#/components/schemas/source_receiver_flow"
            },
            "redirect": {
              "$ref": "#/components/schemas/source_redirect_flow"
            },
            "sepa_debit": {
              "$ref": "#/components/schemas/source_type_sepa_debit"
            },
            "sofort": {
              "$ref": "#/components/schemas/source_type_sofort"
            },
            "source_order": {
              "$ref": "#/components/schemas/source_order"
            },
            "statement_descriptor": {
              "description": "Extra information about a source. This will appear on your customer's statement every time you charge the source.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the source, one of `canceled`, `chargeable`, `consumed`, `failed`, or `pending`. Only `chargeable` sources can be used to create a charge.",
              "maxLength": 5000,
              "type": "string"
            },
            "three_d_secure": {
              "$ref": "#/components/schemas/source_type_three_d_secure"
            },
            "type": {
              "description": "The `type` of the source. The `type` is a payment method, one of `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `klarna`, `p24`, `sepa_debit`, `sofort`, `three_d_secure`, or `wechat`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https://stripe.com/docs/sources) used.",
              "enum": [
                "ach_credit_transfer",
                "ach_debit",
                "acss_debit",
                "alipay",
                "au_becs_debit",
                "bancontact",
                "card",
                "card_present",
                "eps",
                "giropay",
                "ideal",
                "klarna",
                "multibanco",
                "p24",
                "sepa_debit",
                "sofort",
                "three_d_secure",
                "wechat"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "usage": {
              "description": "Either `reusable` or `single_use`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "wechat": {
              "$ref": "#/components/schemas/source_type_wechat"
            }
          },
          "required": [
            "client_secret",
            "created",
            "flow",
            "id",
            "livemode",
            "object",
            "status",
            "type"
          ],
          "title": "Source",
          "type": "object",
          "x-expandableFields": [
            "code_verification",
            "owner",
            "receiver",
            "redirect",
            "source_order"
          ],
          "x-resourceId": "source"
        }
      ],
      "delinquent": {
        "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
        "nullable": true,
        "type": "boolean"
      },
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "discount": [
        {
          "description": "A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).\nIt contains information about when the discount began, when it will end, and what it is applied to.\n\nRelated guide: [Applying Discounts to Subscriptions](https://stripe.com/docs/billing/subscriptions/discounts).",
          "properties": {
            "checkout_session": {
              "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "coupon": {
              "$ref": "#/components/schemas/coupon"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The ID of the customer associated with this discount.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "end": {
              "description": "If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "id": {
              "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_item": {
              "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "discount"
              ],
              "type": "string"
            },
            "promotion_code": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/promotion_code"
                }
              ],
              "description": "The promotion code applied to create this discount.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/promotion_code"
                  }
                ]
              }
            },
            "start": {
              "description": "Date that the coupon was applied.",
              "format": "unix-time",
              "type": "integer"
            },
            "subscription": {
              "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "coupon",
            "id",
            "object",
            "start"
          ],
          "title": "Discount",
          "type": "object",
          "x-expandableFields": [
            "coupon",
            "customer",
            "promotion_code"
          ],
          "x-resourceId": "discount"
        }
      ],
      "email": {
        "description": "The customer's email address.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "invoice_credit_balance": {
        "additionalProperties": {
          "type": "integer"
        },
        "description": "The current multi-currency balances, if any, being stored on the customer.If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency.If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices.They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
        "type": "object"
      },
      "invoice_prefix": {
        "description": "The prefix for the customer used to generate unique invoice numbers.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "invoice_settings": {
        "description": "",
        "properties": {
          "custom_fields": {
            "description": "Default custom fields to be displayed on invoices for this customer.",
            "items": {
              "$ref": "#/components/schemas/invoice_setting_custom_field"
            },
            "nullable": true,
            "type": "array"
          },
          "default_payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of a payment method that's attached to the customer, to be used as the customer's default payment method for subscriptions and invoices.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "footer": {
            "description": "Default footer to be displayed on invoices for this customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "rendering_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_setting_rendering_options"
              }
            ],
            "description": "Default options for invoice PDF rendering for this customer.",
            "nullable": true
          }
        },
        "title": "InvoiceSettingCustomerSetting",
        "type": "object",
        "x-expandableFields": [
          "custom_fields",
          "default_payment_method",
          "rendering_options"
        ]
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "name": {
        "description": "The customer's full name or business name.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "next_invoice_sequence": {
        "description": "The suffix of the customer's next invoice number, e.g., 0001.",
        "type": "integer"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "customer"
        ],
        "type": "string"
      },
      "phone": {
        "description": "The customer's phone number.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "preferred_locales": {
        "description": "The customer's preferred locales (languages), ordered by preference.",
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "shipping": [
        {
          "description": "",
          "properties": {
            "address": {
              "$ref": "#/components/schemas/address"
            },
            "carrier": {
              "description": "The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "name": {
              "description": "Recipient name.",
              "maxLength": 5000,
              "type": "string"
            },
            "phone": {
              "description": "Recipient phone (including extension).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tracking_number": {
              "description": "The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "Shipping",
          "type": "object",
          "x-expandableFields": [
            "address"
          ]
        }
      ],
      "sources": {
        "description": "The customer's payment sources, if any.",
        "properties": {
          "data": {
            "description": "Details about each object.",
            "items": [
              {
                "description": "These bank accounts are payment methods on `Customer` objects.\n\nOn the other hand [External Accounts](https://stripe.com/docs/api#external_accounts) are transfer\ndestinations on `Account` objects for [Custom accounts](https://stripe.com/docs/connect/custom-accounts).\nThey can be bank accounts or debit cards as well, and are documented in the links above.\n\nRelated guide: [Bank Debits and Transfers](https://stripe.com/docs/payments/bank-debits-transfers).",
                "properties": {
                  "account": {
                    "anyOf": [
                      {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/account"
                      }
                    ],
                    "description": "The ID of the account that the bank account is associated with.",
                    "nullable": true,
                    "x-expansionResources": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/account"
                        }
                      ]
                    }
                  },
                  "account_holder_name": {
                    "description": "The name of the person or business that owns the bank account.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "account_holder_type": {
                    "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "account_type": {
                    "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "available_payout_methods": {
                    "description": "A set of available payout methods for this bank account. Only values from this set should be passed as the `method` when creating a payout.",
                    "items": {
                      "enum": [
                        "instant",
                        "standard"
                      ],
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "bank_name": {
                    "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "country": {
                    "description": "Two-letter ISO code representing the country the bank account is located in.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "currency": {
                    "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
                    "type": "string"
                  },
                  "customer": {
                    "anyOf": [
                      {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/customer"
                      },
                      {
                        "$ref": "#/components/schemas/deleted_customer"
                      }
                    ],
                    "description": "The ID of the customer that the bank account is associated with.",
                    "nullable": true,
                    "x-expansionResources": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/customer"
                        },
                        {
                          "$ref": "#/components/schemas/deleted_customer"
                        }
                      ]
                    }
                  },
                  "default_for_currency": {
                    "description": "Whether this bank account is the default external account for its currency.",
                    "nullable": true,
                    "type": "boolean"
                  },
                  "fingerprint": {
                    "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "id": {
                    "description": "Unique identifier for the object.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last4": {
                    "description": "The last four digits of the bank account number.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "maxLength": 500,
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "nullable": true,
                    "type": "object"
                  },
                  "object": {
                    "description": "String representing the object's type. Objects of the same type share the same value.",
                    "enum": [
                      "bank_account"
                    ],
                    "type": "string"
                  },
                  "routing_number": {
                    "description": "The routing transit number for the bank account.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "status": {
                    "description": "For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Stripe can determine that the bank account exists, its status will be `validated`. Note that there often isnâ€™t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a transfer sent to this bank account fails, we'll set the status to `errored` and will not continue to send transfers until the bank details are updated.\n\nFor external accounts, possible values are `new` and `errored`. Validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
                    "maxLength": 5000,
                    "type": "string"
                  }
                },
                "required": [
                  "country",
                  "currency",
                  "id",
                  "last4",
                  "object",
                  "status"
                ],
                "title": "BankAccount",
                "type": "object",
                "x-expandableFields": [
                  "account",
                  "customer"
                ],
                "x-resourceId": "bank_account"
              },
              {
                "description": "You can store multiple cards on a customer in order to charge the customer\nlater. You can also store multiple debit cards on a recipient in order to\ntransfer to those cards later.\n\nRelated guide: [Card Payments with Sources](https://stripe.com/docs/sources/cards).",
                "properties": {
                  "account": {
                    "anyOf": [
                      {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/account"
                      }
                    ],
                    "description": "The account this card belongs to. This attribute will not be in the card object if the card belongs to a customer or recipient instead.",
                    "nullable": true,
                    "x-expansionResources": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/account"
                        }
                      ]
                    }
                  },
                  "address_city": {
                    "description": "City/District/Suburb/Town/Village.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "address_country": {
                    "description": "Billing address country, if provided when creating card.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "address_line1": {
                    "description": "Address line 1 (Street address/PO Box/Company name).",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "address_line1_check": {
                    "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "address_line2": {
                    "description": "Address line 2 (Apartment/Suite/Unit/Building).",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "address_state": {
                    "description": "State/County/Province/Region.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "address_zip": {
                    "description": "ZIP or postal code.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "address_zip_check": {
                    "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "available_payout_methods": {
                    "description": "A set of available payout methods for this card. Only values from this set should be passed as the `method` when creating a payout.",
                    "items": {
                      "enum": [
                        "instant",
                        "standard"
                      ],
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "brand": {
                    "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "country": {
                    "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "currency": {
                    "description": "Three-letter [ISO code for currency](https://stripe.com/docs/payouts). Only applicable on accounts (not customers or recipients). The card can be used as a transfer destination for funds in this currency.",
                    "nullable": true,
                    "type": "string"
                  },
                  "customer": {
                    "anyOf": [
                      {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/customer"
                      },
                      {
                        "$ref": "#/components/schemas/deleted_customer"
                      }
                    ],
                    "description": "The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.",
                    "nullable": true,
                    "x-expansionResources": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/customer"
                        },
                        {
                          "$ref": "#/components/schemas/deleted_customer"
                        }
                      ]
                    }
                  },
                  "cvc_check": {
                    "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. A result of unchecked indicates that CVC was provided but hasn't been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https://support.stripe.com/questions/check-if-a-card-is-valid-without-a-charge).",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "default_for_currency": {
                    "description": "Whether this card is the default external account for its currency.",
                    "nullable": true,
                    "type": "boolean"
                  },
                  "dynamic_last4": {
                    "description": "(For tokenized numbers only.) The last four digits of the device account number.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "exp_month": {
                    "description": "Two-digit number representing the card's expiration month.",
                    "type": "integer"
                  },
                  "exp_year": {
                    "description": "Four-digit number representing the card's expiration year.",
                    "type": "integer"
                  },
                  "fingerprint": {
                    "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers whoâ€™ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "funding": {
                    "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "id": {
                    "description": "Unique identifier for the object.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "last4": {
                    "description": "The last four digits of the card.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "maxLength": 500,
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "nullable": true,
                    "type": "object"
                  },
                  "name": {
                    "description": "Cardholder name.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "object": {
                    "description": "String representing the object's type. Objects of the same type share the same value.",
                    "enum": [
                      "card"
                    ],
                    "type": "string"
                  },
                  "recipient": {
                    "anyOf": [
                      {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/recipient"
                      }
                    ],
                    "description": "The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.",
                    "nullable": true,
                    "x-expansionResources": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/recipient"
                        }
                      ]
                    }
                  },
                  "status": {
                    "description": "For external accounts, possible values are `new` and `errored`. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "tokenization_method": {
                    "description": "If the card number is tokenized, this is the method that was used. Can be `android_pay` (includes Google Pay), `apple_pay`, `masterpass`, `visa_checkout`, or null.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  }
                },
                "required": [
                  "brand",
                  "exp_month",
                  "exp_year",
                  "funding",
                  "id",
                  "last4",
                  "object"
                ],
                "title": "Card",
                "type": "object",
                "x-expandableFields": [
                  "account",
                  "customer",
                  "recipient"
                ],
                "x-resourceId": "card"
              },
              {
                "description": "`Source` objects allow you to accept a variety of payment methods. They\nrepresent a customer's payment instrument, and can be used with the Stripe API\njust like a `Card` object: once chargeable, they can be charged, or can be\nattached to customers.\n\nRelated guides: [Sources API](https://stripe.com/docs/sources) and [Sources & Customers](https://stripe.com/docs/sources/customers).",
                "properties": {
                  "ach_credit_transfer": {
                    "$ref": "#/components/schemas/source_type_ach_credit_transfer"
                  },
                  "ach_debit": {
                    "$ref": "#/components/schemas/source_type_ach_debit"
                  },
                  "acss_debit": {
                    "$ref": "#/components/schemas/source_type_acss_debit"
                  },
                  "alipay": {
                    "$ref": "#/components/schemas/source_type_alipay"
                  },
                  "amount": {
                    "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for Â¥1, Japanese Yen being a zero-decimal currency) representing the total amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources.",
                    "nullable": true,
                    "type": "integer"
                  },
                  "au_becs_debit": {
                    "$ref": "#/components/schemas/source_type_au_becs_debit"
                  },
                  "bancontact": {
                    "$ref": "#/components/schemas/source_type_bancontact"
                  },
                  "card": {
                    "$ref": "#/components/schemas/source_type_card"
                  },
                  "card_present": {
                    "$ref": "#/components/schemas/source_type_card_present"
                  },
                  "client_secret": {
                    "description": "The client secret of the source. Used for client-side retrieval using a publishable key.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "code_verification": {
                    "$ref": "#/components/schemas/source_code_verification_flow"
                  },
                  "created": {
                    "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                    "format": "unix-time",
                    "type": "integer"
                  },
                  "currency": {
                    "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready. Required for `single_use` sources.",
                    "nullable": true,
                    "type": "string"
                  },
                  "customer": {
                    "description": "The ID of the customer to which this source is attached. This will not be present when the source has not been attached to a customer.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "eps": {
                    "$ref": "#/components/schemas/source_type_eps"
                  },
                  "flow": {
                    "description": "The authentication `flow` of the source. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "giropay": {
                    "$ref": "#/components/schemas/source_type_giropay"
                  },
                  "id": {
                    "description": "Unique identifier for the object.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "ideal": {
                    "$ref": "#/components/schemas/source_type_ideal"
                  },
                  "klarna": {
                    "$ref": "#/components/schemas/source_type_klarna"
                  },
                  "livemode": {
                    "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                    "type": "boolean"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "maxLength": 500,
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                    "nullable": true,
                    "type": "object"
                  },
                  "multibanco": {
                    "$ref": "#/components/schemas/source_type_multibanco"
                  },
                  "object": {
                    "description": "String representing the object's type. Objects of the same type share the same value.",
                    "enum": [
                      "source"
                    ],
                    "type": "string"
                  },
                  "owner": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/source_owner"
                      }
                    ],
                    "description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
                    "nullable": true
                  },
                  "p24": {
                    "$ref": "#/components/schemas/source_type_p24"
                  },
                  "receiver": {
                    "$ref": "#/components/schemas/source_receiver_flow"
                  },
                  "redirect": {
                    "$ref": "#/components/schemas/source_redirect_flow"
                  },
                  "sepa_debit": {
                    "$ref": "#/components/schemas/source_type_sepa_debit"
                  },
                  "sofort": {
                    "$ref": "#/components/schemas/source_type_sofort"
                  },
                  "source_order": {
                    "$ref": "#/components/schemas/source_order"
                  },
                  "statement_descriptor": {
                    "description": "Extra information about a source. This will appear on your customer's statement every time you charge the source.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "status": {
                    "description": "The status of the source, one of `canceled`, `chargeable`, `consumed`, `failed`, or `pending`. Only `chargeable` sources can be used to create a charge.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "three_d_secure": {
                    "$ref": "#/components/schemas/source_type_three_d_secure"
                  },
                  "type": {
                    "description": "The `type` of the source. The `type` is a payment method, one of `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `klarna`, `p24`, `sepa_debit`, `sofort`, `three_d_secure`, or `wechat`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https://stripe.com/docs/sources) used.",
                    "enum": [
                      "ach_credit_transfer",
                      "ach_debit",
                      "acss_debit",
                      "alipay",
                      "au_becs_debit",
                      "bancontact",
                      "card",
                      "card_present",
                      "eps",
                      "giropay",
                      "ideal",
                      "klarna",
                      "multibanco",
                      "p24",
                      "sepa_debit",
                      "sofort",
                      "three_d_secure",
                      "wechat"
                    ],
                    "type": "string",
                    "x-stripeBypassValidation": true
                  },
                  "usage": {
                    "description": "Either `reusable` or `single_use`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.",
                    "maxLength": 5000,
                    "nullable": true,
                    "type": "string"
                  },
                  "wechat": {
                    "$ref": "#/components/schemas/source_type_wechat"
                  }
                },
                "required": [
                  "client_secret",
                  "created",
                  "flow",
                  "id",
                  "livemode",
                  "object",
                  "status",
                  "type"
                ],
                "title": "Source",
                "type": "object",
                "x-expandableFields": [
                  "code_verification",
                  "owner",
                  "receiver",
                  "redirect",
                  "source_order"
                ],
                "x-resourceId": "source"
              }
            ],
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "ApmsSourcesSourceList",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      },
      "subscriptions": {
        "description": "The customer's current subscriptions, if any.",
        "properties": {
          "data": {
            "description": "Details about each object.",
            "items": {
              "description": "Subscriptions allow you to charge a customer on a recurring basis.\n\nRelated guide: [Creating Subscriptions](https://stripe.com/docs/billing/subscriptions/creating).",
              "properties": {
                "application": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/application"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_application"
                    }
                  ],
                  "description": "ID of the Connect Application that created the subscription.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/application"
                      },
                      {
                        "$ref": "#/components/schemas/deleted_application"
                      }
                    ]
                  }
                },
                "application_fee_percent": {
                  "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.",
                  "nullable": true,
                  "type": "number"
                },
                "automatic_tax": {
                  "$ref": "#/components/schemas/subscription_automatic_tax"
                },
                "billing_cycle_anchor": {
                  "description": "Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.",
                  "format": "unix-time",
                  "type": "integer"
                },
                "billing_thresholds": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/subscription_billing_thresholds"
                    }
                  ],
                  "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
                  "nullable": true
                },
                "cancel_at": {
                  "description": "A date in the future at which the subscription will automatically get canceled",
                  "format": "unix-time",
                  "nullable": true,
                  "type": "integer"
                },
                "cancel_at_period_end": {
                  "description": "If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.",
                  "type": "boolean"
                },
                "canceled_at": {
                  "description": "If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will reflect the time of the most recent update request, not the end of the subscription period when the subscription is automatically moved to a canceled state.",
                  "format": "unix-time",
                  "nullable": true,
                  "type": "integer"
                },
                "collection_method": {
                  "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions.",
                  "enum": [
                    "charge_automatically",
                    "send_invoice"
                  ],
                  "type": "string"
                },
                "created": {
                  "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                  "format": "unix-time",
                  "type": "integer"
                },
                "currency": {
                  "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                  "type": "string"
                },
                "current_period_end": {
                  "description": "End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.",
                  "format": "unix-time",
                  "type": "integer"
                },
                "current_period_start": {
                  "description": "Start of the current period that the subscription has been invoiced for.",
                  "format": "unix-time",
                  "type": "integer"
                },
                "customer": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/customer"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_customer"
                    }
                  ],
                  "description": "ID of the customer who owns the subscription.",
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/customer"
                      },
                      {
                        "$ref": "#/components/schemas/deleted_customer"
                      }
                    ]
                  }
                },
                "days_until_due": {
                  "description": "Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`.",
                  "nullable": true,
                  "type": "integer"
                },
                "default_payment_method": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/payment_method"
                    }
                  ],
                  "description": "ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/payment_method"
                      }
                    ]
                  }
                },
                "default_source": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/bank_account"
                    },
                    {
                      "$ref": "#/components/schemas/card"
                    },
                    {
                      "$ref": "#/components/schemas/source"
                    }
                  ],
                  "description": "ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      },
                      {
                        "$ref": "#/components/schemas/source"
                      }
                    ]
                  },
                  "x-stripeBypassValidation": true
                },
                "default_tax_rates": {
                  "description": "The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.",
                  "items": {
                    "$ref": "#/components/schemas/tax_rate"
                  },
                  "nullable": true,
                  "type": "array"
                },
                "description": {
                  "description": "The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces.",
                  "maxLength": 500,
                  "nullable": true,
                  "type": "string"
                },
                "discount": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/discount"
                    }
                  ],
                  "description": "Describes the current discount applied to this subscription, if there is one. When billing, a discount applied to a subscription overrides a discount applied on a customer-wide basis.",
                  "nullable": true
                },
                "ended_at": {
                  "description": "If the subscription has ended, the date the subscription ended.",
                  "format": "unix-time",
                  "nullable": true,
                  "type": "integer"
                },
                "id": {
                  "description": "Unique identifier for the object.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "items": {
                  "description": "List of subscription items, each with an attached price.",
                  "properties": {
                    "data": {
                      "description": "Details about each object.",
                      "items": {
                        "$ref": "#/components/schemas/subscription_item"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "SubscriptionItemList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                },
                "latest_invoice": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/invoice"
                    }
                  ],
                  "description": "The most recent invoice this subscription has generated.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/invoice"
                      }
                    ]
                  }
                },
                "livemode": {
                  "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                  "type": "boolean"
                },
                "metadata": {
                  "additionalProperties": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                  "type": "object"
                },
                "next_pending_invoice_item_invoice": {
                  "description": "Specifies the approximate timestamp on which any pending invoice items will be billed according to the schedule provided at `pending_invoice_item_interval`.",
                  "format": "unix-time",
                  "nullable": true,
                  "type": "integer"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "subscription"
                  ],
                  "type": "string"
                },
                "pause_collection": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/subscriptions_resource_pause_collection"
                    }
                  ],
                  "description": "If specified, payment collection for this subscription will be paused.",
                  "nullable": true
                },
                "payment_settings": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/subscriptions_resource_payment_settings"
                    }
                  ],
                  "description": "Payment settings passed on to invoices created by the subscription.",
                  "nullable": true
                },
                "pending_invoice_item_interval": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/subscription_pending_invoice_item_interval"
                    }
                  ],
                  "description": "Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.",
                  "nullable": true
                },
                "pending_setup_intent": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/setup_intent"
                    }
                  ],
                  "description": "You can use this [SetupIntent](https://stripe.com/docs/api/setup_intents) to collect user authentication when creating a subscription without immediate payment or updating a subscription's payment method, allowing you to optimize for off-session payments. Learn more in the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2).",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/setup_intent"
                      }
                    ]
                  }
                },
                "pending_update": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/subscriptions_resource_pending_update"
                    }
                  ],
                  "description": "If specified, [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates) that will be applied to the subscription once the `latest_invoice` has been paid.",
                  "nullable": true
                },
                "schedule": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/subscription_schedule"
                    }
                  ],
                  "description": "The schedule attached to the subscription",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/subscription_schedule"
                      }
                    ]
                  }
                },
                "start_date": {
                  "description": "Date when the subscription was first created. The date might differ from the `created` date due to backdating.",
                  "format": "unix-time",
                  "type": "integer"
                },
                "status": {
                  "description": "Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`, `past_due`, `canceled`, or `unpaid`. \n\nFor `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this state can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` state. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal state, the open invoice will be voided and no further invoices will be generated. \n\nA subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over. \n\nIf subscription `collection_method=charge_automatically` it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid` (depending on your subscriptions settings) when Stripe has exhausted all payment retry attempts. \n\nIf subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.",
                  "enum": [
                    "active",
                    "canceled",
                    "incomplete",
                    "incomplete_expired",
                    "past_due",
                    "trialing",
                    "unpaid"
                  ],
                  "type": "string",
                  "x-stripeBypassValidation": true
                },
                "test_clock": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/test_helpers.test_clock"
                    }
                  ],
                  "description": "ID of the test clock this subscription belongs to.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/test_helpers.test_clock"
                      }
                    ]
                  }
                },
                "transfer_data": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/subscription_transfer_data"
                    }
                  ],
                  "description": "The account (if any) the subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.",
                  "nullable": true
                },
                "trial_end": {
                  "description": "If the subscription has a trial, the end of that trial.",
                  "format": "unix-time",
                  "nullable": true,
                  "type": "integer"
                },
                "trial_start": {
                  "description": "If the subscription has a trial, the beginning of that trial.",
                  "format": "unix-time",
                  "nullable": true,
                  "type": "integer"
                }
              },
              "required": [
                "automatic_tax",
                "billing_cycle_anchor",
                "cancel_at_period_end",
                "collection_method",
                "created",
                "currency",
                "current_period_end",
                "current_period_start",
                "customer",
                "id",
                "items",
                "livemode",
                "metadata",
                "object",
                "start_date",
                "status"
              ],
              "title": "Subscription",
              "type": "object",
              "x-expandableFields": [
                "application",
                "automatic_tax",
                "billing_thresholds",
                "customer",
                "default_payment_method",
                "default_source",
                "default_tax_rates",
                "discount",
                "items",
                "latest_invoice",
                "pause_collection",
                "payment_settings",
                "pending_invoice_item_interval",
                "pending_setup_intent",
                "pending_update",
                "schedule",
                "test_clock",
                "transfer_data"
              ],
              "x-resourceId": "subscription"
            },
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "SubscriptionList",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      },
      "tax": {
        "description": "",
        "properties": {
          "automatic_tax": {
            "description": "Surfaces if automatic tax computation is possible given the current customer location information.",
            "enum": [
              "failed",
              "not_collecting",
              "supported",
              "unrecognized_location"
            ],
            "type": "string"
          },
          "ip_address": {
            "description": "A recent IP address of the customer used for tax reporting and tax location inference.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/customer_tax_location"
              }
            ],
            "description": "The customer's location as identified by Stripe Tax.",
            "nullable": true
          }
        },
        "required": [
          "automatic_tax"
        ],
        "title": "CustomerTax",
        "type": "object",
        "x-expandableFields": [
          "location"
        ]
      },
      "tax_exempt": {
        "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
        "enum": [
          "exempt",
          "none",
          "reverse"
        ],
        "nullable": true,
        "type": "string"
      },
      "tax_ids": {
        "description": "The customer's tax IDs.",
        "properties": {
          "data": {
            "description": "Details about each object.",
            "items": {
              "description": "You can add one or multiple tax IDs to a [customer](https://stripe.com/docs/api/customers).\nA customer's tax IDs are displayed on invoices and credit notes issued for the customer.\n\nRelated guide: [Customer Tax Identification Numbers](https://stripe.com/docs/billing/taxes/tax-ids).",
              "properties": {
                "country": {
                  "description": "Two-letter ISO code representing the country of the tax ID.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "created": {
                  "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                  "format": "unix-time",
                  "type": "integer"
                },
                "customer": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/customer"
                    }
                  ],
                  "description": "ID of the customer.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/customer"
                      }
                    ]
                  }
                },
                "id": {
                  "description": "Unique identifier for the object.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "livemode": {
                  "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "tax_id"
                  ],
                  "type": "string"
                },
                "type": {
                  "description": "Type of the tax ID, one of `ae_trn`, `au_abn`, `au_arn`, `bg_uic`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_vat`, `cl_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `kr_brn`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `no_vat`, `nz_gst`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `th_vat`, `tw_vat`, `ua_vat`, `us_ein`, or `za_vat`. Note that some legacy tax IDs have type `unknown`",
                  "enum": [
                    "ae_trn",
                    "au_abn",
                    "au_arn",
                    "bg_uic",
                    "br_cnpj",
                    "br_cpf",
                    "ca_bn",
                    "ca_gst_hst",
                    "ca_pst_bc",
                    "ca_pst_mb",
                    "ca_pst_sk",
                    "ca_qst",
                    "ch_vat",
                    "cl_tin",
                    "es_cif",
                    "eu_oss_vat",
                    "eu_vat",
                    "gb_vat",
                    "ge_vat",
                    "hk_br",
                    "hu_tin",
                    "id_npwp",
                    "il_vat",
                    "in_gst",
                    "is_vat",
                    "jp_cn",
                    "jp_rn",
                    "kr_brn",
                    "li_uid",
                    "mx_rfc",
                    "my_frp",
                    "my_itn",
                    "my_sst",
                    "no_vat",
                    "nz_gst",
                    "ru_inn",
                    "ru_kpp",
                    "sa_vat",
                    "sg_gst",
                    "sg_uen",
                    "si_tin",
                    "th_vat",
                    "tw_vat",
                    "ua_vat",
                    "unknown",
                    "us_ein",
                    "za_vat"
                  ],
                  "type": "string"
                },
                "value": {
                  "description": "Value of the tax ID.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "verification": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/tax_id_verification"
                    }
                  ],
                  "description": "Tax ID verification information.",
                  "nullable": true
                }
              },
              "required": [
                "created",
                "id",
                "livemode",
                "object",
                "type",
                "value"
              ],
              "title": "tax_id",
              "type": "object",
              "x-expandableFields": [
                "customer",
                "verification"
              ],
              "x-resourceId": "tax_id"
            },
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "TaxIDsList",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      },
      "test_clock": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A test clock enables deterministic control over objects in testmode. With a test clock, you can create\nobjects at a frozen time in the past or future, and advance to a specific future time to observe webhooks and state changes. After the clock advances,\nyou can either validate the current state of your scenario (and test your assumptions), change the current state of your scenario (and test more complex scenarios), or keep advancing forward in time.",
          "properties": {
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "deletes_after": {
              "description": "Time at which this clock is scheduled to auto delete.",
              "format": "unix-time",
              "type": "integer"
            },
            "frozen_time": {
              "description": "Time at which all objects belonging to this clock are frozen.",
              "format": "unix-time",
              "type": "integer"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "name": {
              "description": "The custom name supplied at creation.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "test_helpers.test_clock"
              ],
              "type": "string"
            },
            "status": {
              "description": "The status of the Test Clock.",
              "enum": [
                "advancing",
                "internal_failure",
                "ready"
              ],
              "type": "string"
            }
          },
          "required": [
            "created",
            "deletes_after",
            "frozen_time",
            "id",
            "livemode",
            "object",
            "status"
          ],
          "title": "TestClock",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "test_helpers.test_clock"
        }
      ]
    },
    "required": [
      "created",
      "id",
      "livemode",
      "object"
    ],
    "title": "Customer",
    "type": "object",
    "x-expandableFields": [
      "address",
      "cash_balance",
      "default_source",
      "discount",
      "invoice_settings",
      "shipping",
      "sources",
      "subscriptions",
      "tax",
      "tax_ids",
      "test_clock"
    ],
    "x-resourceId": "customer"
  },
  "discount": {
    "description": "A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).\nIt contains information about when the discount began, when it will end, and what it is applied to.\n\nRelated guide: [Applying Discounts to Subscriptions](https://stripe.com/docs/billing/subscriptions/discounts).",
    "properties": {
      "checkout_session": {
        "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "coupon": {
        "description": "A coupon contains information about a percent-off or amount-off discount you\nmight want to apply to a customer. Coupons may be applied to [subscriptions](https://stripe.com/docs/api#subscriptions), [invoices](https://stripe.com/docs/api#invoices),\n[checkout sessions](https://stripe.com/docs/api/checkout/sessions), [quotes](https://stripe.com/docs/api#quotes), and more. Coupons do not work with conventional one-off [charges](https://stripe.com/docs/api#create_charge) or [payment intents](https://stripe.com/docs/api/payment_intents).",
        "properties": {
          "amount_off": {
            "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.",
            "nullable": true,
            "type": "integer"
          },
          "applies_to": {
            "$ref": "#/components/schemas/coupon_applies_to"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "If `amount_off` has been set, the three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the amount to take off.",
            "nullable": true,
            "type": "string"
          },
          "currency_options": {
            "additionalProperties": {
              "$ref": "#/components/schemas/coupon_currency_option"
            },
            "description": "Coupons defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
            "type": "object"
          },
          "duration": {
            "description": "One of `forever`, `once`, and `repeating`. Describes how long a customer who applies this coupon will get the discount.",
            "enum": [
              "forever",
              "once",
              "repeating"
            ],
            "type": "string"
          },
          "duration_in_months": {
            "description": "If `duration` is `repeating`, the number of months the coupon applies. Null if coupon `duration` is `forever` or `once`.",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "max_redemptions": {
            "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.",
            "nullable": true,
            "type": "integer"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "name": {
            "description": "Name of the coupon displayed to customers on for instance invoices or receipts.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "coupon"
            ],
            "type": "string"
          },
          "percent_off": {
            "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a %s100 invoice %s50 instead.",
            "nullable": true,
            "type": "number"
          },
          "redeem_by": {
            "description": "Date after which the coupon can no longer be redeemed.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "times_redeemed": {
            "description": "Number of times this coupon has been applied to a customer.",
            "type": "integer"
          },
          "valid": {
            "description": "Taking account of the above properties, whether this coupon can still be applied to a customer.",
            "type": "boolean"
          }
        },
        "required": [
          "created",
          "duration",
          "id",
          "livemode",
          "object",
          "times_redeemed",
          "valid"
        ],
        "title": "Coupon",
        "type": "object",
        "x-expandableFields": [
          "applies_to",
          "currency_options"
        ],
        "x-resourceId": "coupon"
      },
      "customer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address.",
              "nullable": true
            },
            "balance": {
              "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
              "type": "integer"
            },
            "cash_balance": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cash_balance"
                }
              ],
              "description": "The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the customer.\n\nIf you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "delinquent": {
              "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
              "nullable": true,
              "type": "boolean"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount active on the customer, if there is one.",
              "nullable": true
            },
            "email": {
              "description": "The customer's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_credit_balance": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "The current multi-currency balances, if any, being stored on the customer.If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency.If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices.They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
              "type": "object"
            },
            "invoice_prefix": {
              "description": "The prefix for the customer used to generate unique invoice numbers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_settings": {
              "$ref": "#/components/schemas/invoice_setting_customer_setting"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The customer's full name or business name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "next_invoice_sequence": {
              "description": "The suffix of the customer's next invoice number, e.g., 0001.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            },
            "phone": {
              "description": "The customer's phone number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "preferred_locales": {
              "description": "The customer's preferred locales (languages), ordered by preference.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
              "nullable": true
            },
            "sources": {
              "description": "The customer's payment sources, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      },
                      {
                        "$ref": "#/components/schemas/source"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "subscriptions": {
              "description": "The customer's current subscriptions, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "tax": {
              "$ref": "#/components/schemas/customer_tax"
            },
            "tax_exempt": {
              "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "tax_ids": {
              "description": "The customer's tax IDs.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this customer belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object"
          ],
          "title": "Customer",
          "type": "object",
          "x-expandableFields": [
            "address",
            "cash_balance",
            "default_source",
            "discount",
            "invoice_settings",
            "shipping",
            "sources",
            "subscriptions",
            "tax",
            "tax_ids",
            "test_clock"
          ],
          "x-resourceId": "customer"
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedCustomer",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "deleted_customer"
        }
      ],
      "end": {
        "description": "If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "id": {
        "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
        "maxLength": 5000,
        "type": "string"
      },
      "invoice": {
        "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "invoice_item": {
        "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "discount"
        ],
        "type": "string"
      },
      "promotion_code": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A Promotion Code represents a customer-redeemable code for a [coupon](https://stripe.com/docs/api#coupons). It can be used to\ncreate multiple codes for a single coupon.",
          "properties": {
            "active": {
              "description": "Whether the promotion code is currently active. A promotion code is only active if the coupon is also valid.",
              "type": "boolean"
            },
            "code": {
              "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
              "maxLength": 5000,
              "type": "string"
            },
            "coupon": {
              "$ref": "#/components/schemas/coupon"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The customer that this promotion code can be used by.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "expires_at": {
              "description": "Date at which the promotion code can no longer be redeemed.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "max_redemptions": {
              "description": "Maximum number of times this promotion code can be redeemed.",
              "nullable": true,
              "type": "integer"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "promotion_code"
              ],
              "type": "string"
            },
            "restrictions": {
              "$ref": "#/components/schemas/promotion_codes_resource_restrictions"
            },
            "times_redeemed": {
              "description": "Number of times this promotion code has been used.",
              "type": "integer"
            }
          },
          "required": [
            "active",
            "code",
            "coupon",
            "created",
            "id",
            "livemode",
            "object",
            "restrictions",
            "times_redeemed"
          ],
          "title": "PromotionCode",
          "type": "object",
          "x-expandableFields": [
            "coupon",
            "customer",
            "restrictions"
          ],
          "x-resourceId": "promotion_code"
        }
      ],
      "start": {
        "description": "Date that the coupon was applied.",
        "format": "unix-time",
        "type": "integer"
      },
      "subscription": {
        "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      }
    },
    "required": [
      "coupon",
      "id",
      "object",
      "start"
    ],
    "title": "Discount",
    "type": "object",
    "x-expandableFields": [
      "coupon",
      "customer",
      "promotion_code"
    ],
    "x-resourceId": "discount"
  },
  "source": {
    "description": "`Source` objects allow you to accept a variety of payment methods. They\nrepresent a customer's payment instrument, and can be used with the Stripe API\njust like a `Card` object: once chargeable, they can be charged, or can be\nattached to customers.\n\nRelated guides: [Sources API](https://stripe.com/docs/sources) and [Sources & Customers](https://stripe.com/docs/sources/customers).",
    "properties": {
      "ach_credit_transfer": {
        "properties": {
          "account_number": {
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_name": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_type": {
            "nullable": true,
            "type": "string"
          },
          "refund_routing_number": {
            "nullable": true,
            "type": "string"
          },
          "routing_number": {
            "nullable": true,
            "type": "string"
          },
          "swift_code": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ach_debit": {
        "properties": {
          "bank_name": {
            "nullable": true,
            "type": "string"
          },
          "country": {
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "nullable": true,
            "type": "string"
          },
          "routing_number": {
            "nullable": true,
            "type": "string"
          },
          "type": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "acss_debit": {
        "properties": {
          "bank_address_city": {
            "nullable": true,
            "type": "string"
          },
          "bank_address_line_1": {
            "nullable": true,
            "type": "string"
          },
          "bank_address_line_2": {
            "nullable": true,
            "type": "string"
          },
          "bank_address_postal_code": {
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "nullable": true,
            "type": "string"
          },
          "category": {
            "nullable": true,
            "type": "string"
          },
          "country": {
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "nullable": true,
            "type": "string"
          },
          "routing_number": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "alipay": {
        "properties": {
          "data_string": {
            "nullable": true,
            "type": "string"
          },
          "native_url": {
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "amount": {
        "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for Â¥1, Japanese Yen being a zero-decimal currency) representing the total amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources.",
        "nullable": true,
        "type": "integer"
      },
      "au_becs_debit": {
        "properties": {
          "bsb_number": {
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "bancontact": {
        "properties": {
          "bank_code": {
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "nullable": true,
            "type": "string"
          },
          "iban_last4": {
            "nullable": true,
            "type": "string"
          },
          "preferred_language": {
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "card": {
        "properties": {
          "address_line1_check": {
            "nullable": true,
            "type": "string"
          },
          "address_zip_check": {
            "nullable": true,
            "type": "string"
          },
          "brand": {
            "nullable": true,
            "type": "string"
          },
          "country": {
            "nullable": true,
            "type": "string"
          },
          "cvc_check": {
            "nullable": true,
            "type": "string"
          },
          "dynamic_last4": {
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "nullable": true,
            "type": "integer"
          },
          "exp_year": {
            "nullable": true,
            "type": "integer"
          },
          "fingerprint": {
            "type": "string"
          },
          "funding": {
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "nullable": true,
            "type": "string"
          },
          "three_d_secure": {
            "type": "string"
          },
          "tokenization_method": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "card_present": {
        "properties": {
          "application_cryptogram": {
            "type": "string"
          },
          "application_preferred_name": {
            "type": "string"
          },
          "authorization_code": {
            "nullable": true,
            "type": "string"
          },
          "authorization_response_code": {
            "type": "string"
          },
          "brand": {
            "nullable": true,
            "type": "string"
          },
          "country": {
            "nullable": true,
            "type": "string"
          },
          "cvm_type": {
            "type": "string"
          },
          "data_type": {
            "nullable": true,
            "type": "string"
          },
          "dedicated_file_name": {
            "type": "string"
          },
          "emv_auth_data": {
            "type": "string"
          },
          "evidence_customer_signature": {
            "nullable": true,
            "type": "string"
          },
          "evidence_transaction_certificate": {
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "nullable": true,
            "type": "integer"
          },
          "exp_year": {
            "nullable": true,
            "type": "integer"
          },
          "fingerprint": {
            "type": "string"
          },
          "funding": {
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "nullable": true,
            "type": "string"
          },
          "pos_device_id": {
            "nullable": true,
            "type": "string"
          },
          "pos_entry_mode": {
            "type": "string"
          },
          "read_method": {
            "nullable": true,
            "type": "string"
          },
          "reader": {
            "nullable": true,
            "type": "string"
          },
          "terminal_verification_results": {
            "type": "string"
          },
          "transaction_status_information": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "client_secret": {
        "description": "The client secret of the source. Used for client-side retrieval using a publishable key.",
        "maxLength": 5000,
        "type": "string"
      },
      "code_verification": {
        "description": "",
        "properties": {
          "attempts_remaining": {
            "description": "The number of attempts remaining to authenticate the source object with a verification code.",
            "type": "integer"
          },
          "status": {
            "description": "The status of the code verification, either `pending` (awaiting verification, `attempts_remaining` should be greater than 0), `succeeded` (successful verification) or `failed` (failed verification, cannot be verified anymore as `attempts_remaining` should be 0).",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "attempts_remaining",
          "status"
        ],
        "title": "SourceCodeVerificationFlow",
        "type": "object",
        "x-expandableFields": []
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready. Required for `single_use` sources.",
        "nullable": true,
        "type": "string"
      },
      "customer": {
        "description": "The ID of the customer to which this source is attached. This will not be present when the source has not been attached to a customer.",
        "maxLength": 5000,
        "type": "string"
      },
      "eps": {
        "properties": {
          "reference": {
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "flow": {
        "description": "The authentication `flow` of the source. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`.",
        "maxLength": 5000,
        "type": "string"
      },
      "giropay": {
        "properties": {
          "bank_code": {
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "ideal": {
        "properties": {
          "bank": {
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "nullable": true,
            "type": "string"
          },
          "iban_last4": {
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "klarna": {
        "properties": {
          "background_image_url": {
            "type": "string"
          },
          "client_token": {
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "page_title": {
            "type": "string"
          },
          "pay_later_asset_urls_descriptive": {
            "type": "string"
          },
          "pay_later_asset_urls_standard": {
            "type": "string"
          },
          "pay_later_name": {
            "type": "string"
          },
          "pay_later_redirect_url": {
            "type": "string"
          },
          "pay_now_asset_urls_descriptive": {
            "type": "string"
          },
          "pay_now_asset_urls_standard": {
            "type": "string"
          },
          "pay_now_name": {
            "type": "string"
          },
          "pay_now_redirect_url": {
            "type": "string"
          },
          "pay_over_time_asset_urls_descriptive": {
            "type": "string"
          },
          "pay_over_time_asset_urls_standard": {
            "type": "string"
          },
          "pay_over_time_name": {
            "type": "string"
          },
          "pay_over_time_redirect_url": {
            "type": "string"
          },
          "payment_method_categories": {
            "type": "string"
          },
          "purchase_country": {
            "type": "string"
          },
          "purchase_type": {
            "type": "string"
          },
          "redirect_url": {
            "type": "string"
          },
          "shipping_delay": {
            "type": "integer"
          },
          "shipping_first_name": {
            "type": "string"
          },
          "shipping_last_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "multibanco": {
        "properties": {
          "entity": {
            "nullable": true,
            "type": "string"
          },
          "reference": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_city": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_country": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_line1": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_line2": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_postal_code": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_state": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_name": {
            "nullable": true,
            "type": "string"
          },
          "refund_iban": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "source"
        ],
        "type": "string"
      },
      "owner": [
        {
          "description": "",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "Owner's address.",
              "nullable": true
            },
            "email": {
              "description": "Owner's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "name": {
              "description": "Owner's full name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "phone": {
              "description": "Owner's phone number (including extension).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "verified_address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "Verified owner's address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.",
              "nullable": true
            },
            "verified_email": {
              "description": "Verified owner's email address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "verified_name": {
              "description": "Verified owner's full name. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "verified_phone": {
              "description": "Verified owner's phone number (including extension). Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "SourceOwner",
          "type": "object",
          "x-expandableFields": [
            "address",
            "verified_address"
          ]
        }
      ],
      "p24": {
        "properties": {
          "reference": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "receiver": {
        "description": "",
        "properties": {
          "address": {
            "description": "The address of the receiver source. This is the value that should be communicated to the customer to send their funds to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "amount_charged": {
            "description": "The total amount that was moved to your balance. This is almost always equal to the amount charged. In rare cases when customers deposit excess funds and we are unable to refund those, those funds get moved to your balance and show up in amount_charged as well. The amount charged is expressed in the source's currency.",
            "type": "integer"
          },
          "amount_received": {
            "description": "The total amount received by the receiver source. `amount_received = amount_returned + amount_charged` should be true for consumed sources unless customers deposit excess funds. The amount received is expressed in the source's currency.",
            "type": "integer"
          },
          "amount_returned": {
            "description": "The total amount that was returned to the customer. The amount returned is expressed in the source's currency.",
            "type": "integer"
          },
          "refund_attributes_method": {
            "description": "Type of refund attribute method, one of `email`, `manual`, or `none`.",
            "maxLength": 5000,
            "type": "string"
          },
          "refund_attributes_status": {
            "description": "Type of refund attribute status, one of `missing`, `requested`, or `available`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "amount_charged",
          "amount_received",
          "amount_returned",
          "refund_attributes_method",
          "refund_attributes_status"
        ],
        "title": "SourceReceiverFlow",
        "type": "object",
        "x-expandableFields": []
      },
      "redirect": {
        "description": "",
        "properties": {
          "failure_reason": {
            "description": "The failure reason for the redirect, either `user_abort` (the customer aborted or dropped out of the redirect flow), `declined` (the authentication failed or the transaction was declined), or `processing_error` (the redirect failed due to a technical error). Present only if the redirect status is `failed`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "return_url": {
            "description": "The URL you provide to redirect the customer to after they authenticated their payment.",
            "maxLength": 5000,
            "type": "string"
          },
          "status": {
            "description": "The status of the redirect, either `pending` (ready to be used by your customer to authenticate the transaction), `succeeded` (succesful authentication, cannot be reused) or `not_required` (redirect should not be used) or `failed` (failed authentication, cannot be reused).",
            "maxLength": 5000,
            "type": "string"
          },
          "url": {
            "description": "The URL provided to you to redirect a customer to as part of a `redirect` authentication flow.",
            "maxLength": 2048,
            "type": "string"
          }
        },
        "required": [
          "return_url",
          "status",
          "url"
        ],
        "title": "SourceRedirectFlow",
        "type": "object",
        "x-expandableFields": []
      },
      "sepa_debit": {
        "properties": {
          "bank_code": {
            "nullable": true,
            "type": "string"
          },
          "branch_code": {
            "nullable": true,
            "type": "string"
          },
          "country": {
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "nullable": true,
            "type": "string"
          },
          "mandate_reference": {
            "nullable": true,
            "type": "string"
          },
          "mandate_url": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "sofort": {
        "properties": {
          "bank_code": {
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "nullable": true,
            "type": "string"
          },
          "country": {
            "nullable": true,
            "type": "string"
          },
          "iban_last4": {
            "nullable": true,
            "type": "string"
          },
          "preferred_language": {
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "source_order": {
        "description": "",
        "properties": {
          "amount": {
            "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for Â¥1, Japanese Yen being a zero-decimal currency) representing the total amount for the order.",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "email": {
            "description": "The email address of the customer placing the order.",
            "maxLength": 5000,
            "type": "string"
          },
          "items": {
            "description": "List of items constituting the order.",
            "items": {
              "$ref": "#/components/schemas/source_order_item"
            },
            "nullable": true,
            "type": "array"
          },
          "shipping": {
            "$ref": "#/components/schemas/shipping"
          }
        },
        "required": [
          "amount",
          "currency"
        ],
        "title": "SourceOrder",
        "type": "object",
        "x-expandableFields": [
          "items",
          "shipping"
        ]
      },
      "statement_descriptor": {
        "description": "Extra information about a source. This will appear on your customer's statement every time you charge the source.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "status": {
        "description": "The status of the source, one of `canceled`, `chargeable`, `consumed`, `failed`, or `pending`. Only `chargeable` sources can be used to create a charge.",
        "maxLength": 5000,
        "type": "string"
      },
      "three_d_secure": {
        "properties": {
          "address_line1_check": {
            "nullable": true,
            "type": "string"
          },
          "address_zip_check": {
            "nullable": true,
            "type": "string"
          },
          "authenticated": {
            "nullable": true,
            "type": "boolean"
          },
          "brand": {
            "nullable": true,
            "type": "string"
          },
          "card": {
            "nullable": true,
            "type": "string"
          },
          "country": {
            "nullable": true,
            "type": "string"
          },
          "customer": {
            "nullable": true,
            "type": "string"
          },
          "cvc_check": {
            "nullable": true,
            "type": "string"
          },
          "dynamic_last4": {
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "nullable": true,
            "type": "integer"
          },
          "exp_year": {
            "nullable": true,
            "type": "integer"
          },
          "fingerprint": {
            "type": "string"
          },
          "funding": {
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "nullable": true,
            "type": "string"
          },
          "three_d_secure": {
            "type": "string"
          },
          "tokenization_method": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": {
        "description": "The `type` of the source. The `type` is a payment method, one of `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `klarna`, `p24`, `sepa_debit`, `sofort`, `three_d_secure`, or `wechat`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https://stripe.com/docs/sources) used.",
        "enum": [
          "ach_credit_transfer",
          "ach_debit",
          "acss_debit",
          "alipay",
          "au_becs_debit",
          "bancontact",
          "card",
          "card_present",
          "eps",
          "giropay",
          "ideal",
          "klarna",
          "multibanco",
          "p24",
          "sepa_debit",
          "sofort",
          "three_d_secure",
          "wechat"
        ],
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "usage": {
        "description": "Either `reusable` or `single_use`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "wechat": {
        "properties": {
          "prepay_id": {
            "type": "string"
          },
          "qr_code_url": {
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "required": [
      "client_secret",
      "created",
      "flow",
      "id",
      "livemode",
      "object",
      "status",
      "type"
    ],
    "title": "Source",
    "type": "object",
    "x-expandableFields": [
      "code_verification",
      "owner",
      "receiver",
      "redirect",
      "source_order"
    ],
    "x-resourceId": "source"
  },
  "subscription": {
    "description": "Subscriptions allow you to charge a customer on a recurring basis.\n\nRelated guide: [Creating Subscriptions](https://stripe.com/docs/billing/subscriptions/creating).",
    "properties": {
      "application": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "",
          "properties": {
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "The name of the application.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Application",
          "type": "object",
          "x-expandableFields": []
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "The name of the application.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedApplication",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "application_fee_percent": {
        "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.",
        "nullable": true,
        "type": "number"
      },
      "automatic_tax": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether Stripe automatically computes tax on this subscription.",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "SubscriptionAutomaticTax",
        "type": "object",
        "x-expandableFields": []
      },
      "billing_cycle_anchor": {
        "description": "Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.",
        "format": "unix-time",
        "type": "integer"
      },
      "billing_thresholds": [
        {
          "description": "",
          "properties": {
            "amount_gte": {
              "description": "Monetary threshold that triggers the subscription to create an invoice",
              "nullable": true,
              "type": "integer"
            },
            "reset_billing_cycle_anchor": {
              "description": "Indicates if the `billing_cycle_anchor` should be reset when a threshold is reached. If true, `billing_cycle_anchor` will be updated to the date/time the threshold was last reached; otherwise, the value will remain unchanged. This value may not be `true` if the subscription contains items with plans that have `aggregate_usage=last_ever`.",
              "nullable": true,
              "type": "boolean"
            }
          },
          "title": "SubscriptionBillingThresholds",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "cancel_at": {
        "description": "A date in the future at which the subscription will automatically get canceled",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "cancel_at_period_end": {
        "description": "If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.",
        "type": "boolean"
      },
      "canceled_at": {
        "description": "If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will reflect the time of the most recent update request, not the end of the subscription period when the subscription is automatically moved to a canceled state.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "collection_method": {
        "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions.",
        "enum": [
          "charge_automatically",
          "send_invoice"
        ],
        "type": "string"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "current_period_end": {
        "description": "End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.",
        "format": "unix-time",
        "type": "integer"
      },
      "current_period_start": {
        "description": "Start of the current period that the subscription has been invoiced for.",
        "format": "unix-time",
        "type": "integer"
      },
      "customer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address.",
              "nullable": true
            },
            "balance": {
              "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
              "type": "integer"
            },
            "cash_balance": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cash_balance"
                }
              ],
              "description": "The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the customer.\n\nIf you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "delinquent": {
              "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
              "nullable": true,
              "type": "boolean"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount active on the customer, if there is one.",
              "nullable": true
            },
            "email": {
              "description": "The customer's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_credit_balance": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "The current multi-currency balances, if any, being stored on the customer.If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency.If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices.They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
              "type": "object"
            },
            "invoice_prefix": {
              "description": "The prefix for the customer used to generate unique invoice numbers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_settings": {
              "$ref": "#/components/schemas/invoice_setting_customer_setting"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The customer's full name or business name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "next_invoice_sequence": {
              "description": "The suffix of the customer's next invoice number, e.g., 0001.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            },
            "phone": {
              "description": "The customer's phone number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "preferred_locales": {
              "description": "The customer's preferred locales (languages), ordered by preference.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
              "nullable": true
            },
            "sources": {
              "description": "The customer's payment sources, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      },
                      {
                        "$ref": "#/components/schemas/source"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "subscriptions": {
              "description": "The customer's current subscriptions, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "tax": {
              "$ref": "#/components/schemas/customer_tax"
            },
            "tax_exempt": {
              "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "tax_ids": {
              "description": "The customer's tax IDs.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this customer belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object"
          ],
          "title": "Customer",
          "type": "object",
          "x-expandableFields": [
            "address",
            "cash_balance",
            "default_source",
            "discount",
            "invoice_settings",
            "shipping",
            "sources",
            "subscriptions",
            "tax",
            "tax_ids",
            "test_clock"
          ],
          "x-resourceId": "customer"
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedCustomer",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "deleted_customer"
        }
      ],
      "days_until_due": {
        "description": "Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`.",
        "nullable": true,
        "type": "integer"
      },
      "default_payment_method": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "PaymentMethod objects represent your customer's payment instruments.\nYou can use them with [PaymentIntents](https://stripe.com/docs/payments/payment-intents) to collect payments or save them to\nCustomer objects to store instrument details for future payments.\n\nRelated guides: [Payment Methods](https://stripe.com/docs/payments/payment-methods) and [More Payment Scenarios](https://stripe.com/docs/payments/more-payment-scenarios).",
          "properties": {
            "acss_debit": {
              "$ref": "#/components/schemas/payment_method_acss_debit"
            },
            "affirm": {
              "$ref": "#/components/schemas/payment_method_affirm"
            },
            "afterpay_clearpay": {
              "$ref": "#/components/schemas/payment_method_afterpay_clearpay"
            },
            "alipay": {
              "$ref": "#/components/schemas/payment_flows_private_payment_methods_alipay"
            },
            "au_becs_debit": {
              "$ref": "#/components/schemas/payment_method_au_becs_debit"
            },
            "bacs_debit": {
              "$ref": "#/components/schemas/payment_method_bacs_debit"
            },
            "bancontact": {
              "$ref": "#/components/schemas/payment_method_bancontact"
            },
            "billing_details": {
              "$ref": "#/components/schemas/billing_details"
            },
            "blik": {
              "$ref": "#/components/schemas/payment_method_blik"
            },
            "boleto": {
              "$ref": "#/components/schemas/payment_method_boleto"
            },
            "card": {
              "$ref": "#/components/schemas/payment_method_card"
            },
            "card_present": {
              "$ref": "#/components/schemas/payment_method_card_present"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                }
              ],
              "description": "The ID of the Customer to which this PaymentMethod is saved. This will not be set when the PaymentMethod has not been saved to a Customer.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  }
                ]
              }
            },
            "customer_balance": {
              "$ref": "#/components/schemas/payment_method_customer_balance"
            },
            "eps": {
              "$ref": "#/components/schemas/payment_method_eps"
            },
            "fpx": {
              "$ref": "#/components/schemas/payment_method_fpx"
            },
            "giropay": {
              "$ref": "#/components/schemas/payment_method_giropay"
            },
            "grabpay": {
              "$ref": "#/components/schemas/payment_method_grabpay"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "ideal": {
              "$ref": "#/components/schemas/payment_method_ideal"
            },
            "interac_present": {
              "$ref": "#/components/schemas/payment_method_interac_present"
            },
            "klarna": {
              "$ref": "#/components/schemas/payment_method_klarna"
            },
            "konbini": {
              "$ref": "#/components/schemas/payment_method_konbini"
            },
            "link": {
              "$ref": "#/components/schemas/payment_method_link"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "payment_method"
              ],
              "type": "string"
            },
            "oxxo": {
              "$ref": "#/components/schemas/payment_method_oxxo"
            },
            "p24": {
              "$ref": "#/components/schemas/payment_method_p24"
            },
            "paynow": {
              "$ref": "#/components/schemas/payment_method_paynow"
            },
            "promptpay": {
              "$ref": "#/components/schemas/payment_method_promptpay"
            },
            "radar_options": {
              "$ref": "#/components/schemas/radar_radar_options"
            },
            "sepa_debit": {
              "$ref": "#/components/schemas/payment_method_sepa_debit"
            },
            "sofort": {
              "$ref": "#/components/schemas/payment_method_sofort"
            },
            "type": {
              "description": "The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.",
              "enum": [
                "acss_debit",
                "affirm",
                "afterpay_clearpay",
                "alipay",
                "au_becs_debit",
                "bacs_debit",
                "bancontact",
                "blik",
                "boleto",
                "card",
                "card_present",
                "customer_balance",
                "eps",
                "fpx",
                "giropay",
                "grabpay",
                "ideal",
                "interac_present",
                "klarna",
                "konbini",
                "link",
                "oxxo",
                "p24",
                "paynow",
                "promptpay",
                "sepa_debit",
                "sofort",
                "us_bank_account",
                "wechat_pay"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "us_bank_account": {
              "$ref": "#/components/schemas/payment_method_us_bank_account"
            },
            "wechat_pay": {
              "$ref": "#/components/schemas/payment_method_wechat_pay"
            }
          },
          "required": [
            "billing_details",
            "created",
            "id",
            "livemode",
            "object",
            "type"
          ],
          "title": "PaymentMethod",
          "type": "object",
          "x-expandableFields": [
            "acss_debit",
            "affirm",
            "afterpay_clearpay",
            "alipay",
            "au_becs_debit",
            "bacs_debit",
            "bancontact",
            "billing_details",
            "blik",
            "boleto",
            "card",
            "card_present",
            "customer",
            "customer_balance",
            "eps",
            "fpx",
            "giropay",
            "grabpay",
            "ideal",
            "interac_present",
            "klarna",
            "konbini",
            "link",
            "oxxo",
            "p24",
            "paynow",
            "promptpay",
            "radar_options",
            "sepa_debit",
            "sofort",
            "us_bank_account",
            "wechat_pay"
          ],
          "x-resourceId": "payment_method"
        }
      ],
      "default_source": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "These bank accounts are payment methods on `Customer` objects.\n\nOn the other hand [External Accounts](https://stripe.com/docs/api#external_accounts) are transfer\ndestinations on `Account` objects for [Custom accounts](https://stripe.com/docs/connect/custom-accounts).\nThey can be bank accounts or debit cards as well, and are documented in the links above.\n\nRelated guide: [Bank Debits and Transfers](https://stripe.com/docs/payments/bank-debits-transfers).",
          "properties": {
            "account": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The ID of the account that the bank account is associated with.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "account_holder_name": {
              "description": "The name of the person or business that owns the bank account.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_holder_type": {
              "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_type": {
              "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "available_payout_methods": {
              "description": "A set of available payout methods for this bank account. Only values from this set should be passed as the `method` when creating a payout.",
              "items": {
                "enum": [
                  "instant",
                  "standard"
                ],
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "bank_name": {
              "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "country": {
              "description": "Two-letter ISO code representing the country the bank account is located in.",
              "maxLength": 5000,
              "type": "string"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The ID of the customer that the bank account is associated with.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "default_for_currency": {
              "description": "Whether this bank account is the default external account for its currency.",
              "nullable": true,
              "type": "boolean"
            },
            "fingerprint": {
              "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "last4": {
              "description": "The last four digits of the bank account number.",
              "maxLength": 5000,
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "bank_account"
              ],
              "type": "string"
            },
            "routing_number": {
              "description": "The routing transit number for the bank account.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Stripe can determine that the bank account exists, its status will be `validated`. Note that there often isnâ€™t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a transfer sent to this bank account fails, we'll set the status to `errored` and will not continue to send transfers until the bank details are updated.\n\nFor external accounts, possible values are `new` and `errored`. Validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "country",
            "currency",
            "id",
            "last4",
            "object",
            "status"
          ],
          "title": "BankAccount",
          "type": "object",
          "x-expandableFields": [
            "account",
            "customer"
          ],
          "x-resourceId": "bank_account"
        },
        {
          "description": "You can store multiple cards on a customer in order to charge the customer\nlater. You can also store multiple debit cards on a recipient in order to\ntransfer to those cards later.\n\nRelated guide: [Card Payments with Sources](https://stripe.com/docs/sources/cards).",
          "properties": {
            "account": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account this card belongs to. This attribute will not be in the card object if the card belongs to a customer or recipient instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "address_city": {
              "description": "City/District/Suburb/Town/Village.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_country": {
              "description": "Billing address country, if provided when creating card.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_line1": {
              "description": "Address line 1 (Street address/PO Box/Company name).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_line1_check": {
              "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_line2": {
              "description": "Address line 2 (Apartment/Suite/Unit/Building).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_state": {
              "description": "State/County/Province/Region.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_zip": {
              "description": "ZIP or postal code.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_zip_check": {
              "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "available_payout_methods": {
              "description": "A set of available payout methods for this card. Only values from this set should be passed as the `method` when creating a payout.",
              "items": {
                "enum": [
                  "instant",
                  "standard"
                ],
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "brand": {
              "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
              "maxLength": 5000,
              "type": "string"
            },
            "country": {
              "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "currency": {
              "description": "Three-letter [ISO code for currency](https://stripe.com/docs/payouts). Only applicable on accounts (not customers or recipients). The card can be used as a transfer destination for funds in this currency.",
              "nullable": true,
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "cvc_check": {
              "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. A result of unchecked indicates that CVC was provided but hasn't been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https://support.stripe.com/questions/check-if-a-card-is-valid-without-a-charge).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_for_currency": {
              "description": "Whether this card is the default external account for its currency.",
              "nullable": true,
              "type": "boolean"
            },
            "dynamic_last4": {
              "description": "(For tokenized numbers only.) The last four digits of the device account number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exp_month": {
              "description": "Two-digit number representing the card's expiration month.",
              "type": "integer"
            },
            "exp_year": {
              "description": "Four-digit number representing the card's expiration year.",
              "type": "integer"
            },
            "fingerprint": {
              "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers whoâ€™ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "funding": {
              "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
              "maxLength": 5000,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "last4": {
              "description": "The last four digits of the card.",
              "maxLength": 5000,
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "name": {
              "description": "Cardholder name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "card"
              ],
              "type": "string"
            },
            "recipient": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/recipient"
                }
              ],
              "description": "The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/recipient"
                  }
                ]
              }
            },
            "status": {
              "description": "For external accounts, possible values are `new` and `errored`. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tokenization_method": {
              "description": "If the card number is tokenized, this is the method that was used. Can be `android_pay` (includes Google Pay), `apple_pay`, `masterpass`, `visa_checkout`, or null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "brand",
            "exp_month",
            "exp_year",
            "funding",
            "id",
            "last4",
            "object"
          ],
          "title": "Card",
          "type": "object",
          "x-expandableFields": [
            "account",
            "customer",
            "recipient"
          ],
          "x-resourceId": "card"
        },
        {
          "description": "`Source` objects allow you to accept a variety of payment methods. They\nrepresent a customer's payment instrument, and can be used with the Stripe API\njust like a `Card` object: once chargeable, they can be charged, or can be\nattached to customers.\n\nRelated guides: [Sources API](https://stripe.com/docs/sources) and [Sources & Customers](https://stripe.com/docs/sources/customers).",
          "properties": {
            "ach_credit_transfer": {
              "$ref": "#/components/schemas/source_type_ach_credit_transfer"
            },
            "ach_debit": {
              "$ref": "#/components/schemas/source_type_ach_debit"
            },
            "acss_debit": {
              "$ref": "#/components/schemas/source_type_acss_debit"
            },
            "alipay": {
              "$ref": "#/components/schemas/source_type_alipay"
            },
            "amount": {
              "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for Â¥1, Japanese Yen being a zero-decimal currency) representing the total amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources.",
              "nullable": true,
              "type": "integer"
            },
            "au_becs_debit": {
              "$ref": "#/components/schemas/source_type_au_becs_debit"
            },
            "bancontact": {
              "$ref": "#/components/schemas/source_type_bancontact"
            },
            "card": {
              "$ref": "#/components/schemas/source_type_card"
            },
            "card_present": {
              "$ref": "#/components/schemas/source_type_card_present"
            },
            "client_secret": {
              "description": "The client secret of the source. Used for client-side retrieval using a publishable key.",
              "maxLength": 5000,
              "type": "string"
            },
            "code_verification": {
              "$ref": "#/components/schemas/source_code_verification_flow"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready. Required for `single_use` sources.",
              "nullable": true,
              "type": "string"
            },
            "customer": {
              "description": "The ID of the customer to which this source is attached. This will not be present when the source has not been attached to a customer.",
              "maxLength": 5000,
              "type": "string"
            },
            "eps": {
              "$ref": "#/components/schemas/source_type_eps"
            },
            "flow": {
              "description": "The authentication `flow` of the source. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`.",
              "maxLength": 5000,
              "type": "string"
            },
            "giropay": {
              "$ref": "#/components/schemas/source_type_giropay"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "ideal": {
              "$ref": "#/components/schemas/source_type_ideal"
            },
            "klarna": {
              "$ref": "#/components/schemas/source_type_klarna"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "multibanco": {
              "$ref": "#/components/schemas/source_type_multibanco"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "source"
              ],
              "type": "string"
            },
            "owner": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/source_owner"
                }
              ],
              "description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
              "nullable": true
            },
            "p24": {
              "$ref": "#/components/schemas/source_type_p24"
            },
            "receiver": {
              "$ref": "#/components/schemas/source_receiver_flow"
            },
            "redirect": {
              "$ref": "#/components/schemas/source_redirect_flow"
            },
            "sepa_debit": {
              "$ref": "#/components/schemas/source_type_sepa_debit"
            },
            "sofort": {
              "$ref": "#/components/schemas/source_type_sofort"
            },
            "source_order": {
              "$ref": "#/components/schemas/source_order"
            },
            "statement_descriptor": {
              "description": "Extra information about a source. This will appear on your customer's statement every time you charge the source.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the source, one of `canceled`, `chargeable`, `consumed`, `failed`, or `pending`. Only `chargeable` sources can be used to create a charge.",
              "maxLength": 5000,
              "type": "string"
            },
            "three_d_secure": {
              "$ref": "#/components/schemas/source_type_three_d_secure"
            },
            "type": {
              "description": "The `type` of the source. The `type` is a payment method, one of `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `klarna`, `p24`, `sepa_debit`, `sofort`, `three_d_secure`, or `wechat`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https://stripe.com/docs/sources) used.",
              "enum": [
                "ach_credit_transfer",
                "ach_debit",
                "acss_debit",
                "alipay",
                "au_becs_debit",
                "bancontact",
                "card",
                "card_present",
                "eps",
                "giropay",
                "ideal",
                "klarna",
                "multibanco",
                "p24",
                "sepa_debit",
                "sofort",
                "three_d_secure",
                "wechat"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "usage": {
              "description": "Either `reusable` or `single_use`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "wechat": {
              "$ref": "#/components/schemas/source_type_wechat"
            }
          },
          "required": [
            "client_secret",
            "created",
            "flow",
            "id",
            "livemode",
            "object",
            "status",
            "type"
          ],
          "title": "Source",
          "type": "object",
          "x-expandableFields": [
            "code_verification",
            "owner",
            "receiver",
            "redirect",
            "source_order"
          ],
          "x-resourceId": "source"
        }
      ],
      "default_tax_rates": {
        "description": "The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.",
        "items": {
          "description": "Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.\n\nRelated guide: [Tax Rates](https://stripe.com/docs/billing/taxes/tax-rates).",
          "properties": {
            "active": {
              "description": "Defaults to `true`. When set to `false`, this tax rate cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.",
              "type": "boolean"
            },
            "country": {
              "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "description": {
              "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "display_name": {
              "description": "The display name of the tax rates as it will appear to your customer on their receipt email, PDF, and the hosted invoice page.",
              "maxLength": 5000,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "inclusive": {
              "description": "This specifies if the tax rate is inclusive or exclusive.",
              "type": "boolean"
            },
            "jurisdiction": {
              "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customerâ€™s invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "tax_rate"
              ],
              "type": "string"
            },
            "percentage": {
              "description": "This represents the tax rate percent out of 100.",
              "type": "number"
            },
            "state": {
              "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tax_type": {
              "description": "The high-level tax type, such as `vat` or `sales_tax`.",
              "enum": [
                "gst",
                "hst",
                "jct",
                "pst",
                "qst",
                "rst",
                "sales_tax",
                "vat"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "active",
            "created",
            "display_name",
            "id",
            "inclusive",
            "livemode",
            "object",
            "percentage"
          ],
          "title": "TaxRate",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "tax_rate"
        },
        "nullable": true,
        "type": "array"
      },
      "description": {
        "description": "The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces.",
        "maxLength": 500,
        "nullable": true,
        "type": "string"
      },
      "discount": [
        {
          "description": "A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).\nIt contains information about when the discount began, when it will end, and what it is applied to.\n\nRelated guide: [Applying Discounts to Subscriptions](https://stripe.com/docs/billing/subscriptions/discounts).",
          "properties": {
            "checkout_session": {
              "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "coupon": {
              "$ref": "#/components/schemas/coupon"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The ID of the customer associated with this discount.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "end": {
              "description": "If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "id": {
              "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_item": {
              "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "discount"
              ],
              "type": "string"
            },
            "promotion_code": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/promotion_code"
                }
              ],
              "description": "The promotion code applied to create this discount.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/promotion_code"
                  }
                ]
              }
            },
            "start": {
              "description": "Date that the coupon was applied.",
              "format": "unix-time",
              "type": "integer"
            },
            "subscription": {
              "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "coupon",
            "id",
            "object",
            "start"
          ],
          "title": "Discount",
          "type": "object",
          "x-expandableFields": [
            "coupon",
            "customer",
            "promotion_code"
          ],
          "x-resourceId": "discount"
        }
      ],
      "ended_at": {
        "description": "If the subscription has ended, the date the subscription ended.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "items": {
        "description": "List of subscription items, each with an attached price.",
        "properties": {
          "data": {
            "description": "Details about each object.",
            "items": {
              "description": "Subscription items allow you to create customer subscriptions with more than\none plan, making it easy to represent complex billing relationships.",
              "properties": {
                "billing_thresholds": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/subscription_item_billing_thresholds"
                    }
                  ],
                  "description": "Define thresholds at which an invoice will be sent, and the related subscription advanced to a new billing period",
                  "nullable": true
                },
                "created": {
                  "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                  "type": "integer"
                },
                "id": {
                  "description": "Unique identifier for the object.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "metadata": {
                  "additionalProperties": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                  "type": "object"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "subscription_item"
                  ],
                  "type": "string"
                },
                "price": {
                  "$ref": "#/components/schemas/price"
                },
                "quantity": {
                  "description": "The [quantity](https://stripe.com/docs/subscriptions/quantities) of the plan to which the customer should be subscribed.",
                  "type": "integer"
                },
                "subscription": {
                  "description": "The `subscription` this `subscription_item` belongs to.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "tax_rates": {
                  "description": "The tax rates which apply to this `subscription_item`. When set, the `default_tax_rates` on the subscription do not apply to this `subscription_item`.",
                  "items": {
                    "$ref": "#/components/schemas/tax_rate"
                  },
                  "nullable": true,
                  "type": "array"
                }
              },
              "required": [
                "created",
                "id",
                "metadata",
                "object",
                "price",
                "subscription"
              ],
              "title": "SubscriptionItem",
              "type": "object",
              "x-expandableFields": [
                "billing_thresholds",
                "price",
                "tax_rates"
              ],
              "x-resourceId": "subscription_item"
            },
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "SubscriptionItemList",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      },
      "latest_invoice": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Invoices are statements of amounts owed by a customer, and are either\ngenerated one-off, or generated periodically from a subscription.\n\nThey contain [invoice items](https://stripe.com/docs/api#invoiceitems), and proration adjustments\nthat may be caused by subscription upgrades/downgrades (if necessary).\n\nIf your invoice is configured to be billed through automatic charges,\nStripe automatically finalizes your invoice and attempts payment. Note\nthat finalizing the invoice,\n[when automatic](https://stripe.com/docs/billing/invoices/workflow/#auto_advance), does\nnot happen immediately as the invoice is created. Stripe waits\nuntil one hour after the last webhook was successfully sent (or the last\nwebhook timed out after failing). If you (and the platforms you may have\nconnected to) have no webhooks configured, Stripe waits one hour after\ncreation to finalize the invoice.\n\nIf your invoice is configured to be billed by sending an email, then based on your\n[email settings](https://dashboard.stripe.com/account/billing/automatic),\nStripe will email the invoice to your customer and await payment. These\nemails can contain a link to a hosted page to pay the invoice.\n\nStripe applies any customer credit on the account before determining the\namount due for the invoice (i.e., the amount that will be actually\ncharged). If the amount due for the invoice is less than Stripe's [minimum allowed charge\nper currency](/docs/currencies#minimum-and-maximum-charge-amounts), the\ninvoice is automatically marked paid, and we add the amount due to the\ncustomer's credit balance which is applied to the next invoice.\n\nMore details on the customer's credit balance are\n[here](https://stripe.com/docs/billing/customer/balance).\n\nRelated guide: [Send Invoices to Customers](https://stripe.com/docs/billing/invoices/sending).",
          "properties": {
            "account_country": {
              "description": "The country of the business associated with this invoice, most often the business creating the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_name": {
              "description": "The public name of the business associated with this invoice, most often the business creating the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_tax_ids": {
              "description": "The account tax IDs associated with the invoice. Only editable when the invoice is a draft.",
              "items": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_tax_id"
                  }
                ],
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/tax_id"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_tax_id"
                    }
                  ]
                }
              },
              "nullable": true,
              "type": "array"
            },
            "amount_due": {
              "description": "Final amount due at this time for this invoice. If the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.",
              "type": "integer"
            },
            "amount_paid": {
              "description": "The amount, in %s, that was paid.",
              "type": "integer"
            },
            "amount_remaining": {
              "description": "The difference between amount_due and amount_paid, in %s.",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ],
              "description": "ID of the Connect Application that created the invoice.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_application"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The fee in %s that will be applied to the invoice and transferred to the application owner's Stripe account when the invoice is paid.",
              "nullable": true,
              "type": "integer"
            },
            "attempt_count": {
              "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule.",
              "type": "integer"
            },
            "attempted": {
              "description": "Whether an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.",
              "type": "boolean"
            },
            "auto_advance": {
              "description": "Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance) of the invoice. When `false`, the invoice's state will not automatically advance without an explicit action.",
              "type": "boolean"
            },
            "automatic_tax": {
              "$ref": "#/components/schemas/automatic_tax"
            },
            "billing_reason": {
              "description": "Indicates the reason why the invoice was created. `subscription_cycle` indicates an invoice created by a subscription advancing into a new period. `subscription_create` indicates an invoice created due to creating a subscription. `subscription_update` indicates an invoice created due to updating a subscription. `subscription` is set for all old invoices to indicate either a change to a subscription or a period advancement. `manual` is set for all invoices unrelated to a subscription (for example: created via the invoice editor). The `upcoming` value is reserved for simulated invoices per the upcoming invoice endpoint. `subscription_threshold` indicates an invoice created due to a billing threshold being reached.",
              "enum": [
                "automatic_pending_invoice_item_invoice",
                "manual",
                "quote_accept",
                "subscription",
                "subscription_create",
                "subscription_cycle",
                "subscription_threshold",
                "subscription_update",
                "upcoming"
              ],
              "nullable": true,
              "type": "string"
            },
            "charge": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/charge"
                }
              ],
              "description": "ID of the latest charge generated for this invoice, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/charge"
                  }
                ]
              }
            },
            "collection_method": {
              "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.",
              "enum": [
                "charge_automatically",
                "send_invoice"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "custom_fields": {
              "description": "Custom fields displayed on the invoice.",
              "items": {
                "$ref": "#/components/schemas/invoice_setting_custom_field"
              },
              "nullable": true,
              "type": "array"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The ID of the customer who will be billed.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "customer_address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address. Until the invoice is finalized, this field will equal `customer.address`. Once the invoice is finalized, this field will no longer be updated.",
              "nullable": true
            },
            "customer_email": {
              "description": "The customer's email. Until the invoice is finalized, this field will equal `customer.email`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_name": {
              "description": "The customer's name. Until the invoice is finalized, this field will equal `customer.name`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_phone": {
              "description": "The customer's phone number. Until the invoice is finalized, this field will equal `customer.phone`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "The customer's shipping information. Until the invoice is finalized, this field will equal `customer.shipping`. Once the invoice is finalized, this field will no longer be updated.",
              "nullable": true
            },
            "customer_tax_exempt": {
              "description": "The customer's tax exempt status. Until the invoice is finalized, this field will equal `customer.tax_exempt`. Once the invoice is finalized, this field will no longer be updated.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "customer_tax_ids": {
              "description": "The customer's tax IDs. Until the invoice is finalized, this field will contain the same tax IDs as `customer.tax_ids`. Once the invoice is finalized, this field will no longer be updated.",
              "items": {
                "$ref": "#/components/schemas/invoices_resource_invoice_tax_id"
              },
              "nullable": true,
              "type": "array"
            },
            "default_payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "default_tax_rates": {
              "description": "The tax rates applied to this invoice, if any.",
              "items": {
                "$ref": "#/components/schemas/tax_rate"
              },
              "type": "array"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount applied to this invoice, if there is one. Not populated if there are multiple discounts.",
              "nullable": true
            },
            "discounts": {
              "description": "The discounts applied to the invoice. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
              "items": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/discount"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_discount"
                  }
                ],
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/discount"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_discount"
                    }
                  ]
                }
              },
              "nullable": true,
              "type": "array"
            },
            "due_date": {
              "description": "The date on which payment for this invoice is due. This value will be `null` for invoices where `collection_method=charge_automatically`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "ending_balance": {
              "description": "Ending customer balance after the invoice is finalized. Invoices are finalized approximately an hour after successful webhook delivery or when payment collection is attempted for the invoice. If the invoice has not been finalized yet, this will be null.",
              "nullable": true,
              "type": "integer"
            },
            "footer": {
              "description": "Footer displayed on the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "hosted_invoice_url": {
              "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_pdf": {
              "description": "The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "last_finalization_error": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/api_errors"
                }
              ],
              "description": "The error encountered during the previous attempt to finalize the invoice. This field is cleared when the invoice is successfully finalized.",
              "nullable": true
            },
            "lines": {
              "description": "The individual line items that make up the invoice. `lines` is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/line_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "InvoiceLinesList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "next_payment_attempt": {
              "description": "The time at which payment will next be attempted. This value will be `null` for invoices where `collection_method=send_invoice`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "number": {
              "description": "A unique, identifying string that appears on emails sent to the customer for this invoice. This starts with the customer's unique invoice_prefix if it is specified.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "invoice"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "paid": {
              "description": "Whether payment was successfully collected for this invoice. An invoice can be paid (most commonly) with a charge or with credit from the customer's account balance.",
              "type": "boolean"
            },
            "paid_out_of_band": {
              "description": "Returns true if the invoice was manually marked paid, returns false if the invoice hasn't been paid yet or was paid on Stripe.",
              "type": "boolean"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "The PaymentIntent associated with this invoice. The PaymentIntent is generated when the invoice is finalized, and can then be used to pay the invoice. Note that voiding an invoice will cancel the PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "payment_settings": {
              "$ref": "#/components/schemas/invoices_payment_settings"
            },
            "period_end": {
              "description": "End of the usage period during which invoice items were added to this invoice.",
              "format": "unix-time",
              "type": "integer"
            },
            "period_start": {
              "description": "Start of the usage period during which invoice items were added to this invoice.",
              "format": "unix-time",
              "type": "integer"
            },
            "post_payment_credit_notes_amount": {
              "description": "Total amount of all post-payment credit notes issued for this invoice.",
              "type": "integer"
            },
            "pre_payment_credit_notes_amount": {
              "description": "Total amount of all pre-payment credit notes issued for this invoice.",
              "type": "integer"
            },
            "quote": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/quote"
                }
              ],
              "description": "The quote this invoice was generated from.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/quote"
                  }
                ]
              }
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "rendering_options": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/invoice_setting_rendering_options"
                }
              ],
              "description": "Options for invoice PDF rendering.",
              "nullable": true
            },
            "starting_balance": {
              "description": "Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance.",
              "type": "integer"
            },
            "statement_descriptor": {
              "description": "Extra information about an invoice for the customer's credit card statement.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)",
              "enum": [
                "deleted",
                "draft",
                "open",
                "paid",
                "uncollectible",
                "void"
              ],
              "nullable": true,
              "type": "string"
            },
            "status_transitions": {
              "$ref": "#/components/schemas/invoices_status_transitions"
            },
            "subscription": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ],
              "description": "The subscription that this invoice was prepared for, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/subscription"
                  }
                ]
              }
            },
            "subscription_proration_date": {
              "description": "Only set for upcoming invoices that preview prorations. The time used to calculate prorations.",
              "type": "integer"
            },
            "subtotal": {
              "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or exclusive tax is applied. Item discounts are already incorporated",
              "type": "integer"
            },
            "subtotal_excluding_tax": {
              "description": "The integer amount in %s representing the subtotal of the invoice before any invoice level discount or tax is applied. Item discounts are already incorporated",
              "nullable": true,
              "type": "integer"
            },
            "tax": {
              "description": "The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice.",
              "nullable": true,
              "type": "integer"
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this invoice belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            },
            "threshold_reason": {
              "$ref": "#/components/schemas/invoice_threshold_reason"
            },
            "total": {
              "description": "Total after discounts and taxes.",
              "type": "integer"
            },
            "total_discount_amounts": {
              "description": "The aggregate amounts calculated per discount across all line items.",
              "items": {
                "$ref": "#/components/schemas/discounts_resource_discount_amount"
              },
              "nullable": true,
              "type": "array"
            },
            "total_excluding_tax": {
              "description": "The integer amount in %s representing the total amount of the invoice including all discounts but excluding all tax.",
              "nullable": true,
              "type": "integer"
            },
            "total_tax_amounts": {
              "description": "The aggregate amounts calculated per tax rate for all line items.",
              "items": {
                "$ref": "#/components/schemas/invoice_tax_amount"
              },
              "type": "array"
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/invoice_transfer_data"
                }
              ],
              "description": "The account (if any) the payment will be attributed to for tax reporting, and where funds from the payment will be transferred to for the invoice.",
              "nullable": true
            },
            "webhooks_delivered_at": {
              "description": "Invoices are automatically paid or sent 1 hour after webhooks are delivered, or until all webhook delivery attempts have [been exhausted](https://stripe.com/docs/billing/webhooks#understand). This field tracks the time when webhooks for this invoice were successfully delivered. If the invoice had no webhooks to deliver, this will be set while the invoice is being created.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            }
          },
          "required": [
            "amount_due",
            "amount_paid",
            "amount_remaining",
            "attempt_count",
            "attempted",
            "automatic_tax",
            "collection_method",
            "created",
            "currency",
            "default_tax_rates",
            "lines",
            "livemode",
            "object",
            "paid",
            "paid_out_of_band",
            "payment_settings",
            "period_end",
            "period_start",
            "post_payment_credit_notes_amount",
            "pre_payment_credit_notes_amount",
            "starting_balance",
            "status_transitions",
            "subtotal",
            "total",
            "total_tax_amounts"
          ],
          "title": "Invoice",
          "type": "object",
          "x-expandableFields": [
            "account_tax_ids",
            "application",
            "automatic_tax",
            "charge",
            "custom_fields",
            "customer",
            "customer_address",
            "customer_shipping",
            "customer_tax_ids",
            "default_payment_method",
            "default_source",
            "default_tax_rates",
            "discount",
            "discounts",
            "last_finalization_error",
            "lines",
            "on_behalf_of",
            "payment_intent",
            "payment_settings",
            "quote",
            "rendering_options",
            "status_transitions",
            "subscription",
            "test_clock",
            "threshold_reason",
            "total_discount_amounts",
            "total_tax_amounts",
            "transfer_data"
          ],
          "x-resourceId": "invoice"
        }
      ],
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "next_pending_invoice_item_invoice": {
        "description": "Specifies the approximate timestamp on which any pending invoice items will be billed according to the schedule provided at `pending_invoice_item_interval`.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "subscription"
        ],
        "type": "string"
      },
      "pause_collection": [
        {
          "description": "The Pause Collection settings determine how we will pause collection for this subscription and for how long the subscription\nshould be paused.",
          "properties": {
            "behavior": {
              "description": "The payment collection behavior for this subscription while paused. One of `keep_as_draft`, `mark_uncollectible`, or `void`.",
              "enum": [
                "keep_as_draft",
                "mark_uncollectible",
                "void"
              ],
              "type": "string"
            },
            "resumes_at": {
              "description": "The time after which the subscription will resume collecting payments.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            }
          },
          "required": [
            "behavior"
          ],
          "title": "SubscriptionsResourcePauseCollection",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "payment_settings": [
        {
          "description": "",
          "properties": {
            "payment_method_options": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscriptions_resource_payment_method_options"
                }
              ],
              "description": "Payment-method-specific configuration to provide to invoices created by the subscription.",
              "nullable": true
            },
            "payment_method_types": {
              "description": "The list of payment method types to provide to every invoice created by the subscription. If not set, Stripe attempts to automatically determine the types to use by looking at the invoiceâ€™s default payment method, the subscriptionâ€™s default payment method, the customerâ€™s default payment method, and your [invoice template settings](https://dashboard.stripe.com/settings/billing/invoice).",
              "items": {
                "enum": [
                  "ach_credit_transfer",
                  "ach_debit",
                  "acss_debit",
                  "au_becs_debit",
                  "bacs_debit",
                  "bancontact",
                  "boleto",
                  "card",
                  "customer_balance",
                  "fpx",
                  "giropay",
                  "grabpay",
                  "ideal",
                  "konbini",
                  "link",
                  "paynow",
                  "promptpay",
                  "sepa_debit",
                  "sofort",
                  "us_bank_account",
                  "wechat_pay"
                ],
                "type": "string",
                "x-stripeBypassValidation": true
              },
              "nullable": true,
              "type": "array"
            },
            "save_default_payment_method": {
              "description": "Either `off`, or `on_subscription`. With `on_subscription` Stripe updates `subscription.default_payment_method` when a subscription payment succeeds.",
              "enum": [
                "off",
                "on_subscription"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          "title": "SubscriptionsResourcePaymentSettings",
          "type": "object",
          "x-expandableFields": [
            "payment_method_options"
          ]
        }
      ],
      "pending_invoice_item_interval": [
        {
          "description": "",
          "properties": {
            "interval": {
              "description": "Specifies invoicing frequency. Either `day`, `week`, `month` or `year`.",
              "enum": [
                "day",
                "month",
                "week",
                "year"
              ],
              "type": "string"
            },
            "interval_count": {
              "description": "The number of intervals between invoices. For example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks).",
              "type": "integer"
            }
          },
          "required": [
            "interval",
            "interval_count"
          ],
          "title": "SubscriptionPendingInvoiceItemInterval",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "pending_setup_intent": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A SetupIntent guides you through the process of setting up and saving a customer's payment credentials for future payments.\nFor example, you could use a SetupIntent to set up and save your customer's card without immediately collecting a payment.\nLater, you can use [PaymentIntents](https://stripe.com/docs/api#payment_intents) to drive the payment flow.\n\nCreate a SetupIntent as soon as you're ready to collect your customer's payment credentials.\nDo not maintain long-lived, unconfirmed SetupIntents as they may no longer be valid.\nThe SetupIntent then transitions through multiple [statuses](https://stripe.com/docs/payments/intents#intent-statuses) as it guides\nyou through the setup process.\n\nSuccessful SetupIntents result in payment credentials that are optimized for future payments.\nFor example, cardholders in [certain regions](/guides/strong-customer-authentication) may need to be run through\n[Strong Customer Authentication](https://stripe.com/docs/strong-customer-authentication) at the time of payment method collection\nin order to streamline later [off-session payments](https://stripe.com/docs/payments/setup-intents).\nIf the SetupIntent is used with a [Customer](https://stripe.com/docs/api#setup_intent_object-customer), upon success,\nit will automatically attach the resulting payment method to that Customer.\nWe recommend using SetupIntents or [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage) on\nPaymentIntents to save payment methods in order to prevent saving invalid or unoptimized payment methods.\n\nBy using SetupIntents, you ensure that your customers experience the minimum set of required friction,\neven as regulations change over time.\n\nRelated guide: [Setup Intents API](https://stripe.com/docs/payments/setup-intents).",
          "properties": {
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the SetupIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "attach_to_self": {
              "description": "If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n\nIt can only be used for this Stripe Accountâ€™s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.",
              "type": "boolean"
            },
            "cancellation_reason": {
              "description": "Reason for cancellation of this SetupIntent, one of `abandoned`, `requested_by_customer`, or `duplicate`.",
              "enum": [
                "abandoned",
                "duplicate",
                "requested_by_customer"
              ],
              "nullable": true,
              "type": "string"
            },
            "client_secret": {
              "description": "The client secret of this SetupIntent. Used for client-side retrieval using a publishable key.\n\nThe client secret can be used to complete payment setup from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the Customer this SetupIntent belongs to, if one exists.\n\nIf present, the SetupIntent's payment method will be attached to the Customer on successful setup. Payment methods attached to other Customers cannot be used with this SetupIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "flow_directions": {
              "description": "Indicates the directions of money movement for which this payment method is intended to be used.\n\nInclude `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.",
              "items": {
                "enum": [
                  "inbound",
                  "outbound"
                ],
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "last_setup_error": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/api_errors"
                }
              ],
              "description": "The error encountered in the previous SetupIntent confirmation.",
              "nullable": true
            },
            "latest_attempt": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/setup_attempt"
                }
              ],
              "description": "The most recent SetupAttempt for this SetupIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/setup_attempt"
                  }
                ]
              }
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "mandate": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/mandate"
                }
              ],
              "description": "ID of the multi use Mandate generated by the SetupIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/mandate"
                  }
                ]
              }
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "next_action": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/setup_intent_next_action"
                }
              ],
              "description": "If present, this property tells you what actions you need to take in order for your customer to continue payment setup.",
              "nullable": true
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "setup_intent"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) for which the setup is intended.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the payment method used with this SetupIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "payment_method_options": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/setup_intent_payment_method_options"
                }
              ],
              "description": "Payment-method-specific configuration for this SetupIntent.",
              "nullable": true
            },
            "payment_method_types": {
              "description": "The list of payment method types (e.g. card) that this SetupIntent is allowed to set up.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "single_use_mandate": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/mandate"
                }
              ],
              "description": "ID of the single_use Mandate generated by the SetupIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/mandate"
                  }
                ]
              }
            },
            "status": {
              "description": "[Status](https://stripe.com/docs/payments/intents#intent-statuses) of this SetupIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `canceled`, or `succeeded`.",
              "enum": [
                "canceled",
                "processing",
                "requires_action",
                "requires_confirmation",
                "requires_payment_method",
                "succeeded"
              ],
              "type": "string"
            },
            "usage": {
              "description": "Indicates how the payment method is intended to be used in the future.\n\nUse `on_session` if you intend to only reuse the payment method when the customer is in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. If not provided, this value defaults to `off_session`.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object",
            "payment_method_types",
            "status",
            "usage"
          ],
          "title": "SetupIntent",
          "type": "object",
          "x-expandableFields": [
            "application",
            "customer",
            "last_setup_error",
            "latest_attempt",
            "mandate",
            "next_action",
            "on_behalf_of",
            "payment_method",
            "payment_method_options",
            "single_use_mandate"
          ],
          "x-resourceId": "setup_intent"
        }
      ],
      "pending_update": [
        {
          "description": "Pending Updates store the changes pending from a previous update that will be applied\nto the Subscription upon successful payment.",
          "properties": {
            "billing_cycle_anchor": {
              "description": "If the update is applied, determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "expires_at": {
              "description": "The point after which the changes reflected by this update will be discarded and no longer applied.",
              "format": "unix-time",
              "type": "integer"
            },
            "subscription_items": {
              "description": "List of subscription items, each with an attached plan, that will be set if the update is applied.",
              "items": {
                "$ref": "#/components/schemas/subscription_item"
              },
              "nullable": true,
              "type": "array"
            },
            "trial_end": {
              "description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time, if the update is applied.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "trial_from_plan": {
              "description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.",
              "nullable": true,
              "type": "boolean"
            }
          },
          "required": [
            "expires_at"
          ],
          "title": "SubscriptionsResourcePendingUpdate",
          "type": "object",
          "x-expandableFields": [
            "subscription_items"
          ]
        }
      ],
      "schedule": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A subscription schedule allows you to create and manage the lifecycle of a subscription by predefining expected changes.\n\nRelated guide: [Subscription Schedules](https://stripe.com/docs/billing/subscriptions/subscription-schedules).",
          "properties": {
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ],
              "description": "ID of the Connect Application that created the schedule.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_application"
                  }
                ]
              }
            },
            "canceled_at": {
              "description": "Time at which the subscription schedule was canceled. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "completed_at": {
              "description": "Time at which the subscription schedule was completed. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "current_phase": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_schedule_current_phase"
                }
              ],
              "description": "Object representing the start and end dates for the current phase of the subscription schedule, if it is `active`.",
              "nullable": true
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the customer who owns the subscription schedule.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "default_settings": {
              "$ref": "#/components/schemas/subscription_schedules_resource_default_settings"
            },
            "end_behavior": {
              "description": "Behavior of the subscription schedule and underlying subscription when it ends. Possible values are `release` and `cancel`.",
              "enum": [
                "cancel",
                "none",
                "release",
                "renew"
              ],
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "subscription_schedule"
              ],
              "type": "string"
            },
            "phases": {
              "description": "Configuration for the subscription schedule's phases.",
              "items": {
                "$ref": "#/components/schemas/subscription_schedule_phase_configuration"
              },
              "type": "array"
            },
            "released_at": {
              "description": "Time at which the subscription schedule was released. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "released_subscription": {
              "description": "ID of the subscription once managed by the subscription schedule (if it is released).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The present status of the subscription schedule. Possible values are `not_started`, `active`, `completed`, `released`, and `canceled`. You can read more about the different states in our [behavior guide](https://stripe.com/docs/billing/subscriptions/subscription-schedules).",
              "enum": [
                "active",
                "canceled",
                "completed",
                "not_started",
                "released"
              ],
              "type": "string"
            },
            "subscription": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ],
              "description": "ID of the subscription managed by the subscription schedule.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/subscription"
                  }
                ]
              }
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this subscription schedule belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "customer",
            "default_settings",
            "end_behavior",
            "id",
            "livemode",
            "object",
            "phases",
            "status"
          ],
          "title": "SubscriptionSchedule",
          "type": "object",
          "x-expandableFields": [
            "application",
            "current_phase",
            "customer",
            "default_settings",
            "phases",
            "subscription",
            "test_clock"
          ],
          "x-resourceId": "subscription_schedule"
        }
      ],
      "start_date": {
        "description": "Date when the subscription was first created. The date might differ from the `created` date due to backdating.",
        "format": "unix-time",
        "type": "integer"
      },
      "status": {
        "description": "Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`, `past_due`, `canceled`, or `unpaid`. \n\nFor `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this state can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` state. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal state, the open invoice will be voided and no further invoices will be generated. \n\nA subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over. \n\nIf subscription `collection_method=charge_automatically` it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid` (depending on your subscriptions settings) when Stripe has exhausted all payment retry attempts. \n\nIf subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.",
        "enum": [
          "active",
          "canceled",
          "incomplete",
          "incomplete_expired",
          "past_due",
          "trialing",
          "unpaid"
        ],
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "test_clock": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A test clock enables deterministic control over objects in testmode. With a test clock, you can create\nobjects at a frozen time in the past or future, and advance to a specific future time to observe webhooks and state changes. After the clock advances,\nyou can either validate the current state of your scenario (and test your assumptions), change the current state of your scenario (and test more complex scenarios), or keep advancing forward in time.",
          "properties": {
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "deletes_after": {
              "description": "Time at which this clock is scheduled to auto delete.",
              "format": "unix-time",
              "type": "integer"
            },
            "frozen_time": {
              "description": "Time at which all objects belonging to this clock are frozen.",
              "format": "unix-time",
              "type": "integer"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "name": {
              "description": "The custom name supplied at creation.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "test_helpers.test_clock"
              ],
              "type": "string"
            },
            "status": {
              "description": "The status of the Test Clock.",
              "enum": [
                "advancing",
                "internal_failure",
                "ready"
              ],
              "type": "string"
            }
          },
          "required": [
            "created",
            "deletes_after",
            "frozen_time",
            "id",
            "livemode",
            "object",
            "status"
          ],
          "title": "TestClock",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "test_helpers.test_clock"
        }
      ],
      "transfer_data": [
        {
          "description": "",
          "properties": {
            "amount_percent": {
              "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the destination account. By default, the entire amount is transferred to the destination.",
              "nullable": true,
              "type": "number"
            },
            "destination": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account where funds from the payment will be transferred to upon payment success.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            }
          },
          "required": [
            "destination"
          ],
          "title": "SubscriptionTransferData",
          "type": "object",
          "x-expandableFields": [
            "destination"
          ]
        }
      ],
      "trial_end": {
        "description": "If the subscription has a trial, the end of that trial.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "trial_start": {
        "description": "If the subscription has a trial, the beginning of that trial.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      }
    },
    "required": [
      "automatic_tax",
      "billing_cycle_anchor",
      "cancel_at_period_end",
      "collection_method",
      "created",
      "currency",
      "current_period_end",
      "current_period_start",
      "customer",
      "id",
      "items",
      "livemode",
      "metadata",
      "object",
      "start_date",
      "status"
    ],
    "title": "Subscription",
    "type": "object",
    "x-expandableFields": [
      "application",
      "automatic_tax",
      "billing_thresholds",
      "customer",
      "default_payment_method",
      "default_source",
      "default_tax_rates",
      "discount",
      "items",
      "latest_invoice",
      "pause_collection",
      "payment_settings",
      "pending_invoice_item_interval",
      "pending_setup_intent",
      "pending_update",
      "schedule",
      "test_clock",
      "transfer_data"
    ],
    "x-resourceId": "subscription"
  },
  "tax_id": {
    "description": "You can add one or multiple tax IDs to a [customer](https://stripe.com/docs/api/customers).\nA customer's tax IDs are displayed on invoices and credit notes issued for the customer.\n\nRelated guide: [Customer Tax Identification Numbers](https://stripe.com/docs/billing/taxes/tax-ids).",
    "properties": {
      "country": {
        "description": "Two-letter ISO code representing the country of the tax ID.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "customer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address.",
              "nullable": true
            },
            "balance": {
              "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
              "type": "integer"
            },
            "cash_balance": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cash_balance"
                }
              ],
              "description": "The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the customer.\n\nIf you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "delinquent": {
              "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
              "nullable": true,
              "type": "boolean"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount active on the customer, if there is one.",
              "nullable": true
            },
            "email": {
              "description": "The customer's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_credit_balance": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "The current multi-currency balances, if any, being stored on the customer.If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency.If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices.They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
              "type": "object"
            },
            "invoice_prefix": {
              "description": "The prefix for the customer used to generate unique invoice numbers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_settings": {
              "$ref": "#/components/schemas/invoice_setting_customer_setting"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The customer's full name or business name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "next_invoice_sequence": {
              "description": "The suffix of the customer's next invoice number, e.g., 0001.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            },
            "phone": {
              "description": "The customer's phone number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "preferred_locales": {
              "description": "The customer's preferred locales (languages), ordered by preference.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
              "nullable": true
            },
            "sources": {
              "description": "The customer's payment sources, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      },
                      {
                        "$ref": "#/components/schemas/source"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "subscriptions": {
              "description": "The customer's current subscriptions, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "tax": {
              "$ref": "#/components/schemas/customer_tax"
            },
            "tax_exempt": {
              "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "tax_ids": {
              "description": "The customer's tax IDs.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this customer belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object"
          ],
          "title": "Customer",
          "type": "object",
          "x-expandableFields": [
            "address",
            "cash_balance",
            "default_source",
            "discount",
            "invoice_settings",
            "shipping",
            "sources",
            "subscriptions",
            "tax",
            "tax_ids",
            "test_clock"
          ],
          "x-resourceId": "customer"
        }
      ],
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "tax_id"
        ],
        "type": "string"
      },
      "type": {
        "description": "Type of the tax ID, one of `ae_trn`, `au_abn`, `au_arn`, `bg_uic`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_vat`, `cl_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `kr_brn`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `no_vat`, `nz_gst`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `th_vat`, `tw_vat`, `ua_vat`, `us_ein`, or `za_vat`. Note that some legacy tax IDs have type `unknown`",
        "enum": [
          "ae_trn",
          "au_abn",
          "au_arn",
          "bg_uic",
          "br_cnpj",
          "br_cpf",
          "ca_bn",
          "ca_gst_hst",
          "ca_pst_bc",
          "ca_pst_mb",
          "ca_pst_sk",
          "ca_qst",
          "ch_vat",
          "cl_tin",
          "es_cif",
          "eu_oss_vat",
          "eu_vat",
          "gb_vat",
          "ge_vat",
          "hk_br",
          "hu_tin",
          "id_npwp",
          "il_vat",
          "in_gst",
          "is_vat",
          "jp_cn",
          "jp_rn",
          "kr_brn",
          "li_uid",
          "mx_rfc",
          "my_frp",
          "my_itn",
          "my_sst",
          "no_vat",
          "nz_gst",
          "ru_inn",
          "ru_kpp",
          "sa_vat",
          "sg_gst",
          "sg_uen",
          "si_tin",
          "th_vat",
          "tw_vat",
          "ua_vat",
          "unknown",
          "us_ein",
          "za_vat"
        ],
        "type": "string"
      },
      "value": {
        "description": "Value of the tax ID.",
        "maxLength": 5000,
        "type": "string"
      },
      "verification": [
        {
          "description": "",
          "properties": {
            "status": {
              "description": "Verification status, one of `pending`, `verified`, `unverified`, or `unavailable`.",
              "enum": [
                "pending",
                "unavailable",
                "unverified",
                "verified"
              ],
              "type": "string"
            },
            "verified_address": {
              "description": "Verified address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "verified_name": {
              "description": "Verified name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "status"
          ],
          "title": "tax_id_verification",
          "type": "object",
          "x-expandableFields": []
        }
      ]
    },
    "required": [
      "created",
      "id",
      "livemode",
      "object",
      "type",
      "value"
    ],
    "title": "tax_id",
    "type": "object",
    "x-expandableFields": [
      "customer",
      "verification"
    ],
    "x-resourceId": "tax_id"
  },
  "file": {
    "description": "This is an object representing a file hosted on Stripe's servers. The\nfile may have been uploaded by yourself using the [create file](https://stripe.com/docs/api#create_file)\nrequest (for example, when uploading dispute evidence) or it may have\nbeen created by Stripe (for example, the results of a [Sigma scheduled\nquery](#scheduled_queries)).\n\nRelated guide: [File Upload Guide](https://stripe.com/docs/file-upload).",
    "properties": {
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "expires_at": {
        "description": "The time at which the file expires and is no longer available in epoch seconds.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "filename": {
        "description": "A filename for the file, suitable for saving to a filesystem.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "links": {
        "description": "A list of [file links](https://stripe.com/docs/api#file_links) that point at this file.",
        "nullable": true,
        "properties": {
          "data": {
            "description": "Details about each object.",
            "items": {
              "description": "To share the contents of a `File` object with non-Stripe users, you can\ncreate a `FileLink`. `FileLink`s contain a URL that can be used to\nretrieve the contents of the file without authentication.",
              "properties": {
                "created": {
                  "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                  "format": "unix-time",
                  "type": "integer"
                },
                "expired": {
                  "description": "Whether this link is already expired.",
                  "type": "boolean"
                },
                "expires_at": {
                  "description": "Time at which the link expires.",
                  "format": "unix-time",
                  "nullable": true,
                  "type": "integer"
                },
                "file": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/file"
                    }
                  ],
                  "description": "The file object this link points to.",
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/file"
                      }
                    ]
                  }
                },
                "id": {
                  "description": "Unique identifier for the object.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "livemode": {
                  "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                  "type": "boolean"
                },
                "metadata": {
                  "additionalProperties": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                  "type": "object"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "file_link"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The publicly accessible URL to download the file.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                }
              },
              "required": [
                "created",
                "expired",
                "file",
                "id",
                "livemode",
                "metadata",
                "object"
              ],
              "title": "FileLink",
              "type": "object",
              "x-expandableFields": [
                "file"
              ],
              "x-resourceId": "file_link"
            },
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "pattern": "^/v1/file_links",
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "FileFileLinkList",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "file"
        ],
        "type": "string"
      },
      "purpose": {
        "description": "The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the uploaded file.",
        "enum": [
          "account_requirement",
          "additional_verification",
          "business_icon",
          "business_logo",
          "customer_signature",
          "dispute_evidence",
          "document_provider_identity_document",
          "finance_report_run",
          "identity_document",
          "identity_document_downloadable",
          "pci_document",
          "selfie",
          "sigma_scheduled_query",
          "tax_document_user_upload"
        ],
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "size": {
        "description": "The size in bytes of the file object.",
        "type": "integer"
      },
      "title": {
        "description": "A user friendly title for the document.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "type": {
        "description": "The type of the file returned (e.g., `csv`, `pdf`, `jpg`, or `png`).",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "url": {
        "description": "The URL from which the file can be downloaded using your live secret API key.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      }
    },
    "required": [
      "created",
      "id",
      "object",
      "purpose",
      "size"
    ],
    "title": "File",
    "type": "object",
    "x-expandableFields": [
      "links"
    ],
    "x-resourceId": "file"
  },
  "verification_session": {
    "description": "A VerificationSession guides you through the process of collecting and verifying the identities\nof your users. It contains details about the type of verification, such as what [verification\ncheck](/docs/identity/verification-checks) to perform. Only create one VerificationSession for\neach verification in your system.\n\nA VerificationSession transitions through [multiple\nstatuses](/docs/identity/how-sessions-work) throughout its lifetime as it progresses through\nthe verification flow. The VerificationSession contains the userâ€™s verified data after\nverification checks are complete.\n\nRelated guide: [The Verification Sessions API](https://stripe.com/docs/identity/verification-sessions)",
    "properties": {
      "client_secret": {
        "description": "The short-lived client secret used by Stripe.js to [show a verification modal](https://stripe.com/docs/js/identity/modal) inside your app. This client secret expires after 24 hours and can only be used once. Donâ€™t store it, log it, embed it in a URL, or expose it to anyone other than the user. Make sure that you have TLS enabled on any page that includes the client secret. Refer to our docs on [passing the client secret to the frontend](https://stripe.com/docs/identity/verification-sessions#client-secret) to learn more.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "last_error": [
        {
          "description": "Shows last VerificationSession error",
          "properties": {
            "code": {
              "description": "A short machine-readable string giving the reason for the verification or user-session failure.",
              "enum": [
                "abandoned",
                "consent_declined",
                "country_not_supported",
                "device_not_supported",
                "document_expired",
                "document_type_not_supported",
                "document_unverified_other",
                "id_number_insufficient_document_data",
                "id_number_mismatch",
                "id_number_unverified_other",
                "selfie_document_missing_photo",
                "selfie_face_mismatch",
                "selfie_manipulated",
                "selfie_unverified_other",
                "under_supported_age"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "reason": {
              "description": "A message that explains the reason for verification or user-session failure.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "GelatoSessionLastError",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "last_verification_report": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A VerificationReport is the result of an attempt to collect and verify data from a user.\nThe collection of verification checks performed is determined from the `type` and `options`\nparameters used. You can find the result of each verification check performed in the\nappropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as\nreference IDs which can be used to access collected images through the [FileUpload](https://stripe.com/docs/api/files)\nAPI. To configure and create VerificationReports, use the\n[VerificationSession](https://stripe.com/docs/api/identity/verification_sessions) API.\n\nRelated guides: [Accessing verification results](https://stripe.com/docs/identity/verification-sessions#results).",
          "properties": {
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "document": {
              "$ref": "#/components/schemas/gelato_document_report"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "id_number": {
              "$ref": "#/components/schemas/gelato_id_number_report"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "identity.verification_report"
              ],
              "type": "string"
            },
            "options": {
              "$ref": "#/components/schemas/gelato_verification_report_options"
            },
            "selfie": {
              "$ref": "#/components/schemas/gelato_selfie_report"
            },
            "type": {
              "description": "Type of report.",
              "enum": [
                "document",
                "id_number"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "verification_session": {
              "description": "ID of the VerificationSession that created this report.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object",
            "options",
            "type"
          ],
          "title": "GelatoVerificationReport",
          "type": "object",
          "x-expandableFields": [
            "document",
            "id_number",
            "options",
            "selfie"
          ],
          "x-resourceId": "identity.verification_report"
        }
      ],
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "identity.verification_session"
        ],
        "type": "string"
      },
      "options": {
        "description": "",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/gelato_session_document_options"
          },
          "id_number": {
            "$ref": "#/components/schemas/gelato_session_id_number_options"
          }
        },
        "title": "GelatoVerificationSessionOptions",
        "type": "object",
        "x-expandableFields": [
          "document",
          "id_number"
        ]
      },
      "redaction": [
        {
          "description": "",
          "properties": {
            "status": {
              "description": "Indicates whether this object and its related objects have been redacted or not.",
              "enum": [
                "processing",
                "redacted"
              ],
              "type": "string"
            }
          },
          "required": [
            "status"
          ],
          "title": "verification_session_redaction",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "status": {
        "description": "Status of this VerificationSession. [Learn more about the lifecycle of sessions](https://stripe.com/docs/identity/how-sessions-work).",
        "enum": [
          "canceled",
          "processing",
          "requires_input",
          "verified"
        ],
        "type": "string"
      },
      "type": {
        "description": "The type of [verification check](https://stripe.com/docs/identity/verification-checks) to be performed.",
        "enum": [
          "document",
          "id_number"
        ],
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "url": {
        "description": "The short-lived URL that you use to redirect a user to Stripe to submit their identity information. This URL expires after 48 hours and can only be used once. Donâ€™t store it, log it, send it in emails or expose it to anyone other than the user. Refer to our docs on [verifying identity documents](https://stripe.com/docs/identity/verify-identity-documents?platform=web&type=redirect) to learn how to redirect users to Stripe.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "verified_outputs": [
        {
          "description": "",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The user's verified address.",
              "nullable": true
            },
            "dob": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/gelato_data_verified_outputs_date"
                }
              ],
              "description": "The userâ€™s verified date of birth.",
              "nullable": true
            },
            "first_name": {
              "description": "The user's verified first name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id_number": {
              "description": "The user's verified id number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id_number_type": {
              "description": "The user's verified id number type.",
              "enum": [
                "br_cpf",
                "sg_nric",
                "us_ssn"
              ],
              "nullable": true,
              "type": "string"
            },
            "last_name": {
              "description": "The user's verified last name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "GelatoVerifiedOutputs",
          "type": "object",
          "x-expandableFields": [
            "address",
            "dob"
          ]
        }
      ]
    },
    "required": [
      "created",
      "id",
      "livemode",
      "metadata",
      "object",
      "options",
      "status",
      "type"
    ],
    "title": "GelatoVerificationSession",
    "type": "object",
    "x-expandableFields": [
      "last_error",
      "last_verification_report",
      "options",
      "redaction",
      "verified_outputs"
    ],
    "x-resourceId": "identity.verification_session"
  },
  "invoice": {
    "description": "Invoices are statements of amounts owed by a customer, and are either\ngenerated one-off, or generated periodically from a subscription.\n\nThey contain [invoice items](https://stripe.com/docs/api#invoiceitems), and proration adjustments\nthat may be caused by subscription upgrades/downgrades (if necessary).\n\nIf your invoice is configured to be billed through automatic charges,\nStripe automatically finalizes your invoice and attempts payment. Note\nthat finalizing the invoice,\n[when automatic](https://stripe.com/docs/billing/invoices/workflow/#auto_advance), does\nnot happen immediately as the invoice is created. Stripe waits\nuntil one hour after the last webhook was successfully sent (or the last\nwebhook timed out after failing). If you (and the platforms you may have\nconnected to) have no webhooks configured, Stripe waits one hour after\ncreation to finalize the invoice.\n\nIf your invoice is configured to be billed by sending an email, then based on your\n[email settings](https://dashboard.stripe.com/account/billing/automatic),\nStripe will email the invoice to your customer and await payment. These\nemails can contain a link to a hosted page to pay the invoice.\n\nStripe applies any customer credit on the account before determining the\namount due for the invoice (i.e., the amount that will be actually\ncharged). If the amount due for the invoice is less than Stripe's [minimum allowed charge\nper currency](/docs/currencies#minimum-and-maximum-charge-amounts), the\ninvoice is automatically marked paid, and we add the amount due to the\ncustomer's credit balance which is applied to the next invoice.\n\nMore details on the customer's credit balance are\n[here](https://stripe.com/docs/billing/customer/balance).\n\nRelated guide: [Send Invoices to Customers](https://stripe.com/docs/billing/invoices/sending).",
    "properties": {
      "account_country": {
        "description": "The country of the business associated with this invoice, most often the business creating the invoice.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "account_name": {
        "description": "The public name of the business associated with this invoice, most often the business creating the invoice.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "account_tax_ids": {
        "description": "The account tax IDs associated with the invoice. Only editable when the invoice is a draft.",
        "items": [
          {
            "maxLength": 5000,
            "type": "string"
          },
          {
            "description": "You can add one or multiple tax IDs to a [customer](https://stripe.com/docs/api/customers).\nA customer's tax IDs are displayed on invoices and credit notes issued for the customer.\n\nRelated guide: [Customer Tax Identification Numbers](https://stripe.com/docs/billing/taxes/tax-ids).",
            "properties": {
              "country": {
                "description": "Two-letter ISO code representing the country of the tax ID.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "created": {
                "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                "format": "unix-time",
                "type": "integer"
              },
              "customer": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/customer"
                  }
                ],
                "description": "ID of the customer.",
                "nullable": true,
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/customer"
                    }
                  ]
                }
              },
              "id": {
                "description": "Unique identifier for the object.",
                "maxLength": 5000,
                "type": "string"
              },
              "livemode": {
                "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value.",
                "enum": [
                  "tax_id"
                ],
                "type": "string"
              },
              "type": {
                "description": "Type of the tax ID, one of `ae_trn`, `au_abn`, `au_arn`, `bg_uic`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_vat`, `cl_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `kr_brn`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `no_vat`, `nz_gst`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `th_vat`, `tw_vat`, `ua_vat`, `us_ein`, or `za_vat`. Note that some legacy tax IDs have type `unknown`",
                "enum": [
                  "ae_trn",
                  "au_abn",
                  "au_arn",
                  "bg_uic",
                  "br_cnpj",
                  "br_cpf",
                  "ca_bn",
                  "ca_gst_hst",
                  "ca_pst_bc",
                  "ca_pst_mb",
                  "ca_pst_sk",
                  "ca_qst",
                  "ch_vat",
                  "cl_tin",
                  "es_cif",
                  "eu_oss_vat",
                  "eu_vat",
                  "gb_vat",
                  "ge_vat",
                  "hk_br",
                  "hu_tin",
                  "id_npwp",
                  "il_vat",
                  "in_gst",
                  "is_vat",
                  "jp_cn",
                  "jp_rn",
                  "kr_brn",
                  "li_uid",
                  "mx_rfc",
                  "my_frp",
                  "my_itn",
                  "my_sst",
                  "no_vat",
                  "nz_gst",
                  "ru_inn",
                  "ru_kpp",
                  "sa_vat",
                  "sg_gst",
                  "sg_uen",
                  "si_tin",
                  "th_vat",
                  "tw_vat",
                  "ua_vat",
                  "unknown",
                  "us_ein",
                  "za_vat"
                ],
                "type": "string"
              },
              "value": {
                "description": "Value of the tax ID.",
                "maxLength": 5000,
                "type": "string"
              },
              "verification": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/tax_id_verification"
                  }
                ],
                "description": "Tax ID verification information.",
                "nullable": true
              }
            },
            "required": [
              "created",
              "id",
              "livemode",
              "object",
              "type",
              "value"
            ],
            "title": "tax_id",
            "type": "object",
            "x-expandableFields": [
              "customer",
              "verification"
            ],
            "x-resourceId": "tax_id"
          },
          {
            "description": "",
            "properties": {
              "deleted": {
                "description": "Always true for a deleted object",
                "enum": [
                  true
                ],
                "type": "boolean"
              },
              "id": {
                "description": "Unique identifier for the object.",
                "maxLength": 5000,
                "type": "string"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value.",
                "enum": [
                  "tax_id"
                ],
                "type": "string"
              }
            },
            "required": [
              "deleted",
              "id",
              "object"
            ],
            "title": "deleted_tax_id",
            "type": "object",
            "x-expandableFields": [],
            "x-resourceId": "deleted_tax_id"
          }
        ],
        "nullable": true,
        "type": "array"
      },
      "amount_due": {
        "description": "Final amount due at this time for this invoice. If the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.",
        "type": "integer"
      },
      "amount_paid": {
        "description": "The amount, in %s, that was paid.",
        "type": "integer"
      },
      "amount_remaining": {
        "description": "The difference between amount_due and amount_paid, in %s.",
        "type": "integer"
      },
      "application": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "",
          "properties": {
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "The name of the application.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Application",
          "type": "object",
          "x-expandableFields": []
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "The name of the application.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedApplication",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "application_fee_amount": {
        "description": "The fee in %s that will be applied to the invoice and transferred to the application owner's Stripe account when the invoice is paid.",
        "nullable": true,
        "type": "integer"
      },
      "attempt_count": {
        "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule.",
        "type": "integer"
      },
      "attempted": {
        "description": "Whether an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.",
        "type": "boolean"
      },
      "auto_advance": {
        "description": "Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance) of the invoice. When `false`, the invoice's state will not automatically advance without an explicit action.",
        "type": "boolean"
      },
      "automatic_tax": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether Stripe automatically computes tax on this invoice. Note that incompatible invoice items (invoice items with manually specified [tax rates](https://stripe.com/docs/api/tax_rates), negative amounts, or `tax_behavior=unspecified`) cannot be added to automatic tax invoices.",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the most recent automated tax calculation for this invoice.",
            "enum": [
              "complete",
              "failed",
              "requires_location_inputs"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "AutomaticTax",
        "type": "object",
        "x-expandableFields": []
      },
      "billing_reason": {
        "description": "Indicates the reason why the invoice was created. `subscription_cycle` indicates an invoice created by a subscription advancing into a new period. `subscription_create` indicates an invoice created due to creating a subscription. `subscription_update` indicates an invoice created due to updating a subscription. `subscription` is set for all old invoices to indicate either a change to a subscription or a period advancement. `manual` is set for all invoices unrelated to a subscription (for example: created via the invoice editor). The `upcoming` value is reserved for simulated invoices per the upcoming invoice endpoint. `subscription_threshold` indicates an invoice created due to a billing threshold being reached.",
        "enum": [
          "automatic_pending_invoice_item_invoice",
          "manual",
          "quote_accept",
          "subscription",
          "subscription_create",
          "subscription_cycle",
          "subscription_threshold",
          "subscription_update",
          "upcoming"
        ],
        "nullable": true,
        "type": "string"
      },
      "charge": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "To charge a credit or a debit card, you create a `Charge` object. You can\nretrieve and refund individual charges as well as list all charges. Charges\nare identified by a unique, random ID.\n\nRelated guide: [Accept a payment with the Charges API](https://stripe.com/docs/payments/accept-a-payment-charges).",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "amount_captured": {
              "description": "Amount in %s captured (can be less than the amount attribute on the charge if a partial capture was made).",
              "type": "integer"
            },
            "amount_refunded": {
              "description": "Amount in %s refunded (can be less than the amount attribute on the charge if a partial refund was issued).",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the charge.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "application_fee": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                }
              ],
              "description": "The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "type": "integer"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "billing_details": {
              "$ref": "#/components/schemas/billing_details"
            },
            "calculated_statement_descriptor": {
              "description": "The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "captured": {
              "description": "If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.",
              "type": "boolean"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the customer this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 40000,
              "nullable": true,
              "type": "string"
            },
            "disputed": {
              "description": "Whether the charge has been disputed.",
              "type": "boolean"
            },
            "failure_balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the reversal of the balance on your account due to payment failure.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "failure_code": {
              "description": "Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "failure_message": {
              "description": "Message to user further explaining reason for charge failure if available.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "fraud_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_fraud_details"
                }
              ],
              "description": "Information on fraud assessments for the charge.",
              "nullable": true
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "ID of the invoice this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "charge"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "outcome": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_outcome"
                }
              ],
              "description": "Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details.",
              "nullable": true
            },
            "paid": {
              "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
              "type": "boolean"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "ID of the PaymentIntent associated with this charge, if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "payment_method": {
              "description": "ID of the payment method used in this charge.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "payment_method_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_details"
                }
              ],
              "description": "Details about the payment method at the time of the transaction.",
              "nullable": true
            },
            "radar_options": {
              "$ref": "#/components/schemas/radar_radar_options"
            },
            "receipt_email": {
              "description": "This is the email address that the receipt for this charge was sent to.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_url": {
              "description": "This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "refunded": {
              "description": "Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.",
              "type": "boolean"
            },
            "refunds": {
              "description": "A list of refunds that have been applied to the charge.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/refund"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "RefundList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "review": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/review"
                }
              ],
              "description": "ID of the review associated with this charge if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/review"
                  }
                ]
              }
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Shipping information for the charge.",
              "nullable": true
            },
            "source_transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "statement_descriptor": {
              "description": "For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "statement_descriptor_suffix": {
              "description": "Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the payment is either `succeeded`, `pending`, or `failed`.",
              "enum": [
                "failed",
                "pending",
                "succeeded"
              ],
              "type": "string"
            },
            "transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_transfer_data"
                }
              ],
              "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true
            },
            "transfer_group": {
              "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "amount_captured",
            "amount_refunded",
            "billing_details",
            "captured",
            "created",
            "currency",
            "disputed",
            "id",
            "livemode",
            "metadata",
            "object",
            "paid",
            "refunded",
            "refunds",
            "status"
          ],
          "title": "Charge",
          "type": "object",
          "x-expandableFields": [
            "application",
            "application_fee",
            "balance_transaction",
            "billing_details",
            "customer",
            "failure_balance_transaction",
            "fraud_details",
            "invoice",
            "on_behalf_of",
            "outcome",
            "payment_intent",
            "payment_method_details",
            "radar_options",
            "refunds",
            "review",
            "shipping",
            "source_transfer",
            "transfer",
            "transfer_data"
          ],
          "x-resourceId": "charge"
        }
      ],
      "collection_method": {
        "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.",
        "enum": [
          "charge_automatically",
          "send_invoice"
        ],
        "type": "string"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "custom_fields": {
        "description": "Custom fields displayed on the invoice.",
        "items": {
          "description": "",
          "properties": {
            "name": {
              "description": "The name of the custom field.",
              "maxLength": 5000,
              "type": "string"
            },
            "value": {
              "description": "The value of the custom field.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "name",
            "value"
          ],
          "title": "InvoiceSettingCustomField",
          "type": "object",
          "x-expandableFields": []
        },
        "nullable": true,
        "type": "array"
      },
      "customer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address.",
              "nullable": true
            },
            "balance": {
              "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
              "type": "integer"
            },
            "cash_balance": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cash_balance"
                }
              ],
              "description": "The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the customer.\n\nIf you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "delinquent": {
              "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
              "nullable": true,
              "type": "boolean"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount active on the customer, if there is one.",
              "nullable": true
            },
            "email": {
              "description": "The customer's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_credit_balance": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "The current multi-currency balances, if any, being stored on the customer.If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency.If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices.They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
              "type": "object"
            },
            "invoice_prefix": {
              "description": "The prefix for the customer used to generate unique invoice numbers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_settings": {
              "$ref": "#/components/schemas/invoice_setting_customer_setting"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The customer's full name or business name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "next_invoice_sequence": {
              "description": "The suffix of the customer's next invoice number, e.g., 0001.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            },
            "phone": {
              "description": "The customer's phone number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "preferred_locales": {
              "description": "The customer's preferred locales (languages), ordered by preference.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
              "nullable": true
            },
            "sources": {
              "description": "The customer's payment sources, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      },
                      {
                        "$ref": "#/components/schemas/source"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "subscriptions": {
              "description": "The customer's current subscriptions, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "tax": {
              "$ref": "#/components/schemas/customer_tax"
            },
            "tax_exempt": {
              "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "tax_ids": {
              "description": "The customer's tax IDs.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this customer belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object"
          ],
          "title": "Customer",
          "type": "object",
          "x-expandableFields": [
            "address",
            "cash_balance",
            "default_source",
            "discount",
            "invoice_settings",
            "shipping",
            "sources",
            "subscriptions",
            "tax",
            "tax_ids",
            "test_clock"
          ],
          "x-resourceId": "customer"
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedCustomer",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "deleted_customer"
        }
      ],
      "customer_address": [
        {
          "description": "",
          "properties": {
            "city": {
              "description": "City, district, suburb, town, or village.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "country": {
              "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "line1": {
              "description": "Address line 1 (e.g., street, PO Box, or company name).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "line2": {
              "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "postal_code": {
              "description": "ZIP or postal code.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "state": {
              "description": "State, county, province, or region.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "Address",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "customer_email": {
        "description": "The customer's email. Until the invoice is finalized, this field will equal `customer.email`. Once the invoice is finalized, this field will no longer be updated.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "customer_name": {
        "description": "The customer's name. Until the invoice is finalized, this field will equal `customer.name`. Once the invoice is finalized, this field will no longer be updated.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "customer_phone": {
        "description": "The customer's phone number. Until the invoice is finalized, this field will equal `customer.phone`. Once the invoice is finalized, this field will no longer be updated.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "customer_shipping": [
        {
          "description": "",
          "properties": {
            "address": {
              "$ref": "#/components/schemas/address"
            },
            "carrier": {
              "description": "The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "name": {
              "description": "Recipient name.",
              "maxLength": 5000,
              "type": "string"
            },
            "phone": {
              "description": "Recipient phone (including extension).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tracking_number": {
              "description": "The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "Shipping",
          "type": "object",
          "x-expandableFields": [
            "address"
          ]
        }
      ],
      "customer_tax_exempt": {
        "description": "The customer's tax exempt status. Until the invoice is finalized, this field will equal `customer.tax_exempt`. Once the invoice is finalized, this field will no longer be updated.",
        "enum": [
          "exempt",
          "none",
          "reverse"
        ],
        "nullable": true,
        "type": "string"
      },
      "customer_tax_ids": {
        "description": "The customer's tax IDs. Until the invoice is finalized, this field will contain the same tax IDs as `customer.tax_ids`. Once the invoice is finalized, this field will no longer be updated.",
        "items": {
          "description": "",
          "properties": {
            "type": {
              "description": "The type of the tax ID, one of `eu_vat`, `br_cnpj`, `br_cpf`, `eu_oss_vat`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `li_uid`, `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, or `unknown`",
              "enum": [
                "ae_trn",
                "au_abn",
                "au_arn",
                "bg_uic",
                "br_cnpj",
                "br_cpf",
                "ca_bn",
                "ca_gst_hst",
                "ca_pst_bc",
                "ca_pst_mb",
                "ca_pst_sk",
                "ca_qst",
                "ch_vat",
                "cl_tin",
                "es_cif",
                "eu_oss_vat",
                "eu_vat",
                "gb_vat",
                "ge_vat",
                "hk_br",
                "hu_tin",
                "id_npwp",
                "il_vat",
                "in_gst",
                "is_vat",
                "jp_cn",
                "jp_rn",
                "kr_brn",
                "li_uid",
                "mx_rfc",
                "my_frp",
                "my_itn",
                "my_sst",
                "no_vat",
                "nz_gst",
                "ru_inn",
                "ru_kpp",
                "sa_vat",
                "sg_gst",
                "sg_uen",
                "si_tin",
                "th_vat",
                "tw_vat",
                "ua_vat",
                "unknown",
                "us_ein",
                "za_vat"
              ],
              "type": "string"
            },
            "value": {
              "description": "The value of the tax ID.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "InvoicesResourceInvoiceTaxID",
          "type": "object",
          "x-expandableFields": []
        },
        "nullable": true,
        "type": "array"
      },
      "default_payment_method": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "PaymentMethod objects represent your customer's payment instruments.\nYou can use them with [PaymentIntents](https://stripe.com/docs/payments/payment-intents) to collect payments or save them to\nCustomer objects to store instrument details for future payments.\n\nRelated guides: [Payment Methods](https://stripe.com/docs/payments/payment-methods) and [More Payment Scenarios](https://stripe.com/docs/payments/more-payment-scenarios).",
          "properties": {
            "acss_debit": {
              "$ref": "#/components/schemas/payment_method_acss_debit"
            },
            "affirm": {
              "$ref": "#/components/schemas/payment_method_affirm"
            },
            "afterpay_clearpay": {
              "$ref": "#/components/schemas/payment_method_afterpay_clearpay"
            },
            "alipay": {
              "$ref": "#/components/schemas/payment_flows_private_payment_methods_alipay"
            },
            "au_becs_debit": {
              "$ref": "#/components/schemas/payment_method_au_becs_debit"
            },
            "bacs_debit": {
              "$ref": "#/components/schemas/payment_method_bacs_debit"
            },
            "bancontact": {
              "$ref": "#/components/schemas/payment_method_bancontact"
            },
            "billing_details": {
              "$ref": "#/components/schemas/billing_details"
            },
            "blik": {
              "$ref": "#/components/schemas/payment_method_blik"
            },
            "boleto": {
              "$ref": "#/components/schemas/payment_method_boleto"
            },
            "card": {
              "$ref": "#/components/schemas/payment_method_card"
            },
            "card_present": {
              "$ref": "#/components/schemas/payment_method_card_present"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                }
              ],
              "description": "The ID of the Customer to which this PaymentMethod is saved. This will not be set when the PaymentMethod has not been saved to a Customer.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  }
                ]
              }
            },
            "customer_balance": {
              "$ref": "#/components/schemas/payment_method_customer_balance"
            },
            "eps": {
              "$ref": "#/components/schemas/payment_method_eps"
            },
            "fpx": {
              "$ref": "#/components/schemas/payment_method_fpx"
            },
            "giropay": {
              "$ref": "#/components/schemas/payment_method_giropay"
            },
            "grabpay": {
              "$ref": "#/components/schemas/payment_method_grabpay"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "ideal": {
              "$ref": "#/components/schemas/payment_method_ideal"
            },
            "interac_present": {
              "$ref": "#/components/schemas/payment_method_interac_present"
            },
            "klarna": {
              "$ref": "#/components/schemas/payment_method_klarna"
            },
            "konbini": {
              "$ref": "#/components/schemas/payment_method_konbini"
            },
            "link": {
              "$ref": "#/components/schemas/payment_method_link"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "payment_method"
              ],
              "type": "string"
            },
            "oxxo": {
              "$ref": "#/components/schemas/payment_method_oxxo"
            },
            "p24": {
              "$ref": "#/components/schemas/payment_method_p24"
            },
            "paynow": {
              "$ref": "#/components/schemas/payment_method_paynow"
            },
            "promptpay": {
              "$ref": "#/components/schemas/payment_method_promptpay"
            },
            "radar_options": {
              "$ref": "#/components/schemas/radar_radar_options"
            },
            "sepa_debit": {
              "$ref": "#/components/schemas/payment_method_sepa_debit"
            },
            "sofort": {
              "$ref": "#/components/schemas/payment_method_sofort"
            },
            "type": {
              "description": "The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.",
              "enum": [
                "acss_debit",
                "affirm",
                "afterpay_clearpay",
                "alipay",
                "au_becs_debit",
                "bacs_debit",
                "bancontact",
                "blik",
                "boleto",
                "card",
                "card_present",
                "customer_balance",
                "eps",
                "fpx",
                "giropay",
                "grabpay",
                "ideal",
                "interac_present",
                "klarna",
                "konbini",
                "link",
                "oxxo",
                "p24",
                "paynow",
                "promptpay",
                "sepa_debit",
                "sofort",
                "us_bank_account",
                "wechat_pay"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "us_bank_account": {
              "$ref": "#/components/schemas/payment_method_us_bank_account"
            },
            "wechat_pay": {
              "$ref": "#/components/schemas/payment_method_wechat_pay"
            }
          },
          "required": [
            "billing_details",
            "created",
            "id",
            "livemode",
            "object",
            "type"
          ],
          "title": "PaymentMethod",
          "type": "object",
          "x-expandableFields": [
            "acss_debit",
            "affirm",
            "afterpay_clearpay",
            "alipay",
            "au_becs_debit",
            "bacs_debit",
            "bancontact",
            "billing_details",
            "blik",
            "boleto",
            "card",
            "card_present",
            "customer",
            "customer_balance",
            "eps",
            "fpx",
            "giropay",
            "grabpay",
            "ideal",
            "interac_present",
            "klarna",
            "konbini",
            "link",
            "oxxo",
            "p24",
            "paynow",
            "promptpay",
            "radar_options",
            "sepa_debit",
            "sofort",
            "us_bank_account",
            "wechat_pay"
          ],
          "x-resourceId": "payment_method"
        }
      ],
      "default_source": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "These bank accounts are payment methods on `Customer` objects.\n\nOn the other hand [External Accounts](https://stripe.com/docs/api#external_accounts) are transfer\ndestinations on `Account` objects for [Custom accounts](https://stripe.com/docs/connect/custom-accounts).\nThey can be bank accounts or debit cards as well, and are documented in the links above.\n\nRelated guide: [Bank Debits and Transfers](https://stripe.com/docs/payments/bank-debits-transfers).",
          "properties": {
            "account": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The ID of the account that the bank account is associated with.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "account_holder_name": {
              "description": "The name of the person or business that owns the bank account.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_holder_type": {
              "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_type": {
              "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "available_payout_methods": {
              "description": "A set of available payout methods for this bank account. Only values from this set should be passed as the `method` when creating a payout.",
              "items": {
                "enum": [
                  "instant",
                  "standard"
                ],
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "bank_name": {
              "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "country": {
              "description": "Two-letter ISO code representing the country the bank account is located in.",
              "maxLength": 5000,
              "type": "string"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The ID of the customer that the bank account is associated with.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "default_for_currency": {
              "description": "Whether this bank account is the default external account for its currency.",
              "nullable": true,
              "type": "boolean"
            },
            "fingerprint": {
              "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "last4": {
              "description": "The last four digits of the bank account number.",
              "maxLength": 5000,
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "bank_account"
              ],
              "type": "string"
            },
            "routing_number": {
              "description": "The routing transit number for the bank account.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Stripe can determine that the bank account exists, its status will be `validated`. Note that there often isnâ€™t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a transfer sent to this bank account fails, we'll set the status to `errored` and will not continue to send transfers until the bank details are updated.\n\nFor external accounts, possible values are `new` and `errored`. Validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "country",
            "currency",
            "id",
            "last4",
            "object",
            "status"
          ],
          "title": "BankAccount",
          "type": "object",
          "x-expandableFields": [
            "account",
            "customer"
          ],
          "x-resourceId": "bank_account"
        },
        {
          "description": "You can store multiple cards on a customer in order to charge the customer\nlater. You can also store multiple debit cards on a recipient in order to\ntransfer to those cards later.\n\nRelated guide: [Card Payments with Sources](https://stripe.com/docs/sources/cards).",
          "properties": {
            "account": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account this card belongs to. This attribute will not be in the card object if the card belongs to a customer or recipient instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "address_city": {
              "description": "City/District/Suburb/Town/Village.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_country": {
              "description": "Billing address country, if provided when creating card.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_line1": {
              "description": "Address line 1 (Street address/PO Box/Company name).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_line1_check": {
              "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_line2": {
              "description": "Address line 2 (Apartment/Suite/Unit/Building).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_state": {
              "description": "State/County/Province/Region.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_zip": {
              "description": "ZIP or postal code.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_zip_check": {
              "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "available_payout_methods": {
              "description": "A set of available payout methods for this card. Only values from this set should be passed as the `method` when creating a payout.",
              "items": {
                "enum": [
                  "instant",
                  "standard"
                ],
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "brand": {
              "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
              "maxLength": 5000,
              "type": "string"
            },
            "country": {
              "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "currency": {
              "description": "Three-letter [ISO code for currency](https://stripe.com/docs/payouts). Only applicable on accounts (not customers or recipients). The card can be used as a transfer destination for funds in this currency.",
              "nullable": true,
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "cvc_check": {
              "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. A result of unchecked indicates that CVC was provided but hasn't been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https://support.stripe.com/questions/check-if-a-card-is-valid-without-a-charge).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_for_currency": {
              "description": "Whether this card is the default external account for its currency.",
              "nullable": true,
              "type": "boolean"
            },
            "dynamic_last4": {
              "description": "(For tokenized numbers only.) The last four digits of the device account number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exp_month": {
              "description": "Two-digit number representing the card's expiration month.",
              "type": "integer"
            },
            "exp_year": {
              "description": "Four-digit number representing the card's expiration year.",
              "type": "integer"
            },
            "fingerprint": {
              "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers whoâ€™ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "funding": {
              "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
              "maxLength": 5000,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "last4": {
              "description": "The last four digits of the card.",
              "maxLength": 5000,
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "name": {
              "description": "Cardholder name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "card"
              ],
              "type": "string"
            },
            "recipient": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/recipient"
                }
              ],
              "description": "The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/recipient"
                  }
                ]
              }
            },
            "status": {
              "description": "For external accounts, possible values are `new` and `errored`. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tokenization_method": {
              "description": "If the card number is tokenized, this is the method that was used. Can be `android_pay` (includes Google Pay), `apple_pay`, `masterpass`, `visa_checkout`, or null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "brand",
            "exp_month",
            "exp_year",
            "funding",
            "id",
            "last4",
            "object"
          ],
          "title": "Card",
          "type": "object",
          "x-expandableFields": [
            "account",
            "customer",
            "recipient"
          ],
          "x-resourceId": "card"
        },
        {
          "description": "`Source` objects allow you to accept a variety of payment methods. They\nrepresent a customer's payment instrument, and can be used with the Stripe API\njust like a `Card` object: once chargeable, they can be charged, or can be\nattached to customers.\n\nRelated guides: [Sources API](https://stripe.com/docs/sources) and [Sources & Customers](https://stripe.com/docs/sources/customers).",
          "properties": {
            "ach_credit_transfer": {
              "$ref": "#/components/schemas/source_type_ach_credit_transfer"
            },
            "ach_debit": {
              "$ref": "#/components/schemas/source_type_ach_debit"
            },
            "acss_debit": {
              "$ref": "#/components/schemas/source_type_acss_debit"
            },
            "alipay": {
              "$ref": "#/components/schemas/source_type_alipay"
            },
            "amount": {
              "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for Â¥1, Japanese Yen being a zero-decimal currency) representing the total amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources.",
              "nullable": true,
              "type": "integer"
            },
            "au_becs_debit": {
              "$ref": "#/components/schemas/source_type_au_becs_debit"
            },
            "bancontact": {
              "$ref": "#/components/schemas/source_type_bancontact"
            },
            "card": {
              "$ref": "#/components/schemas/source_type_card"
            },
            "card_present": {
              "$ref": "#/components/schemas/source_type_card_present"
            },
            "client_secret": {
              "description": "The client secret of the source. Used for client-side retrieval using a publishable key.",
              "maxLength": 5000,
              "type": "string"
            },
            "code_verification": {
              "$ref": "#/components/schemas/source_code_verification_flow"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready. Required for `single_use` sources.",
              "nullable": true,
              "type": "string"
            },
            "customer": {
              "description": "The ID of the customer to which this source is attached. This will not be present when the source has not been attached to a customer.",
              "maxLength": 5000,
              "type": "string"
            },
            "eps": {
              "$ref": "#/components/schemas/source_type_eps"
            },
            "flow": {
              "description": "The authentication `flow` of the source. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`.",
              "maxLength": 5000,
              "type": "string"
            },
            "giropay": {
              "$ref": "#/components/schemas/source_type_giropay"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "ideal": {
              "$ref": "#/components/schemas/source_type_ideal"
            },
            "klarna": {
              "$ref": "#/components/schemas/source_type_klarna"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "multibanco": {
              "$ref": "#/components/schemas/source_type_multibanco"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "source"
              ],
              "type": "string"
            },
            "owner": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/source_owner"
                }
              ],
              "description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
              "nullable": true
            },
            "p24": {
              "$ref": "#/components/schemas/source_type_p24"
            },
            "receiver": {
              "$ref": "#/components/schemas/source_receiver_flow"
            },
            "redirect": {
              "$ref": "#/components/schemas/source_redirect_flow"
            },
            "sepa_debit": {
              "$ref": "#/components/schemas/source_type_sepa_debit"
            },
            "sofort": {
              "$ref": "#/components/schemas/source_type_sofort"
            },
            "source_order": {
              "$ref": "#/components/schemas/source_order"
            },
            "statement_descriptor": {
              "description": "Extra information about a source. This will appear on your customer's statement every time you charge the source.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the source, one of `canceled`, `chargeable`, `consumed`, `failed`, or `pending`. Only `chargeable` sources can be used to create a charge.",
              "maxLength": 5000,
              "type": "string"
            },
            "three_d_secure": {
              "$ref": "#/components/schemas/source_type_three_d_secure"
            },
            "type": {
              "description": "The `type` of the source. The `type` is a payment method, one of `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `klarna`, `p24`, `sepa_debit`, `sofort`, `three_d_secure`, or `wechat`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https://stripe.com/docs/sources) used.",
              "enum": [
                "ach_credit_transfer",
                "ach_debit",
                "acss_debit",
                "alipay",
                "au_becs_debit",
                "bancontact",
                "card",
                "card_present",
                "eps",
                "giropay",
                "ideal",
                "klarna",
                "multibanco",
                "p24",
                "sepa_debit",
                "sofort",
                "three_d_secure",
                "wechat"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "usage": {
              "description": "Either `reusable` or `single_use`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "wechat": {
              "$ref": "#/components/schemas/source_type_wechat"
            }
          },
          "required": [
            "client_secret",
            "created",
            "flow",
            "id",
            "livemode",
            "object",
            "status",
            "type"
          ],
          "title": "Source",
          "type": "object",
          "x-expandableFields": [
            "code_verification",
            "owner",
            "receiver",
            "redirect",
            "source_order"
          ],
          "x-resourceId": "source"
        }
      ],
      "default_tax_rates": {
        "description": "The tax rates applied to this invoice, if any.",
        "items": {
          "description": "Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.\n\nRelated guide: [Tax Rates](https://stripe.com/docs/billing/taxes/tax-rates).",
          "properties": {
            "active": {
              "description": "Defaults to `true`. When set to `false`, this tax rate cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.",
              "type": "boolean"
            },
            "country": {
              "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "description": {
              "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "display_name": {
              "description": "The display name of the tax rates as it will appear to your customer on their receipt email, PDF, and the hosted invoice page.",
              "maxLength": 5000,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "inclusive": {
              "description": "This specifies if the tax rate is inclusive or exclusive.",
              "type": "boolean"
            },
            "jurisdiction": {
              "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customerâ€™s invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "tax_rate"
              ],
              "type": "string"
            },
            "percentage": {
              "description": "This represents the tax rate percent out of 100.",
              "type": "number"
            },
            "state": {
              "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tax_type": {
              "description": "The high-level tax type, such as `vat` or `sales_tax`.",
              "enum": [
                "gst",
                "hst",
                "jct",
                "pst",
                "qst",
                "rst",
                "sales_tax",
                "vat"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "active",
            "created",
            "display_name",
            "id",
            "inclusive",
            "livemode",
            "object",
            "percentage"
          ],
          "title": "TaxRate",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "tax_rate"
        },
        "type": "array"
      },
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "discount": [
        {
          "description": "A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).\nIt contains information about when the discount began, when it will end, and what it is applied to.\n\nRelated guide: [Applying Discounts to Subscriptions](https://stripe.com/docs/billing/subscriptions/discounts).",
          "properties": {
            "checkout_session": {
              "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "coupon": {
              "$ref": "#/components/schemas/coupon"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The ID of the customer associated with this discount.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "end": {
              "description": "If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "id": {
              "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_item": {
              "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "discount"
              ],
              "type": "string"
            },
            "promotion_code": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/promotion_code"
                }
              ],
              "description": "The promotion code applied to create this discount.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/promotion_code"
                  }
                ]
              }
            },
            "start": {
              "description": "Date that the coupon was applied.",
              "format": "unix-time",
              "type": "integer"
            },
            "subscription": {
              "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "coupon",
            "id",
            "object",
            "start"
          ],
          "title": "Discount",
          "type": "object",
          "x-expandableFields": [
            "coupon",
            "customer",
            "promotion_code"
          ],
          "x-resourceId": "discount"
        }
      ],
      "discounts": {
        "description": "The discounts applied to the invoice. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
        "items": [
          {
            "maxLength": 5000,
            "type": "string"
          },
          {
            "description": "A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).\nIt contains information about when the discount began, when it will end, and what it is applied to.\n\nRelated guide: [Applying Discounts to Subscriptions](https://stripe.com/docs/billing/subscriptions/discounts).",
            "properties": {
              "checkout_session": {
                "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "coupon": {
                "$ref": "#/components/schemas/coupon"
              },
              "customer": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ],
                "description": "The ID of the customer associated with this discount.",
                "nullable": true,
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/customer"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_customer"
                    }
                  ]
                }
              },
              "end": {
                "description": "If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.",
                "format": "unix-time",
                "nullable": true,
                "type": "integer"
              },
              "id": {
                "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
                "maxLength": 5000,
                "type": "string"
              },
              "invoice": {
                "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "invoice_item": {
                "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value.",
                "enum": [
                  "discount"
                ],
                "type": "string"
              },
              "promotion_code": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/promotion_code"
                  }
                ],
                "description": "The promotion code applied to create this discount.",
                "nullable": true,
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/promotion_code"
                    }
                  ]
                }
              },
              "start": {
                "description": "Date that the coupon was applied.",
                "format": "unix-time",
                "type": "integer"
              },
              "subscription": {
                "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "coupon",
              "id",
              "object",
              "start"
            ],
            "title": "Discount",
            "type": "object",
            "x-expandableFields": [
              "coupon",
              "customer",
              "promotion_code"
            ],
            "x-resourceId": "discount"
          },
          {
            "description": "",
            "properties": {
              "checkout_session": {
                "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "coupon": {
                "$ref": "#/components/schemas/coupon"
              },
              "customer": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ],
                "description": "The ID of the customer associated with this discount.",
                "nullable": true,
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/customer"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_customer"
                    }
                  ]
                }
              },
              "deleted": {
                "description": "Always true for a deleted object",
                "enum": [
                  true
                ],
                "type": "boolean"
              },
              "id": {
                "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
                "maxLength": 5000,
                "type": "string"
              },
              "invoice": {
                "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "invoice_item": {
                "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value.",
                "enum": [
                  "discount"
                ],
                "type": "string"
              },
              "promotion_code": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/promotion_code"
                  }
                ],
                "description": "The promotion code applied to create this discount.",
                "nullable": true,
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/promotion_code"
                    }
                  ]
                }
              },
              "start": {
                "description": "Date that the coupon was applied.",
                "format": "unix-time",
                "type": "integer"
              },
              "subscription": {
                "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "coupon",
              "deleted",
              "id",
              "object",
              "start"
            ],
            "title": "DeletedDiscount",
            "type": "object",
            "x-expandableFields": [
              "coupon",
              "customer",
              "promotion_code"
            ],
            "x-resourceId": "deleted_discount"
          }
        ],
        "nullable": true,
        "type": "array"
      },
      "due_date": {
        "description": "The date on which payment for this invoice is due. This value will be `null` for invoices where `collection_method=charge_automatically`.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "ending_balance": {
        "description": "Ending customer balance after the invoice is finalized. Invoices are finalized approximately an hour after successful webhook delivery or when payment collection is attempted for the invoice. If the invoice has not been finalized yet, this will be null.",
        "nullable": true,
        "type": "integer"
      },
      "footer": {
        "description": "Footer displayed on the invoice.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "hosted_invoice_url": {
        "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "invoice_pdf": {
        "description": "The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "last_finalization_error": [
        {
          "description": "",
          "properties": {
            "charge": {
              "description": "For card errors, the ID of the failed charge.",
              "maxLength": 5000,
              "type": "string"
            },
            "code": {
              "description": "For some errors that could be handled programmatically, a short string indicating the [error code](https://stripe.com/docs/error-codes) reported.",
              "maxLength": 5000,
              "type": "string"
            },
            "decline_code": {
              "description": "For card errors resulting from a card issuer decline, a short string indicating the [card issuer's reason for the decline](https://stripe.com/docs/declines#issuer-declines) if they provide one.",
              "maxLength": 5000,
              "type": "string"
            },
            "doc_url": {
              "description": "A URL to more information about the [error code](https://stripe.com/docs/error-codes) reported.",
              "maxLength": 5000,
              "type": "string"
            },
            "message": {
              "description": "A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.",
              "maxLength": 40000,
              "type": "string"
            },
            "param": {
              "description": "If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.",
              "maxLength": 5000,
              "type": "string"
            },
            "payment_intent": {
              "$ref": "#/components/schemas/payment_intent"
            },
            "payment_method": {
              "$ref": "#/components/schemas/payment_method"
            },
            "payment_method_type": {
              "description": "If the error is specific to the type of payment method, the payment method type that had a problem. This field is only populated for invoice-related errors.",
              "maxLength": 5000,
              "type": "string"
            },
            "setup_intent": {
              "$ref": "#/components/schemas/setup_intent"
            },
            "source": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "The source object for errors returned on a request involving a source."
            },
            "type": {
              "description": "The type of error returned. One of `api_error`, `card_error`, `idempotency_error`, or `invalid_request_error`",
              "enum": [
                "api_error",
                "card_error",
                "idempotency_error",
                "invalid_request_error"
              ],
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "APIErrors",
          "type": "object",
          "x-expandableFields": [
            "payment_intent",
            "payment_method",
            "setup_intent",
            "source"
          ]
        }
      ],
      "lines": {
        "description": "The individual line items that make up the invoice. `lines` is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.",
        "properties": {
          "data": {
            "description": "Details about each object.",
            "items": {
              "description": "",
              "properties": {
                "amount": {
                  "description": "The amount, in %s.",
                  "type": "integer"
                },
                "amount_excluding_tax": {
                  "description": "The integer amount in %s representing the amount for this line item, excluding all tax and discounts.",
                  "nullable": true,
                  "type": "integer"
                },
                "currency": {
                  "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                  "type": "string"
                },
                "description": {
                  "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "discount_amounts": {
                  "description": "The amount of discount calculated per discount for this line item.",
                  "items": {
                    "$ref": "#/components/schemas/discounts_resource_discount_amount"
                  },
                  "nullable": true,
                  "type": "array"
                },
                "discountable": {
                  "description": "If true, discounts will apply to this line item. Always false for prorations.",
                  "type": "boolean"
                },
                "discounts": {
                  "description": "The discounts applied to the invoice line item. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
                  "items": {
                    "anyOf": [
                      {
                        "maxLength": 5000,
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/discount"
                      }
                    ],
                    "x-expansionResources": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/discount"
                        }
                      ]
                    }
                  },
                  "nullable": true,
                  "type": "array"
                },
                "id": {
                  "description": "Unique identifier for the object.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "invoice_item": {
                  "description": "The ID of the [invoice item](https://stripe.com/docs/api/invoiceitems) associated with this line item if any.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "livemode": {
                  "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                  "type": "boolean"
                },
                "metadata": {
                  "additionalProperties": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Note that for line items with `type=subscription` this will reflect the metadata of the subscription that caused the line item to be created.",
                  "type": "object"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "line_item"
                  ],
                  "type": "string"
                },
                "period": {
                  "$ref": "#/components/schemas/invoice_line_item_period"
                },
                "price": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/price"
                    }
                  ],
                  "description": "The price of the line item.",
                  "nullable": true
                },
                "proration": {
                  "description": "Whether this is a proration.",
                  "type": "boolean"
                },
                "proration_details": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/invoices_line_items_proration_details"
                    }
                  ],
                  "description": "Additional details for proration line items",
                  "nullable": true
                },
                "quantity": {
                  "description": "The quantity of the subscription, if the line item is a subscription or a proration.",
                  "nullable": true,
                  "type": "integer"
                },
                "subscription": {
                  "description": "The subscription that the invoice item pertains to, if any.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "subscription_item": {
                  "description": "The subscription item that generated this invoice item. Left empty if the line item is not an explicit result of a subscription.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "tax_amounts": {
                  "description": "The amount of tax calculated per tax rate for this line item",
                  "items": {
                    "$ref": "#/components/schemas/invoice_tax_amount"
                  },
                  "type": "array"
                },
                "tax_rates": {
                  "description": "The tax rates which apply to the line item.",
                  "items": {
                    "$ref": "#/components/schemas/tax_rate"
                  },
                  "type": "array"
                },
                "type": {
                  "description": "A string identifying the type of the source of this line item, either an `invoiceitem` or a `subscription`.",
                  "enum": [
                    "invoiceitem",
                    "subscription"
                  ],
                  "type": "string"
                },
                "unit_amount_excluding_tax": {
                  "description": "The amount in %s representing the unit amount for this line item, excluding all tax and discounts.",
                  "format": "decimal",
                  "nullable": true,
                  "type": "string"
                }
              },
              "required": [
                "amount",
                "currency",
                "discountable",
                "id",
                "livemode",
                "metadata",
                "object",
                "period",
                "proration",
                "type"
              ],
              "title": "InvoiceLineItem",
              "type": "object",
              "x-expandableFields": [
                "discount_amounts",
                "discounts",
                "period",
                "price",
                "proration_details",
                "tax_amounts",
                "tax_rates"
              ],
              "x-resourceId": "line_item"
            },
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "InvoiceLinesList",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "next_payment_attempt": {
        "description": "The time at which payment will next be attempted. This value will be `null` for invoices where `collection_method=send_invoice`.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "number": {
        "description": "A unique, identifying string that appears on emails sent to the customer for this invoice. This starts with the customer's unique invoice_prefix if it is specified.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "invoice"
        ],
        "type": "string"
      },
      "on_behalf_of": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current e-mail address or if the account is\nenabled yet to make live charges.\n\nSome properties, marked below, are available only to platforms that want to\n[create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts).",
          "properties": {
            "business_profile": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_business_profile"
                }
              ],
              "description": "Business information about the account.",
              "nullable": true
            },
            "business_type": {
              "description": "The business type.",
              "enum": [
                "company",
                "government_entity",
                "individual",
                "non_profit"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "capabilities": {
              "$ref": "#/components/schemas/account_capabilities"
            },
            "charges_enabled": {
              "description": "Whether the account can create live charges.",
              "type": "boolean"
            },
            "company": {
              "$ref": "#/components/schemas/legal_entity_company"
            },
            "controller": {
              "$ref": "#/components/schemas/account_unification_account_controller"
            },
            "country": {
              "description": "The account's country.",
              "maxLength": 5000,
              "type": "string"
            },
            "created": {
              "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "default_currency": {
              "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
              "maxLength": 5000,
              "type": "string"
            },
            "details_submitted": {
              "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
              "type": "boolean"
            },
            "email": {
              "description": "An email address associated with the account. You can treat this as metadata: it is not used for authentication or messaging account holders.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "external_accounts": {
              "description": "External accounts (bank accounts and debit cards) currently attached to this account",
              "properties": {
                "data": {
                  "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ExternalAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "future_requirements": {
              "$ref": "#/components/schemas/account_future_requirements"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "individual": {
              "$ref": "#/components/schemas/person"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "account"
              ],
              "type": "string"
            },
            "payouts_enabled": {
              "description": "Whether Stripe can send payouts to this account.",
              "type": "boolean"
            },
            "requirements": {
              "$ref": "#/components/schemas/account_requirements"
            },
            "settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_settings"
                }
              ],
              "description": "Options for customizing how the account functions within Stripe.",
              "nullable": true
            },
            "tos_acceptance": {
              "$ref": "#/components/schemas/account_tos_acceptance"
            },
            "type": {
              "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
              "enum": [
                "custom",
                "express",
                "standard"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Account",
          "type": "object",
          "x-expandableFields": [
            "business_profile",
            "capabilities",
            "company",
            "controller",
            "external_accounts",
            "future_requirements",
            "individual",
            "requirements",
            "settings",
            "tos_acceptance"
          ],
          "x-resourceId": "account"
        }
      ],
      "paid": {
        "description": "Whether payment was successfully collected for this invoice. An invoice can be paid (most commonly) with a charge or with credit from the customer's account balance.",
        "type": "boolean"
      },
      "paid_out_of_band": {
        "description": "Returns true if the invoice was manually marked paid, returns false if the invoice hasn't been paid yet or was paid on Stripe.",
        "type": "boolean"
      },
      "payment_intent": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A PaymentIntent guides you through the process of collecting a payment from your customer.\nWe recommend that you create exactly one PaymentIntent for each order or\ncustomer session in your system. You can reference the PaymentIntent later to\nsee the history of payment attempts for a particular session.\n\nA PaymentIntent transitions through\n[multiple statuses](https://stripe.com/docs/payments/intents#intent-statuses)\nthroughout its lifetime as it interfaces with Stripe.js to perform\nauthentication flows and ultimately creates at most one successful charge.\n\nRelated guide: [Payment Intents API](https://stripe.com/docs/payments/payment-intents).",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "amount_capturable": {
              "description": "Amount that can be captured from this PaymentIntent.",
              "type": "integer"
            },
            "amount_details": {
              "$ref": "#/components/schemas/payment_flows_amount_details"
            },
            "amount_received": {
              "description": "Amount that was collected by this PaymentIntent.",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
              "nullable": true,
              "type": "integer"
            },
            "automatic_payment_methods": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_flows_automatic_payment_methods_payment_intent"
                }
              ],
              "description": "Settings to configure compatible payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods)",
              "nullable": true
            },
            "canceled_at": {
              "description": "Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "cancellation_reason": {
              "description": "Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`).",
              "enum": [
                "abandoned",
                "automatic",
                "duplicate",
                "failed_invoice",
                "fraudulent",
                "requested_by_customer",
                "void_invoice"
              ],
              "nullable": true,
              "type": "string"
            },
            "capture_method": {
              "description": "Controls when the funds will be captured from the customer's account.",
              "enum": [
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "charges": {
              "description": "Charges that were created by this PaymentIntent, if any.",
              "properties": {
                "data": {
                  "description": "This list only contains the latest charge, even if there were previously multiple unsuccessful charges. To view all previous charges for a PaymentIntent, you can filter the charges list using the `payment_intent` [parameter](https://stripe.com/docs/api/charges/list#list_charges-payment_intent).",
                  "items": {
                    "$ref": "#/components/schemas/charge"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentFlowsPaymentIntentResourceChargeList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "client_secret": {
              "description": "The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. \n\nThe client secret can be used to complete a payment from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.\n\nRefer to our docs to [accept a payment](https://stripe.com/docs/payments/accept-a-payment?ui=elements) and learn about how `client_secret` should be handled.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "confirmation_method": {
              "enum": [
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the Customer this PaymentIntent belongs to, if one exists.\n\nPayment methods attached to other Customers cannot be used with this PaymentIntent.\n\nIf present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "ID of the invoice that created this PaymentIntent, if it exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "last_payment_error": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/api_errors"
                }
              ],
              "description": "The payment error encountered in the previous PaymentIntent confirmation. It will be cleared if the PaymentIntent is later updated for any reason.",
              "nullable": true
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. For more information, see the [documentation](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).",
              "type": "object"
            },
            "next_action": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_next_action"
                }
              ],
              "description": "If present, this property tells you what actions you need to take in order for your customer to fulfill a payment using the provided source.",
              "nullable": true
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "payment_intent"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) for which the funds of the PaymentIntent are intended. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the payment method used in this PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "payment_method_options": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_payment_method_options"
                }
              ],
              "description": "Payment-method-specific configuration for this PaymentIntent.",
              "nullable": true
            },
            "payment_method_types": {
              "description": "The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "processing": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_processing"
                }
              ],
              "description": "If present, this property tells you about the processing state of the payment.",
              "nullable": true
            },
            "receipt_email": {
              "description": "Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "review": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/review"
                }
              ],
              "description": "ID of the review associated with this PaymentIntent, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/review"
                  }
                ]
              }
            },
            "setup_future_usage": {
              "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
              "enum": [
                "off_session",
                "on_session"
              ],
              "nullable": true,
              "type": "string"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Shipping information for this PaymentIntent.",
              "nullable": true
            },
            "statement_descriptor": {
              "description": "For non-card charges, you can use this value as the complete description that appears on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "statement_descriptor_suffix": {
              "description": "Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "Status of this PaymentIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `requires_capture`, `canceled`, or `succeeded`. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses).",
              "enum": [
                "canceled",
                "processing",
                "requires_action",
                "requires_capture",
                "requires_confirmation",
                "requires_payment_method",
                "succeeded"
              ],
              "type": "string"
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/transfer_data"
                }
              ],
              "description": "The data with which to automatically create a Transfer when the payment is finalized. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "nullable": true
            },
            "transfer_group": {
              "description": "A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "capture_method",
            "confirmation_method",
            "created",
            "currency",
            "id",
            "livemode",
            "object",
            "payment_method_types",
            "status"
          ],
          "title": "PaymentIntent",
          "type": "object",
          "x-expandableFields": [
            "amount_details",
            "application",
            "automatic_payment_methods",
            "charges",
            "customer",
            "invoice",
            "last_payment_error",
            "next_action",
            "on_behalf_of",
            "payment_method",
            "payment_method_options",
            "processing",
            "review",
            "shipping",
            "transfer_data"
          ],
          "x-resourceId": "payment_intent"
        }
      ],
      "payment_settings": {
        "description": "",
        "properties": {
          "default_mandate": {
            "description": "ID of the mandate to be used for this invoice. It must correspond to the payment method used to pay the invoice, including the invoice's default_payment_method or default_source, if set.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "payment_method_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoices_payment_method_options"
              }
            ],
            "description": "Payment-method-specific configuration to provide to the invoiceâ€™s PaymentIntent.",
            "nullable": true
          },
          "payment_method_types": {
            "description": "The list of payment method types (e.g. card) to provide to the invoiceâ€™s PaymentIntent. If not set, Stripe attempts to automatically determine the types to use by looking at the invoiceâ€™s default payment method, the subscriptionâ€™s default payment method, the customerâ€™s default payment method, and your [invoice template settings](https://dashboard.stripe.com/settings/billing/invoice).",
            "items": {
              "enum": [
                "ach_credit_transfer",
                "ach_debit",
                "acss_debit",
                "au_becs_debit",
                "bacs_debit",
                "bancontact",
                "boleto",
                "card",
                "customer_balance",
                "fpx",
                "giropay",
                "grabpay",
                "ideal",
                "konbini",
                "link",
                "paynow",
                "promptpay",
                "sepa_debit",
                "sofort",
                "us_bank_account",
                "wechat_pay"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "InvoicesPaymentSettings",
        "type": "object",
        "x-expandableFields": [
          "payment_method_options"
        ]
      },
      "period_end": {
        "description": "End of the usage period during which invoice items were added to this invoice.",
        "format": "unix-time",
        "type": "integer"
      },
      "period_start": {
        "description": "Start of the usage period during which invoice items were added to this invoice.",
        "format": "unix-time",
        "type": "integer"
      },
      "post_payment_credit_notes_amount": {
        "description": "Total amount of all post-payment credit notes issued for this invoice.",
        "type": "integer"
      },
      "pre_payment_credit_notes_amount": {
        "description": "Total amount of all pre-payment credit notes issued for this invoice.",
        "type": "integer"
      },
      "quote": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A Quote is a way to model prices that you'd like to provide to a customer.\nOnce accepted, it will automatically create an invoice, subscription or subscription schedule.",
          "properties": {
            "amount_subtotal": {
              "description": "Total before any discounts or taxes are applied.",
              "type": "integer"
            },
            "amount_total": {
              "description": "Total after discounts and taxes are applied.",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ],
              "description": "ID of the Connect Application that created the quote.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_application"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. Only applicable if there are no line items with recurring prices on the quote.",
              "nullable": true,
              "type": "integer"
            },
            "application_fee_percent": {
              "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. Only applicable if there are line items with recurring prices on the quote.",
              "nullable": true,
              "type": "number"
            },
            "automatic_tax": {
              "$ref": "#/components/schemas/quotes_resource_automatic_tax"
            },
            "collection_method": {
              "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or on finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. Defaults to `charge_automatically`.",
              "enum": [
                "charge_automatically",
                "send_invoice"
              ],
              "type": "string"
            },
            "computed": {
              "$ref": "#/components/schemas/quotes_resource_computed"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The customer which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "default_tax_rates": {
              "description": "The tax rates applied to this quote.",
              "items": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/tax_rate"
                  }
                ],
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/tax_rate"
                    }
                  ]
                }
              },
              "type": "array"
            },
            "description": {
              "description": "A description that will be displayed on the quote PDF.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discounts": {
              "description": "The discounts applied to this quote.",
              "items": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/discount"
                  }
                ],
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/discount"
                    }
                  ]
                }
              },
              "type": "array"
            },
            "expires_at": {
              "description": "The date on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "footer": {
              "description": "A footer that will be displayed on the quote PDF.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "from_quote": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/quotes_resource_from_quote"
                }
              ],
              "description": "Details of the quote that was cloned. See the [cloning documentation](https://stripe.com/docs/quotes/clone) for more details.",
              "nullable": true
            },
            "header": {
              "description": "A header that will be displayed on the quote PDF.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                },
                {
                  "$ref": "#/components/schemas/deleted_invoice"
                }
              ],
              "description": "The invoice that was created from this quote.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_invoice"
                  }
                ]
              }
            },
            "invoice_settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/invoice_setting_quote_setting"
                }
              ],
              "description": "All invoices will be billed using the specified settings.",
              "nullable": true
            },
            "line_items": {
              "description": "A list of items the customer is being quoted for.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "QuotesResourceListLineItems",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "number": {
              "description": "A unique number that identifies this particular quote. This number is assigned once the quote is [finalized](https://stripe.com/docs/quotes/overview#finalize).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "quote"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account on behalf of which to charge. See the [Connect documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "status": {
              "description": "The status of the quote.",
              "enum": [
                "accepted",
                "canceled",
                "draft",
                "open"
              ],
              "type": "string"
            },
            "status_transitions": {
              "$ref": "#/components/schemas/quotes_resource_status_transitions"
            },
            "subscription": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ],
              "description": "The subscription that was created or updated from this quote.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/subscription"
                  }
                ]
              }
            },
            "subscription_data": {
              "$ref": "#/components/schemas/quotes_resource_subscription_data"
            },
            "subscription_schedule": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/subscription_schedule"
                }
              ],
              "description": "The subscription schedule that was created or updated from this quote.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/subscription_schedule"
                  }
                ]
              }
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this quote belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            },
            "total_details": {
              "$ref": "#/components/schemas/quotes_resource_total_details"
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/quotes_resource_transfer_data"
                }
              ],
              "description": "The account (if any) the payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the invoices.",
              "nullable": true
            }
          },
          "required": [
            "amount_subtotal",
            "amount_total",
            "automatic_tax",
            "collection_method",
            "computed",
            "created",
            "discounts",
            "expires_at",
            "id",
            "livemode",
            "metadata",
            "object",
            "status",
            "status_transitions",
            "subscription_data",
            "total_details"
          ],
          "title": "Quote",
          "type": "object",
          "x-expandableFields": [
            "application",
            "automatic_tax",
            "computed",
            "customer",
            "default_tax_rates",
            "discounts",
            "from_quote",
            "invoice",
            "invoice_settings",
            "line_items",
            "on_behalf_of",
            "status_transitions",
            "subscription",
            "subscription_data",
            "subscription_schedule",
            "test_clock",
            "total_details",
            "transfer_data"
          ],
          "x-resourceId": "quote"
        }
      ],
      "receipt_number": {
        "description": "This is the transaction number that appears on email receipts sent for this invoice.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "rendering_options": [
        {
          "description": "",
          "properties": {
            "amount_tax_display": {
              "description": "How line-item prices and amounts will be displayed with respect to tax on invoice PDFs.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "InvoiceSettingRenderingOptions",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "starting_balance": {
        "description": "Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance.",
        "type": "integer"
      },
      "statement_descriptor": {
        "description": "Extra information about an invoice for the customer's credit card statement.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "status": {
        "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)",
        "enum": [
          "deleted",
          "draft",
          "open",
          "paid",
          "uncollectible",
          "void"
        ],
        "nullable": true,
        "type": "string"
      },
      "status_transitions": {
        "description": "",
        "properties": {
          "finalized_at": {
            "description": "The time that the invoice draft was finalized.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "marked_uncollectible_at": {
            "description": "The time that the invoice was marked uncollectible.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "paid_at": {
            "description": "The time that the invoice was paid.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "voided_at": {
            "description": "The time that the invoice was voided.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "InvoicesStatusTransitions",
        "type": "object",
        "x-expandableFields": []
      },
      "subscription": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Subscriptions allow you to charge a customer on a recurring basis.\n\nRelated guide: [Creating Subscriptions](https://stripe.com/docs/billing/subscriptions/creating).",
          "properties": {
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ],
              "description": "ID of the Connect Application that created the subscription.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_application"
                  }
                ]
              }
            },
            "application_fee_percent": {
              "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.",
              "nullable": true,
              "type": "number"
            },
            "automatic_tax": {
              "$ref": "#/components/schemas/subscription_automatic_tax"
            },
            "billing_cycle_anchor": {
              "description": "Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.",
              "format": "unix-time",
              "type": "integer"
            },
            "billing_thresholds": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_billing_thresholds"
                }
              ],
              "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
              "nullable": true
            },
            "cancel_at": {
              "description": "A date in the future at which the subscription will automatically get canceled",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "cancel_at_period_end": {
              "description": "If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.",
              "type": "boolean"
            },
            "canceled_at": {
              "description": "If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will reflect the time of the most recent update request, not the end of the subscription period when the subscription is automatically moved to a canceled state.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "collection_method": {
              "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions.",
              "enum": [
                "charge_automatically",
                "send_invoice"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "current_period_end": {
              "description": "End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.",
              "format": "unix-time",
              "type": "integer"
            },
            "current_period_start": {
              "description": "Start of the current period that the subscription has been invoiced for.",
              "format": "unix-time",
              "type": "integer"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the customer who owns the subscription.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "days_until_due": {
              "description": "Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`.",
              "nullable": true,
              "type": "integer"
            },
            "default_payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "default_tax_rates": {
              "description": "The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.",
              "items": {
                "$ref": "#/components/schemas/tax_rate"
              },
              "nullable": true,
              "type": "array"
            },
            "description": {
              "description": "The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces.",
              "maxLength": 500,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount applied to this subscription, if there is one. When billing, a discount applied to a subscription overrides a discount applied on a customer-wide basis.",
              "nullable": true
            },
            "ended_at": {
              "description": "If the subscription has ended, the date the subscription ended.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "items": {
              "description": "List of subscription items, each with an attached price.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionItemList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "latest_invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "The most recent invoice this subscription has generated.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "next_pending_invoice_item_invoice": {
              "description": "Specifies the approximate timestamp on which any pending invoice items will be billed according to the schedule provided at `pending_invoice_item_interval`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "subscription"
              ],
              "type": "string"
            },
            "pause_collection": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscriptions_resource_pause_collection"
                }
              ],
              "description": "If specified, payment collection for this subscription will be paused.",
              "nullable": true
            },
            "payment_settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscriptions_resource_payment_settings"
                }
              ],
              "description": "Payment settings passed on to invoices created by the subscription.",
              "nullable": true
            },
            "pending_invoice_item_interval": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_pending_invoice_item_interval"
                }
              ],
              "description": "Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.",
              "nullable": true
            },
            "pending_setup_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/setup_intent"
                }
              ],
              "description": "You can use this [SetupIntent](https://stripe.com/docs/api/setup_intents) to collect user authentication when creating a subscription without immediate payment or updating a subscription's payment method, allowing you to optimize for off-session payments. Learn more in the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/setup_intent"
                  }
                ]
              }
            },
            "pending_update": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscriptions_resource_pending_update"
                }
              ],
              "description": "If specified, [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates) that will be applied to the subscription once the `latest_invoice` has been paid.",
              "nullable": true
            },
            "schedule": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/subscription_schedule"
                }
              ],
              "description": "The schedule attached to the subscription",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/subscription_schedule"
                  }
                ]
              }
            },
            "start_date": {
              "description": "Date when the subscription was first created. The date might differ from the `created` date due to backdating.",
              "format": "unix-time",
              "type": "integer"
            },
            "status": {
              "description": "Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`, `past_due`, `canceled`, or `unpaid`. \n\nFor `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this state can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` state. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal state, the open invoice will be voided and no further invoices will be generated. \n\nA subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over. \n\nIf subscription `collection_method=charge_automatically` it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid` (depending on your subscriptions settings) when Stripe has exhausted all payment retry attempts. \n\nIf subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.",
              "enum": [
                "active",
                "canceled",
                "incomplete",
                "incomplete_expired",
                "past_due",
                "trialing",
                "unpaid"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this subscription belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_transfer_data"
                }
              ],
              "description": "The account (if any) the subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.",
              "nullable": true
            },
            "trial_end": {
              "description": "If the subscription has a trial, the end of that trial.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "trial_start": {
              "description": "If the subscription has a trial, the beginning of that trial.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            }
          },
          "required": [
            "automatic_tax",
            "billing_cycle_anchor",
            "cancel_at_period_end",
            "collection_method",
            "created",
            "currency",
            "current_period_end",
            "current_period_start",
            "customer",
            "id",
            "items",
            "livemode",
            "metadata",
            "object",
            "start_date",
            "status"
          ],
          "title": "Subscription",
          "type": "object",
          "x-expandableFields": [
            "application",
            "automatic_tax",
            "billing_thresholds",
            "customer",
            "default_payment_method",
            "default_source",
            "default_tax_rates",
            "discount",
            "items",
            "latest_invoice",
            "pause_collection",
            "payment_settings",
            "pending_invoice_item_interval",
            "pending_setup_intent",
            "pending_update",
            "schedule",
            "test_clock",
            "transfer_data"
          ],
          "x-resourceId": "subscription"
        }
      ],
      "subscription_proration_date": {
        "description": "Only set for upcoming invoices that preview prorations. The time used to calculate prorations.",
        "type": "integer"
      },
      "subtotal": {
        "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or exclusive tax is applied. Item discounts are already incorporated",
        "type": "integer"
      },
      "subtotal_excluding_tax": {
        "description": "The integer amount in %s representing the subtotal of the invoice before any invoice level discount or tax is applied. Item discounts are already incorporated",
        "nullable": true,
        "type": "integer"
      },
      "tax": {
        "description": "The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice.",
        "nullable": true,
        "type": "integer"
      },
      "test_clock": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A test clock enables deterministic control over objects in testmode. With a test clock, you can create\nobjects at a frozen time in the past or future, and advance to a specific future time to observe webhooks and state changes. After the clock advances,\nyou can either validate the current state of your scenario (and test your assumptions), change the current state of your scenario (and test more complex scenarios), or keep advancing forward in time.",
          "properties": {
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "deletes_after": {
              "description": "Time at which this clock is scheduled to auto delete.",
              "format": "unix-time",
              "type": "integer"
            },
            "frozen_time": {
              "description": "Time at which all objects belonging to this clock are frozen.",
              "format": "unix-time",
              "type": "integer"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "name": {
              "description": "The custom name supplied at creation.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "test_helpers.test_clock"
              ],
              "type": "string"
            },
            "status": {
              "description": "The status of the Test Clock.",
              "enum": [
                "advancing",
                "internal_failure",
                "ready"
              ],
              "type": "string"
            }
          },
          "required": [
            "created",
            "deletes_after",
            "frozen_time",
            "id",
            "livemode",
            "object",
            "status"
          ],
          "title": "TestClock",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "test_helpers.test_clock"
        }
      ],
      "threshold_reason": {
        "description": "",
        "properties": {
          "amount_gte": {
            "description": "The total invoice amount threshold boundary if it triggered the threshold invoice.",
            "nullable": true,
            "type": "integer"
          },
          "item_reasons": {
            "description": "Indicates which line items triggered a threshold invoice.",
            "items": {
              "$ref": "#/components/schemas/invoice_item_threshold_reason"
            },
            "type": "array"
          }
        },
        "required": [
          "item_reasons"
        ],
        "title": "InvoiceThresholdReason",
        "type": "object",
        "x-expandableFields": [
          "item_reasons"
        ]
      },
      "total": {
        "description": "Total after discounts and taxes.",
        "type": "integer"
      },
      "total_discount_amounts": {
        "description": "The aggregate amounts calculated per discount across all line items.",
        "items": {
          "description": "",
          "properties": {
            "amount": {
              "description": "The amount, in %s, of the discount.",
              "type": "integer"
            },
            "discount": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/discount"
                },
                {
                  "$ref": "#/components/schemas/deleted_discount"
                }
              ],
              "description": "The discount that was applied to get this discount amount.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/discount"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_discount"
                  }
                ]
              }
            }
          },
          "required": [
            "amount",
            "discount"
          ],
          "title": "DiscountsResourceDiscountAmount",
          "type": "object",
          "x-expandableFields": [
            "discount"
          ]
        },
        "nullable": true,
        "type": "array"
      },
      "total_excluding_tax": {
        "description": "The integer amount in %s representing the total amount of the invoice including all discounts but excluding all tax.",
        "nullable": true,
        "type": "integer"
      },
      "total_tax_amounts": {
        "description": "The aggregate amounts calculated per tax rate for all line items.",
        "items": {
          "description": "",
          "properties": {
            "amount": {
              "description": "The amount, in %s, of the tax.",
              "type": "integer"
            },
            "inclusive": {
              "description": "Whether this tax amount is inclusive or exclusive.",
              "type": "boolean"
            },
            "tax_rate": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/tax_rate"
                }
              ],
              "description": "The tax rate that was applied to get this tax amount.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/tax_rate"
                  }
                ]
              }
            }
          },
          "required": [
            "amount",
            "inclusive",
            "tax_rate"
          ],
          "title": "InvoiceTaxAmount",
          "type": "object",
          "x-expandableFields": [
            "tax_rate"
          ]
        },
        "type": "array"
      },
      "transfer_data": [
        {
          "description": "",
          "properties": {
            "amount": {
              "description": "The amount in %s that will be transferred to the destination account when the invoice is paid. By default, the entire amount is transferred to the destination.",
              "nullable": true,
              "type": "integer"
            },
            "destination": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account where funds from the payment will be transferred to upon payment success.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            }
          },
          "required": [
            "destination"
          ],
          "title": "InvoiceTransferData",
          "type": "object",
          "x-expandableFields": [
            "destination"
          ]
        }
      ],
      "webhooks_delivered_at": {
        "description": "Invoices are automatically paid or sent 1 hour after webhooks are delivered, or until all webhook delivery attempts have [been exhausted](https://stripe.com/docs/billing/webhooks#understand). This field tracks the time when webhooks for this invoice were successfully delivered. If the invoice had no webhooks to deliver, this will be set while the invoice is being created.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      }
    },
    "required": [
      "amount_due",
      "amount_paid",
      "amount_remaining",
      "attempt_count",
      "attempted",
      "automatic_tax",
      "collection_method",
      "created",
      "currency",
      "default_tax_rates",
      "lines",
      "livemode",
      "object",
      "paid",
      "paid_out_of_band",
      "payment_settings",
      "period_end",
      "period_start",
      "post_payment_credit_notes_amount",
      "pre_payment_credit_notes_amount",
      "starting_balance",
      "status_transitions",
      "subtotal",
      "total",
      "total_tax_amounts"
    ],
    "title": "Invoice",
    "type": "object",
    "x-expandableFields": [
      "account_tax_ids",
      "application",
      "automatic_tax",
      "charge",
      "custom_fields",
      "customer",
      "customer_address",
      "customer_shipping",
      "customer_tax_ids",
      "default_payment_method",
      "default_source",
      "default_tax_rates",
      "discount",
      "discounts",
      "last_finalization_error",
      "lines",
      "on_behalf_of",
      "payment_intent",
      "payment_settings",
      "quote",
      "rendering_options",
      "status_transitions",
      "subscription",
      "test_clock",
      "threshold_reason",
      "total_discount_amounts",
      "total_tax_amounts",
      "transfer_data"
    ],
    "x-resourceId": "invoice"
  },
  "invoiceitem": {
    "description": "Sometimes you want to add a charge or credit to a customer, but actually\ncharge or credit the customer's card only at the end of a regular billing\ncycle. This is useful for combining several charges (to minimize\nper-transaction fees), or for having Stripe tabulate your usage-based billing\ntotals.\n\nRelated guide: [Subscription Invoices](https://stripe.com/docs/billing/invoices/subscription#adding-upcoming-invoice-items).",
    "properties": {
      "amount": {
        "description": "Amount (in the `currency` specified) of the invoice item. This should always be equal to `unit_amount * quantity`.",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "customer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address.",
              "nullable": true
            },
            "balance": {
              "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
              "type": "integer"
            },
            "cash_balance": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cash_balance"
                }
              ],
              "description": "The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the customer.\n\nIf you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "delinquent": {
              "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
              "nullable": true,
              "type": "boolean"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount active on the customer, if there is one.",
              "nullable": true
            },
            "email": {
              "description": "The customer's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_credit_balance": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "The current multi-currency balances, if any, being stored on the customer.If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency.If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices.They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
              "type": "object"
            },
            "invoice_prefix": {
              "description": "The prefix for the customer used to generate unique invoice numbers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_settings": {
              "$ref": "#/components/schemas/invoice_setting_customer_setting"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The customer's full name or business name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "next_invoice_sequence": {
              "description": "The suffix of the customer's next invoice number, e.g., 0001.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            },
            "phone": {
              "description": "The customer's phone number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "preferred_locales": {
              "description": "The customer's preferred locales (languages), ordered by preference.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
              "nullable": true
            },
            "sources": {
              "description": "The customer's payment sources, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      },
                      {
                        "$ref": "#/components/schemas/source"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "subscriptions": {
              "description": "The customer's current subscriptions, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "tax": {
              "$ref": "#/components/schemas/customer_tax"
            },
            "tax_exempt": {
              "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "tax_ids": {
              "description": "The customer's tax IDs.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this customer belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object"
          ],
          "title": "Customer",
          "type": "object",
          "x-expandableFields": [
            "address",
            "cash_balance",
            "default_source",
            "discount",
            "invoice_settings",
            "shipping",
            "sources",
            "subscriptions",
            "tax",
            "tax_ids",
            "test_clock"
          ],
          "x-resourceId": "customer"
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedCustomer",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "deleted_customer"
        }
      ],
      "date": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "discountable": {
        "description": "If true, discounts will apply to this invoice item. Always false for prorations.",
        "type": "boolean"
      },
      "discounts": {
        "description": "The discounts which apply to the invoice item. Item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
        "items": [
          {
            "maxLength": 5000,
            "type": "string"
          },
          {
            "description": "A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).\nIt contains information about when the discount began, when it will end, and what it is applied to.\n\nRelated guide: [Applying Discounts to Subscriptions](https://stripe.com/docs/billing/subscriptions/discounts).",
            "properties": {
              "checkout_session": {
                "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "coupon": {
                "$ref": "#/components/schemas/coupon"
              },
              "customer": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ],
                "description": "The ID of the customer associated with this discount.",
                "nullable": true,
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/customer"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_customer"
                    }
                  ]
                }
              },
              "end": {
                "description": "If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.",
                "format": "unix-time",
                "nullable": true,
                "type": "integer"
              },
              "id": {
                "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
                "maxLength": 5000,
                "type": "string"
              },
              "invoice": {
                "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "invoice_item": {
                "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value.",
                "enum": [
                  "discount"
                ],
                "type": "string"
              },
              "promotion_code": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/promotion_code"
                  }
                ],
                "description": "The promotion code applied to create this discount.",
                "nullable": true,
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/promotion_code"
                    }
                  ]
                }
              },
              "start": {
                "description": "Date that the coupon was applied.",
                "format": "unix-time",
                "type": "integer"
              },
              "subscription": {
                "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "coupon",
              "id",
              "object",
              "start"
            ],
            "title": "Discount",
            "type": "object",
            "x-expandableFields": [
              "coupon",
              "customer",
              "promotion_code"
            ],
            "x-resourceId": "discount"
          }
        ],
        "nullable": true,
        "type": "array"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "invoice": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Invoices are statements of amounts owed by a customer, and are either\ngenerated one-off, or generated periodically from a subscription.\n\nThey contain [invoice items](https://stripe.com/docs/api#invoiceitems), and proration adjustments\nthat may be caused by subscription upgrades/downgrades (if necessary).\n\nIf your invoice is configured to be billed through automatic charges,\nStripe automatically finalizes your invoice and attempts payment. Note\nthat finalizing the invoice,\n[when automatic](https://stripe.com/docs/billing/invoices/workflow/#auto_advance), does\nnot happen immediately as the invoice is created. Stripe waits\nuntil one hour after the last webhook was successfully sent (or the last\nwebhook timed out after failing). If you (and the platforms you may have\nconnected to) have no webhooks configured, Stripe waits one hour after\ncreation to finalize the invoice.\n\nIf your invoice is configured to be billed by sending an email, then based on your\n[email settings](https://dashboard.stripe.com/account/billing/automatic),\nStripe will email the invoice to your customer and await payment. These\nemails can contain a link to a hosted page to pay the invoice.\n\nStripe applies any customer credit on the account before determining the\namount due for the invoice (i.e., the amount that will be actually\ncharged). If the amount due for the invoice is less than Stripe's [minimum allowed charge\nper currency](/docs/currencies#minimum-and-maximum-charge-amounts), the\ninvoice is automatically marked paid, and we add the amount due to the\ncustomer's credit balance which is applied to the next invoice.\n\nMore details on the customer's credit balance are\n[here](https://stripe.com/docs/billing/customer/balance).\n\nRelated guide: [Send Invoices to Customers](https://stripe.com/docs/billing/invoices/sending).",
          "properties": {
            "account_country": {
              "description": "The country of the business associated with this invoice, most often the business creating the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_name": {
              "description": "The public name of the business associated with this invoice, most often the business creating the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_tax_ids": {
              "description": "The account tax IDs associated with the invoice. Only editable when the invoice is a draft.",
              "items": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_tax_id"
                  }
                ],
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/tax_id"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_tax_id"
                    }
                  ]
                }
              },
              "nullable": true,
              "type": "array"
            },
            "amount_due": {
              "description": "Final amount due at this time for this invoice. If the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.",
              "type": "integer"
            },
            "amount_paid": {
              "description": "The amount, in %s, that was paid.",
              "type": "integer"
            },
            "amount_remaining": {
              "description": "The difference between amount_due and amount_paid, in %s.",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ],
              "description": "ID of the Connect Application that created the invoice.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_application"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The fee in %s that will be applied to the invoice and transferred to the application owner's Stripe account when the invoice is paid.",
              "nullable": true,
              "type": "integer"
            },
            "attempt_count": {
              "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule.",
              "type": "integer"
            },
            "attempted": {
              "description": "Whether an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.",
              "type": "boolean"
            },
            "auto_advance": {
              "description": "Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance) of the invoice. When `false`, the invoice's state will not automatically advance without an explicit action.",
              "type": "boolean"
            },
            "automatic_tax": {
              "$ref": "#/components/schemas/automatic_tax"
            },
            "billing_reason": {
              "description": "Indicates the reason why the invoice was created. `subscription_cycle` indicates an invoice created by a subscription advancing into a new period. `subscription_create` indicates an invoice created due to creating a subscription. `subscription_update` indicates an invoice created due to updating a subscription. `subscription` is set for all old invoices to indicate either a change to a subscription or a period advancement. `manual` is set for all invoices unrelated to a subscription (for example: created via the invoice editor). The `upcoming` value is reserved for simulated invoices per the upcoming invoice endpoint. `subscription_threshold` indicates an invoice created due to a billing threshold being reached.",
              "enum": [
                "automatic_pending_invoice_item_invoice",
                "manual",
                "quote_accept",
                "subscription",
                "subscription_create",
                "subscription_cycle",
                "subscription_threshold",
                "subscription_update",
                "upcoming"
              ],
              "nullable": true,
              "type": "string"
            },
            "charge": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/charge"
                }
              ],
              "description": "ID of the latest charge generated for this invoice, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/charge"
                  }
                ]
              }
            },
            "collection_method": {
              "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.",
              "enum": [
                "charge_automatically",
                "send_invoice"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "custom_fields": {
              "description": "Custom fields displayed on the invoice.",
              "items": {
                "$ref": "#/components/schemas/invoice_setting_custom_field"
              },
              "nullable": true,
              "type": "array"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The ID of the customer who will be billed.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "customer_address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address. Until the invoice is finalized, this field will equal `customer.address`. Once the invoice is finalized, this field will no longer be updated.",
              "nullable": true
            },
            "customer_email": {
              "description": "The customer's email. Until the invoice is finalized, this field will equal `customer.email`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_name": {
              "description": "The customer's name. Until the invoice is finalized, this field will equal `customer.name`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_phone": {
              "description": "The customer's phone number. Until the invoice is finalized, this field will equal `customer.phone`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "The customer's shipping information. Until the invoice is finalized, this field will equal `customer.shipping`. Once the invoice is finalized, this field will no longer be updated.",
              "nullable": true
            },
            "customer_tax_exempt": {
              "description": "The customer's tax exempt status. Until the invoice is finalized, this field will equal `customer.tax_exempt`. Once the invoice is finalized, this field will no longer be updated.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "customer_tax_ids": {
              "description": "The customer's tax IDs. Until the invoice is finalized, this field will contain the same tax IDs as `customer.tax_ids`. Once the invoice is finalized, this field will no longer be updated.",
              "items": {
                "$ref": "#/components/schemas/invoices_resource_invoice_tax_id"
              },
              "nullable": true,
              "type": "array"
            },
            "default_payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "default_tax_rates": {
              "description": "The tax rates applied to this invoice, if any.",
              "items": {
                "$ref": "#/components/schemas/tax_rate"
              },
              "type": "array"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount applied to this invoice, if there is one. Not populated if there are multiple discounts.",
              "nullable": true
            },
            "discounts": {
              "description": "The discounts applied to the invoice. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
              "items": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/discount"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_discount"
                  }
                ],
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/discount"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_discount"
                    }
                  ]
                }
              },
              "nullable": true,
              "type": "array"
            },
            "due_date": {
              "description": "The date on which payment for this invoice is due. This value will be `null` for invoices where `collection_method=charge_automatically`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "ending_balance": {
              "description": "Ending customer balance after the invoice is finalized. Invoices are finalized approximately an hour after successful webhook delivery or when payment collection is attempted for the invoice. If the invoice has not been finalized yet, this will be null.",
              "nullable": true,
              "type": "integer"
            },
            "footer": {
              "description": "Footer displayed on the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "hosted_invoice_url": {
              "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_pdf": {
              "description": "The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "last_finalization_error": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/api_errors"
                }
              ],
              "description": "The error encountered during the previous attempt to finalize the invoice. This field is cleared when the invoice is successfully finalized.",
              "nullable": true
            },
            "lines": {
              "description": "The individual line items that make up the invoice. `lines` is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/line_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "InvoiceLinesList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "next_payment_attempt": {
              "description": "The time at which payment will next be attempted. This value will be `null` for invoices where `collection_method=send_invoice`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "number": {
              "description": "A unique, identifying string that appears on emails sent to the customer for this invoice. This starts with the customer's unique invoice_prefix if it is specified.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "invoice"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "paid": {
              "description": "Whether payment was successfully collected for this invoice. An invoice can be paid (most commonly) with a charge or with credit from the customer's account balance.",
              "type": "boolean"
            },
            "paid_out_of_band": {
              "description": "Returns true if the invoice was manually marked paid, returns false if the invoice hasn't been paid yet or was paid on Stripe.",
              "type": "boolean"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "The PaymentIntent associated with this invoice. The PaymentIntent is generated when the invoice is finalized, and can then be used to pay the invoice. Note that voiding an invoice will cancel the PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "payment_settings": {
              "$ref": "#/components/schemas/invoices_payment_settings"
            },
            "period_end": {
              "description": "End of the usage period during which invoice items were added to this invoice.",
              "format": "unix-time",
              "type": "integer"
            },
            "period_start": {
              "description": "Start of the usage period during which invoice items were added to this invoice.",
              "format": "unix-time",
              "type": "integer"
            },
            "post_payment_credit_notes_amount": {
              "description": "Total amount of all post-payment credit notes issued for this invoice.",
              "type": "integer"
            },
            "pre_payment_credit_notes_amount": {
              "description": "Total amount of all pre-payment credit notes issued for this invoice.",
              "type": "integer"
            },
            "quote": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/quote"
                }
              ],
              "description": "The quote this invoice was generated from.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/quote"
                  }
                ]
              }
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "rendering_options": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/invoice_setting_rendering_options"
                }
              ],
              "description": "Options for invoice PDF rendering.",
              "nullable": true
            },
            "starting_balance": {
              "description": "Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance.",
              "type": "integer"
            },
            "statement_descriptor": {
              "description": "Extra information about an invoice for the customer's credit card statement.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)",
              "enum": [
                "deleted",
                "draft",
                "open",
                "paid",
                "uncollectible",
                "void"
              ],
              "nullable": true,
              "type": "string"
            },
            "status_transitions": {
              "$ref": "#/components/schemas/invoices_status_transitions"
            },
            "subscription": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ],
              "description": "The subscription that this invoice was prepared for, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/subscription"
                  }
                ]
              }
            },
            "subscription_proration_date": {
              "description": "Only set for upcoming invoices that preview prorations. The time used to calculate prorations.",
              "type": "integer"
            },
            "subtotal": {
              "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or exclusive tax is applied. Item discounts are already incorporated",
              "type": "integer"
            },
            "subtotal_excluding_tax": {
              "description": "The integer amount in %s representing the subtotal of the invoice before any invoice level discount or tax is applied. Item discounts are already incorporated",
              "nullable": true,
              "type": "integer"
            },
            "tax": {
              "description": "The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice.",
              "nullable": true,
              "type": "integer"
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this invoice belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            },
            "threshold_reason": {
              "$ref": "#/components/schemas/invoice_threshold_reason"
            },
            "total": {
              "description": "Total after discounts and taxes.",
              "type": "integer"
            },
            "total_discount_amounts": {
              "description": "The aggregate amounts calculated per discount across all line items.",
              "items": {
                "$ref": "#/components/schemas/discounts_resource_discount_amount"
              },
              "nullable": true,
              "type": "array"
            },
            "total_excluding_tax": {
              "description": "The integer amount in %s representing the total amount of the invoice including all discounts but excluding all tax.",
              "nullable": true,
              "type": "integer"
            },
            "total_tax_amounts": {
              "description": "The aggregate amounts calculated per tax rate for all line items.",
              "items": {
                "$ref": "#/components/schemas/invoice_tax_amount"
              },
              "type": "array"
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/invoice_transfer_data"
                }
              ],
              "description": "The account (if any) the payment will be attributed to for tax reporting, and where funds from the payment will be transferred to for the invoice.",
              "nullable": true
            },
            "webhooks_delivered_at": {
              "description": "Invoices are automatically paid or sent 1 hour after webhooks are delivered, or until all webhook delivery attempts have [been exhausted](https://stripe.com/docs/billing/webhooks#understand). This field tracks the time when webhooks for this invoice were successfully delivered. If the invoice had no webhooks to deliver, this will be set while the invoice is being created.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            }
          },
          "required": [
            "amount_due",
            "amount_paid",
            "amount_remaining",
            "attempt_count",
            "attempted",
            "automatic_tax",
            "collection_method",
            "created",
            "currency",
            "default_tax_rates",
            "lines",
            "livemode",
            "object",
            "paid",
            "paid_out_of_band",
            "payment_settings",
            "period_end",
            "period_start",
            "post_payment_credit_notes_amount",
            "pre_payment_credit_notes_amount",
            "starting_balance",
            "status_transitions",
            "subtotal",
            "total",
            "total_tax_amounts"
          ],
          "title": "Invoice",
          "type": "object",
          "x-expandableFields": [
            "account_tax_ids",
            "application",
            "automatic_tax",
            "charge",
            "custom_fields",
            "customer",
            "customer_address",
            "customer_shipping",
            "customer_tax_ids",
            "default_payment_method",
            "default_source",
            "default_tax_rates",
            "discount",
            "discounts",
            "last_finalization_error",
            "lines",
            "on_behalf_of",
            "payment_intent",
            "payment_settings",
            "quote",
            "rendering_options",
            "status_transitions",
            "subscription",
            "test_clock",
            "threshold_reason",
            "total_discount_amounts",
            "total_tax_amounts",
            "transfer_data"
          ],
          "x-resourceId": "invoice"
        }
      ],
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "invoiceitem"
        ],
        "type": "string"
      },
      "period": {
        "description": "",
        "properties": {
          "end": {
            "description": "The end of the period, which must be greater than or equal to the start.",
            "format": "unix-time",
            "type": "integer"
          },
          "start": {
            "description": "The start of the period.",
            "format": "unix-time",
            "type": "integer"
          }
        },
        "required": [
          "end",
          "start"
        ],
        "title": "InvoiceLineItemPeriod",
        "type": "object",
        "x-expandableFields": []
      },
      "price": [
        {
          "description": "Prices define the unit cost, currency, and (optional) billing cycle for both recurring and one-time purchases of products.\n[Products](https://stripe.com/docs/api#products) help you track inventory or provisioning, and prices help you track payment terms. Different physical goods or levels of service should be represented by products, and pricing options should be represented by prices. This approach lets you change prices without having to change your provisioning scheme.\n\nFor example, you might have a single \"gold\" product that has prices for $10/month, $100/year, and â‚¬9 once.\n\nRelated guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription), [create an invoice](https://stripe.com/docs/billing/invoices/create), and more about [products and prices](https://stripe.com/docs/products-prices/overview).",
          "properties": {
            "active": {
              "description": "Whether the price can be used for new purchases.",
              "type": "boolean"
            },
            "billing_scheme": {
              "description": "Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `unit_amount` or `unit_amount_decimal`) will be charged per unit in `quantity` (for prices with `usage_type=licensed`), or per unit of total usage (for prices with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.",
              "enum": [
                "per_unit",
                "tiered"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "currency_options": {
              "additionalProperties": {
                "$ref": "#/components/schemas/currency_option"
              },
              "description": "Prices defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
              "type": "object"
            },
            "custom_unit_amount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/custom_unit_amount"
                }
              ],
              "description": "When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.",
              "nullable": true
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "lookup_key": {
              "description": "A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "nickname": {
              "description": "A brief description of the price, hidden from customers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "price"
              ],
              "type": "string"
            },
            "product": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/product"
                },
                {
                  "$ref": "#/components/schemas/deleted_product"
                }
              ],
              "description": "The ID of the product this price is associated with.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/product"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_product"
                  }
                ]
              }
            },
            "recurring": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/recurring"
                }
              ],
              "description": "The recurring components of a price such as `interval` and `usage_type`.",
              "nullable": true
            },
            "tax_behavior": {
              "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
              "enum": [
                "exclusive",
                "inclusive",
                "unspecified"
              ],
              "nullable": true,
              "type": "string"
            },
            "tiers": {
              "description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.",
              "items": {
                "$ref": "#/components/schemas/price_tier"
              },
              "type": "array"
            },
            "tiers_mode": {
              "description": "Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price. In `graduated` tiering, pricing can change as the quantity grows.",
              "enum": [
                "graduated",
                "volume"
              ],
              "nullable": true,
              "type": "string"
            },
            "transform_quantity": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/transform_quantity"
                }
              ],
              "description": "Apply a transformation to the reported usage or set quantity before computing the amount billed. Cannot be combined with `tiers`.",
              "nullable": true
            },
            "type": {
              "description": "One of `one_time` or `recurring` depending on whether the price is for a one-time purchase or a recurring (subscription) purchase.",
              "enum": [
                "one_time",
                "recurring"
              ],
              "type": "string"
            },
            "unit_amount": {
              "description": "The unit amount in %s to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.",
              "nullable": true,
              "type": "integer"
            },
            "unit_amount_decimal": {
              "description": "The unit amount in %s to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.",
              "format": "decimal",
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "active",
            "billing_scheme",
            "created",
            "currency",
            "id",
            "livemode",
            "metadata",
            "object",
            "product",
            "type"
          ],
          "title": "Price",
          "type": "object",
          "x-expandableFields": [
            "currency_options",
            "custom_unit_amount",
            "product",
            "recurring",
            "tiers",
            "transform_quantity"
          ],
          "x-resourceId": "price"
        }
      ],
      "proration": {
        "description": "Whether the invoice item was created automatically as a proration adjustment when the customer switched plans.",
        "type": "boolean"
      },
      "quantity": {
        "description": "Quantity of units for the invoice item. If the invoice item is a proration, the quantity of the subscription that the proration was computed for.",
        "type": "integer"
      },
      "subscription": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Subscriptions allow you to charge a customer on a recurring basis.\n\nRelated guide: [Creating Subscriptions](https://stripe.com/docs/billing/subscriptions/creating).",
          "properties": {
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ],
              "description": "ID of the Connect Application that created the subscription.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_application"
                  }
                ]
              }
            },
            "application_fee_percent": {
              "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.",
              "nullable": true,
              "type": "number"
            },
            "automatic_tax": {
              "$ref": "#/components/schemas/subscription_automatic_tax"
            },
            "billing_cycle_anchor": {
              "description": "Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.",
              "format": "unix-time",
              "type": "integer"
            },
            "billing_thresholds": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_billing_thresholds"
                }
              ],
              "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
              "nullable": true
            },
            "cancel_at": {
              "description": "A date in the future at which the subscription will automatically get canceled",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "cancel_at_period_end": {
              "description": "If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.",
              "type": "boolean"
            },
            "canceled_at": {
              "description": "If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will reflect the time of the most recent update request, not the end of the subscription period when the subscription is automatically moved to a canceled state.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "collection_method": {
              "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions.",
              "enum": [
                "charge_automatically",
                "send_invoice"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "current_period_end": {
              "description": "End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.",
              "format": "unix-time",
              "type": "integer"
            },
            "current_period_start": {
              "description": "Start of the current period that the subscription has been invoiced for.",
              "format": "unix-time",
              "type": "integer"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the customer who owns the subscription.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "days_until_due": {
              "description": "Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`.",
              "nullable": true,
              "type": "integer"
            },
            "default_payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "default_tax_rates": {
              "description": "The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.",
              "items": {
                "$ref": "#/components/schemas/tax_rate"
              },
              "nullable": true,
              "type": "array"
            },
            "description": {
              "description": "The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces.",
              "maxLength": 500,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount applied to this subscription, if there is one. When billing, a discount applied to a subscription overrides a discount applied on a customer-wide basis.",
              "nullable": true
            },
            "ended_at": {
              "description": "If the subscription has ended, the date the subscription ended.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "items": {
              "description": "List of subscription items, each with an attached price.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionItemList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "latest_invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "The most recent invoice this subscription has generated.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "next_pending_invoice_item_invoice": {
              "description": "Specifies the approximate timestamp on which any pending invoice items will be billed according to the schedule provided at `pending_invoice_item_interval`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "subscription"
              ],
              "type": "string"
            },
            "pause_collection": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscriptions_resource_pause_collection"
                }
              ],
              "description": "If specified, payment collection for this subscription will be paused.",
              "nullable": true
            },
            "payment_settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscriptions_resource_payment_settings"
                }
              ],
              "description": "Payment settings passed on to invoices created by the subscription.",
              "nullable": true
            },
            "pending_invoice_item_interval": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_pending_invoice_item_interval"
                }
              ],
              "description": "Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.",
              "nullable": true
            },
            "pending_setup_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/setup_intent"
                }
              ],
              "description": "You can use this [SetupIntent](https://stripe.com/docs/api/setup_intents) to collect user authentication when creating a subscription without immediate payment or updating a subscription's payment method, allowing you to optimize for off-session payments. Learn more in the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/setup_intent"
                  }
                ]
              }
            },
            "pending_update": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscriptions_resource_pending_update"
                }
              ],
              "description": "If specified, [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates) that will be applied to the subscription once the `latest_invoice` has been paid.",
              "nullable": true
            },
            "schedule": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/subscription_schedule"
                }
              ],
              "description": "The schedule attached to the subscription",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/subscription_schedule"
                  }
                ]
              }
            },
            "start_date": {
              "description": "Date when the subscription was first created. The date might differ from the `created` date due to backdating.",
              "format": "unix-time",
              "type": "integer"
            },
            "status": {
              "description": "Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`, `past_due`, `canceled`, or `unpaid`. \n\nFor `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this state can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` state. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal state, the open invoice will be voided and no further invoices will be generated. \n\nA subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over. \n\nIf subscription `collection_method=charge_automatically` it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid` (depending on your subscriptions settings) when Stripe has exhausted all payment retry attempts. \n\nIf subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.",
              "enum": [
                "active",
                "canceled",
                "incomplete",
                "incomplete_expired",
                "past_due",
                "trialing",
                "unpaid"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this subscription belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_transfer_data"
                }
              ],
              "description": "The account (if any) the subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.",
              "nullable": true
            },
            "trial_end": {
              "description": "If the subscription has a trial, the end of that trial.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "trial_start": {
              "description": "If the subscription has a trial, the beginning of that trial.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            }
          },
          "required": [
            "automatic_tax",
            "billing_cycle_anchor",
            "cancel_at_period_end",
            "collection_method",
            "created",
            "currency",
            "current_period_end",
            "current_period_start",
            "customer",
            "id",
            "items",
            "livemode",
            "metadata",
            "object",
            "start_date",
            "status"
          ],
          "title": "Subscription",
          "type": "object",
          "x-expandableFields": [
            "application",
            "automatic_tax",
            "billing_thresholds",
            "customer",
            "default_payment_method",
            "default_source",
            "default_tax_rates",
            "discount",
            "items",
            "latest_invoice",
            "pause_collection",
            "payment_settings",
            "pending_invoice_item_interval",
            "pending_setup_intent",
            "pending_update",
            "schedule",
            "test_clock",
            "transfer_data"
          ],
          "x-resourceId": "subscription"
        }
      ],
      "subscription_item": {
        "description": "The subscription item that this invoice item has been created for, if any.",
        "maxLength": 5000,
        "type": "string"
      },
      "tax_rates": {
        "description": "The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item.",
        "items": {
          "description": "Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.\n\nRelated guide: [Tax Rates](https://stripe.com/docs/billing/taxes/tax-rates).",
          "properties": {
            "active": {
              "description": "Defaults to `true`. When set to `false`, this tax rate cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.",
              "type": "boolean"
            },
            "country": {
              "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "description": {
              "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "display_name": {
              "description": "The display name of the tax rates as it will appear to your customer on their receipt email, PDF, and the hosted invoice page.",
              "maxLength": 5000,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "inclusive": {
              "description": "This specifies if the tax rate is inclusive or exclusive.",
              "type": "boolean"
            },
            "jurisdiction": {
              "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customerâ€™s invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "tax_rate"
              ],
              "type": "string"
            },
            "percentage": {
              "description": "This represents the tax rate percent out of 100.",
              "type": "number"
            },
            "state": {
              "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tax_type": {
              "description": "The high-level tax type, such as `vat` or `sales_tax`.",
              "enum": [
                "gst",
                "hst",
                "jct",
                "pst",
                "qst",
                "rst",
                "sales_tax",
                "vat"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "active",
            "created",
            "display_name",
            "id",
            "inclusive",
            "livemode",
            "object",
            "percentage"
          ],
          "title": "TaxRate",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "tax_rate"
        },
        "nullable": true,
        "type": "array"
      },
      "test_clock": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A test clock enables deterministic control over objects in testmode. With a test clock, you can create\nobjects at a frozen time in the past or future, and advance to a specific future time to observe webhooks and state changes. After the clock advances,\nyou can either validate the current state of your scenario (and test your assumptions), change the current state of your scenario (and test more complex scenarios), or keep advancing forward in time.",
          "properties": {
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "deletes_after": {
              "description": "Time at which this clock is scheduled to auto delete.",
              "format": "unix-time",
              "type": "integer"
            },
            "frozen_time": {
              "description": "Time at which all objects belonging to this clock are frozen.",
              "format": "unix-time",
              "type": "integer"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "name": {
              "description": "The custom name supplied at creation.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "test_helpers.test_clock"
              ],
              "type": "string"
            },
            "status": {
              "description": "The status of the Test Clock.",
              "enum": [
                "advancing",
                "internal_failure",
                "ready"
              ],
              "type": "string"
            }
          },
          "required": [
            "created",
            "deletes_after",
            "frozen_time",
            "id",
            "livemode",
            "object",
            "status"
          ],
          "title": "TestClock",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "test_helpers.test_clock"
        }
      ],
      "unit_amount": {
        "description": "Unit amount (in the `currency` specified) of the invoice item.",
        "nullable": true,
        "type": "integer"
      },
      "unit_amount_decimal": {
        "description": "Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.",
        "format": "decimal",
        "nullable": true,
        "type": "string"
      }
    },
    "required": [
      "amount",
      "currency",
      "customer",
      "date",
      "discountable",
      "id",
      "livemode",
      "object",
      "period",
      "proration",
      "quantity"
    ],
    "title": "InvoiceItem",
    "type": "object",
    "x-expandableFields": [
      "customer",
      "discounts",
      "invoice",
      "period",
      "price",
      "subscription",
      "tax_rates",
      "test_clock"
    ],
    "x-resourceId": "invoiceitem"
  },
  "issuing_authorization": {
    "description": "When an [issued card](https://stripe.com/docs/issuing) is used to make a purchase, an Issuing `Authorization`\nobject is created. [Authorizations](https://stripe.com/docs/issuing/purchases/authorizations) must be approved for the\npurchase to be completed successfully.\n\nRelated guide: [Issued Card Authorizations](https://stripe.com/docs/issuing/purchases/authorizations).",
    "properties": {
      "amount": {
        "description": "The total amount that was authorized or rejected. This amount is in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
        "type": "integer"
      },
      "amount_details": [
        {
          "description": "",
          "properties": {
            "atm_fee": {
              "description": "The fee charged by the ATM for the cash withdrawal.",
              "nullable": true,
              "type": "integer"
            }
          },
          "title": "IssuingAuthorizationAmountDetails",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "approved": {
        "description": "Whether the authorization has been approved.",
        "type": "boolean"
      },
      "authorization_method": {
        "description": "How the card details were provided.",
        "enum": [
          "chip",
          "contactless",
          "keyed_in",
          "online",
          "swipe"
        ],
        "type": "string"
      },
      "balance_transactions": {
        "description": "List of balance transactions associated with this authorization.",
        "items": {
          "description": "Balance transactions represent funds moving through your Stripe account.\nThey're created for every type of transaction that comes into or flows out of your Stripe account balance.\n\nRelated guide: [Balance Transaction Types](https://stripe.com/docs/reports/balance-transaction-types).",
          "properties": {
            "amount": {
              "description": "Gross amount of the transaction, in %s.",
              "type": "integer"
            },
            "available_on": {
              "description": "The date the transaction's net funds will become available in the Stripe balance.",
              "format": "unix-time",
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exchange_rate": {
              "description": "The exchange rate used, if applicable, for this transaction. Specifically, if money was converted from currency A to currency B, then the `amount` in currency A, times `exchange_rate`, would be the `amount` in currency B. For example, suppose you charged a customer 10.00 EUR. Then the PaymentIntent's `amount` would be `1000` and `currency` would be `eur`. Suppose this was converted into 12.34 USD in your Stripe account. Then the BalanceTransaction's `amount` would be `1234`, `currency` would be `usd`, and `exchange_rate` would be `1.234`.",
              "nullable": true,
              "type": "number"
            },
            "fee": {
              "description": "Fees (in %s) paid for this transaction.",
              "type": "integer"
            },
            "fee_details": {
              "description": "Detailed breakdown of fees (in %s) paid for this transaction.",
              "items": {
                "$ref": "#/components/schemas/fee"
              },
              "type": "array"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "net": {
              "description": "Net amount of the transaction, in %s.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "balance_transaction"
              ],
              "type": "string"
            },
            "reporting_category": {
              "description": "[Learn more](https://stripe.com/docs/reports/reporting-categories) about how reporting categories can help you understand balance transactions from an accounting perspective.",
              "maxLength": 5000,
              "type": "string"
            },
            "source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                },
                {
                  "$ref": "#/components/schemas/charge"
                },
                {
                  "$ref": "#/components/schemas/connect_collection_transfer"
                },
                {
                  "$ref": "#/components/schemas/dispute"
                },
                {
                  "$ref": "#/components/schemas/fee_refund"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                },
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                },
                {
                  "$ref": "#/components/schemas/payout"
                },
                {
                  "$ref": "#/components/schemas/platform_tax_fee"
                },
                {
                  "$ref": "#/components/schemas/refund"
                },
                {
                  "$ref": "#/components/schemas/reserve_transaction"
                },
                {
                  "$ref": "#/components/schemas/tax_deducted_at_source"
                },
                {
                  "$ref": "#/components/schemas/topup"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ],
              "description": "The Stripe object to which this transaction is related.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  },
                  {
                    "$ref": "#/components/schemas/charge"
                  },
                  {
                    "$ref": "#/components/schemas/connect_collection_transfer"
                  },
                  {
                    "$ref": "#/components/schemas/dispute"
                  },
                  {
                    "$ref": "#/components/schemas/fee_refund"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.authorization"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.dispute"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.transaction"
                  },
                  {
                    "$ref": "#/components/schemas/payout"
                  },
                  {
                    "$ref": "#/components/schemas/platform_tax_fee"
                  },
                  {
                    "$ref": "#/components/schemas/refund"
                  },
                  {
                    "$ref": "#/components/schemas/reserve_transaction"
                  },
                  {
                    "$ref": "#/components/schemas/tax_deducted_at_source"
                  },
                  {
                    "$ref": "#/components/schemas/topup"
                  },
                  {
                    "$ref": "#/components/schemas/transfer"
                  },
                  {
                    "$ref": "#/components/schemas/transfer_reversal"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "status": {
              "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
              "maxLength": 5000,
              "type": "string"
            },
            "type": {
              "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. If you are looking to classify transactions for accounting purposes, you might want to consider `reporting_category` instead.",
              "enum": [
                "adjustment",
                "advance",
                "advance_funding",
                "anticipation_repayment",
                "application_fee",
                "application_fee_refund",
                "charge",
                "connect_collection_transfer",
                "contribution",
                "issuing_authorization_hold",
                "issuing_authorization_release",
                "issuing_dispute",
                "issuing_transaction",
                "payment",
                "payment_failure_refund",
                "payment_refund",
                "payout",
                "payout_cancel",
                "payout_failure",
                "refund",
                "refund_failure",
                "reserve_transaction",
                "reserved_funds",
                "stripe_fee",
                "stripe_fx_fee",
                "tax_fee",
                "topup",
                "topup_reversal",
                "transfer",
                "transfer_cancel",
                "transfer_failure",
                "transfer_refund"
              ],
              "type": "string"
            }
          },
          "required": [
            "amount",
            "available_on",
            "created",
            "currency",
            "fee",
            "fee_details",
            "id",
            "net",
            "object",
            "reporting_category",
            "status",
            "type"
          ],
          "title": "BalanceTransaction",
          "type": "object",
          "x-expandableFields": [
            "fee_details",
            "source"
          ],
          "x-resourceId": "balance_transaction"
        },
        "type": "array"
      },
      "card": {
        "description": "You can [create physical or virtual cards](https://stripe.com/docs/issuing/cards) that are issued to cardholders.",
        "properties": {
          "brand": {
            "description": "The brand of the card.",
            "maxLength": 5000,
            "type": "string"
          },
          "cancellation_reason": {
            "description": "The reason why the card was canceled.",
            "enum": [
              "design_rejected",
              "lost",
              "stolen"
            ],
            "nullable": true,
            "type": "string"
          },
          "cardholder": {
            "$ref": "#/components/schemas/issuing.cardholder"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Supported currencies are `usd` in the US, `eur` in the EU, and `gbp` in the UK.",
            "type": "string"
          },
          "cvc": {
            "description": "The card's CVC. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it's only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.",
            "maxLength": 5000,
            "type": "string"
          },
          "exp_month": {
            "description": "The expiration month of the card.",
            "type": "integer"
          },
          "exp_year": {
            "description": "The expiration year of the card.",
            "type": "integer"
          },
          "financial_account": {
            "description": "The financial account this card is attached to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "last4": {
            "description": "The last 4 digits of the card number.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "number": {
            "description": "The full unredacted card number. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it's only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "issuing.card"
            ],
            "type": "string"
          },
          "replaced_by": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/issuing.card"
              }
            ],
            "description": "The latest card that replaces this card, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/issuing.card"
                }
              ]
            }
          },
          "replacement_for": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/issuing.card"
              }
            ],
            "description": "The card this card replaces, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/issuing.card"
                }
              ]
            }
          },
          "replacement_reason": {
            "description": "The reason why the previous card needed to be replaced.",
            "enum": [
              "damaged",
              "expired",
              "lost",
              "stolen"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "shipping": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_card_shipping"
              }
            ],
            "description": "Where and how the card will be shipped.",
            "nullable": true
          },
          "spending_controls": {
            "$ref": "#/components/schemas/issuing_card_authorization_controls"
          },
          "status": {
            "description": "Whether authorizations can be approved on this card.",
            "enum": [
              "active",
              "canceled",
              "inactive"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": {
            "description": "The type of the card.",
            "enum": [
              "physical",
              "virtual"
            ],
            "type": "string"
          },
          "wallets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_card_wallets"
              }
            ],
            "description": "Information relating to digital wallets (like Apple Pay and Google Pay).",
            "nullable": true
          }
        },
        "required": [
          "brand",
          "cardholder",
          "created",
          "currency",
          "exp_month",
          "exp_year",
          "id",
          "last4",
          "livemode",
          "metadata",
          "object",
          "spending_controls",
          "status",
          "type"
        ],
        "title": "IssuingCard",
        "type": "object",
        "x-expandableFields": [
          "cardholder",
          "replaced_by",
          "replacement_for",
          "shipping",
          "spending_controls",
          "wallets"
        ],
        "x-resourceId": "issuing.card"
      },
      "cardholder": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "An Issuing `Cardholder` object represents an individual or business entity who is [issued](https://stripe.com/docs/issuing) cards.\n\nRelated guide: [How to create a Cardholder](https://stripe.com/docs/issuing/cards#create-cardholder)",
          "properties": {
            "billing": {
              "$ref": "#/components/schemas/issuing_cardholder_address"
            },
            "company": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_cardholder_company"
                }
              ],
              "description": "Additional information about a `company` cardholder.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "email": {
              "description": "The cardholder's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "individual": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_cardholder_individual"
                }
              ],
              "description": "Additional information about an `individual` cardholder.",
              "nullable": true
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The cardholder's name. This will be printed on cards issued to them.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "issuing.cardholder"
              ],
              "type": "string"
            },
            "phone_number": {
              "description": "The cardholder's phone number. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure#when-is-3d-secure-applied) for more details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "requirements": {
              "$ref": "#/components/schemas/issuing_cardholder_requirements"
            },
            "spending_controls": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_cardholder_authorization_controls"
                }
              ],
              "description": "Rules that control spending across this cardholder's cards. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.",
              "nullable": true
            },
            "status": {
              "description": "Specifies whether to permit authorizations on this cardholder's cards.",
              "enum": [
                "active",
                "blocked",
                "inactive"
              ],
              "type": "string"
            },
            "type": {
              "description": "One of `individual` or `company`.",
              "enum": [
                "company",
                "individual"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            }
          },
          "required": [
            "billing",
            "created",
            "id",
            "livemode",
            "metadata",
            "name",
            "object",
            "requirements",
            "status",
            "type"
          ],
          "title": "IssuingCardholder",
          "type": "object",
          "x-expandableFields": [
            "billing",
            "company",
            "individual",
            "requirements",
            "spending_controls"
          ],
          "x-resourceId": "issuing.cardholder"
        }
      ],
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "merchant_amount": {
        "description": "The total amount that was authorized or rejected. This amount is in the `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
        "type": "integer"
      },
      "merchant_currency": {
        "description": "The currency that was presented to the cardholder for the authorization. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "merchant_data": {
        "description": "",
        "properties": {
          "category": {
            "description": "A categorization of the seller's type of business. See our [merchant categories guide](https://stripe.com/docs/issuing/merchant-categories) for a list of possible values.",
            "maxLength": 5000,
            "type": "string"
          },
          "category_code": {
            "description": "The merchant category code for the sellerâ€™s business",
            "maxLength": 5000,
            "type": "string"
          },
          "city": {
            "description": "City where the seller is located",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Country where the seller is located",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the seller",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "network_id": {
            "description": "Identifier assigned to the seller by the card brand",
            "maxLength": 5000,
            "type": "string"
          },
          "postal_code": {
            "description": "Postal code where the seller is located",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "State where the seller is located",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "category",
          "category_code",
          "network_id"
        ],
        "title": "IssuingAuthorizationMerchantData",
        "type": "object",
        "x-expandableFields": []
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "issuing.authorization"
        ],
        "type": "string"
      },
      "pending_request": [
        {
          "description": "",
          "properties": {
            "amount": {
              "description": "The additional amount Stripe will hold if the authorization is approved, in the card's [currency](https://stripe.com/docs/api#issuing_authorization_object-pending-request-currency) and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
              "type": "integer"
            },
            "amount_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_authorization_amount_details"
                }
              ],
              "description": "Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
              "nullable": true
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "is_amount_controllable": {
              "description": "If set `true`, you may provide [amount](https://stripe.com/docs/api/issuing/authorizations/approve#approve_issuing_authorization-amount) to control how much to hold for the authorization.",
              "type": "boolean"
            },
            "merchant_amount": {
              "description": "The amount the merchant is requesting to be authorized in the `merchant_currency`. The amount is in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
              "type": "integer"
            },
            "merchant_currency": {
              "description": "The local currency the merchant is requesting to authorize.",
              "type": "string"
            }
          },
          "required": [
            "amount",
            "currency",
            "is_amount_controllable",
            "merchant_amount",
            "merchant_currency"
          ],
          "title": "IssuingAuthorizationPendingRequest",
          "type": "object",
          "x-expandableFields": [
            "amount_details"
          ]
        }
      ],
      "request_history": {
        "description": "History of every time `pending_request` was approved/denied, either by you directly or by Stripe (e.g. based on your `spending_controls`). If the merchant changes the authorization by performing an [incremental authorization](https://stripe.com/docs/issuing/purchases/authorizations), you can look at this field to see the previous requests for the authorization.",
        "items": {
          "description": "",
          "properties": {
            "amount": {
              "description": "The `pending_request.amount` at the time of the request, presented in your card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). Stripe held this amount from your account to fund the authorization if the request was approved.",
              "type": "integer"
            },
            "amount_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_authorization_amount_details"
                }
              ],
              "description": "Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
              "nullable": true
            },
            "approved": {
              "description": "Whether this request was approved.",
              "type": "boolean"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "maxLength": 5000,
              "type": "string"
            },
            "merchant_amount": {
              "description": "The `pending_request.merchant_amount` at the time of the request, presented in the `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
              "type": "integer"
            },
            "merchant_currency": {
              "description": "The currency that was collected by the merchant and presented to the cardholder for the authorization. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "maxLength": 5000,
              "type": "string"
            },
            "reason": {
              "description": "The reason for the approval or decline.",
              "enum": [
                "account_disabled",
                "card_active",
                "card_inactive",
                "cardholder_inactive",
                "cardholder_verification_required",
                "insufficient_funds",
                "not_allowed",
                "spending_controls",
                "suspected_fraud",
                "verification_failed",
                "webhook_approved",
                "webhook_declined",
                "webhook_timeout"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            }
          },
          "required": [
            "amount",
            "approved",
            "created",
            "currency",
            "merchant_amount",
            "merchant_currency",
            "reason"
          ],
          "title": "IssuingAuthorizationRequest",
          "type": "object",
          "x-expandableFields": [
            "amount_details"
          ]
        },
        "type": "array"
      },
      "status": {
        "description": "The current status of the authorization in its lifecycle.",
        "enum": [
          "closed",
          "pending",
          "reversed"
        ],
        "type": "string"
      },
      "transactions": {
        "description": "List of [transactions](https://stripe.com/docs/api/issuing/transactions) associated with this authorization.",
        "items": {
          "description": "Any use of an [issued card](https://stripe.com/docs/issuing) that results in funds entering or leaving\nyour Stripe account, such as a completed purchase or refund, is represented by an Issuing\n`Transaction` object.\n\nRelated guide: [Issued Card Transactions](https://stripe.com/docs/issuing/purchases/transactions).",
          "properties": {
            "amount": {
              "description": "The transaction amount, which will be reflected in your balance. This amount is in your currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
              "type": "integer"
            },
            "amount_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_transaction_amount_details"
                }
              ],
              "description": "Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
              "nullable": true
            },
            "authorization": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                }
              ],
              "description": "The `Authorization` object that led to this transaction.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.authorization"
                  }
                ]
              }
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the [balance transaction](https://stripe.com/docs/api/balance_transactions) associated with this transaction.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "card": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.card"
                }
              ],
              "description": "The card used to make this transaction.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.card"
                  }
                ]
              }
            },
            "cardholder": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.cardholder"
                }
              ],
              "description": "The cardholder to whom this transaction belongs.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.cardholder"
                  }
                ]
              }
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "dispute": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                }
              ],
              "description": "If you've disputed the transaction, the ID of the dispute.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.dispute"
                  }
                ]
              }
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "merchant_amount": {
              "description": "The amount that the merchant will receive, denominated in `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). It will be different from `amount` if the merchant is taking payment in a different currency.",
              "type": "integer"
            },
            "merchant_currency": {
              "description": "The currency with which the merchant is taking payment.",
              "type": "string"
            },
            "merchant_data": {
              "$ref": "#/components/schemas/issuing_authorization_merchant_data"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "issuing.transaction"
              ],
              "type": "string"
            },
            "purchase_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_transaction_purchase_details"
                }
              ],
              "description": "Additional purchase information that is optionally provided by the merchant.",
              "nullable": true
            },
            "treasury": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_transaction_treasury"
                }
              ],
              "description": "[Treasury](https://stripe.com/docs/api/treasury) details related to this transaction if it was created on a [FinancialAccount](/docs/api/treasury/financial_accounts",
              "nullable": true
            },
            "type": {
              "description": "The nature of the transaction.",
              "enum": [
                "capture",
                "refund"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "wallet": {
              "description": "The digital wallet used for this transaction. One of `apple_pay`, `google_pay`, or `samsung_pay`.",
              "enum": [
                "apple_pay",
                "google_pay",
                "samsung_pay"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "card",
            "created",
            "currency",
            "id",
            "livemode",
            "merchant_amount",
            "merchant_currency",
            "merchant_data",
            "metadata",
            "object",
            "type"
          ],
          "title": "IssuingTransaction",
          "type": "object",
          "x-expandableFields": [
            "amount_details",
            "authorization",
            "balance_transaction",
            "card",
            "cardholder",
            "dispute",
            "merchant_data",
            "purchase_details",
            "treasury"
          ],
          "x-resourceId": "issuing.transaction"
        },
        "type": "array"
      },
      "treasury": [
        {
          "description": "",
          "properties": {
            "received_credits": {
              "description": "The array of [ReceivedCredits](https://stripe.com/docs/api/treasury/received_credits) associated with this authorization",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "received_debits": {
              "description": "The array of [ReceivedDebits](https://stripe.com/docs/api/treasury/received_debits) associated with this authorization",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "transaction": {
              "description": "The Treasury [Transaction](https://stripe.com/docs/api/treasury/transactions) associated with this authorization",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "received_credits",
            "received_debits"
          ],
          "title": "IssuingAuthorizationTreasury",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "verification_data": {
        "description": "",
        "properties": {
          "address_line1_check": {
            "description": "Whether the cardholder provided an address first line and if it matched the cardholderâ€™s `billing.address.line1`.",
            "enum": [
              "match",
              "mismatch",
              "not_provided"
            ],
            "type": "string"
          },
          "address_postal_code_check": {
            "description": "Whether the cardholder provided a postal code and if it matched the cardholderâ€™s `billing.address.postal_code`.",
            "enum": [
              "match",
              "mismatch",
              "not_provided"
            ],
            "type": "string"
          },
          "cvc_check": {
            "description": "Whether the cardholder provided a CVC and if it matched Stripeâ€™s record.",
            "enum": [
              "match",
              "mismatch",
              "not_provided"
            ],
            "type": "string"
          },
          "expiry_check": {
            "description": "Whether the cardholder provided an expiry date and if it matched Stripeâ€™s record.",
            "enum": [
              "match",
              "mismatch",
              "not_provided"
            ],
            "type": "string"
          }
        },
        "required": [
          "address_line1_check",
          "address_postal_code_check",
          "cvc_check",
          "expiry_check"
        ],
        "title": "IssuingAuthorizationVerificationData",
        "type": "object",
        "x-expandableFields": []
      },
      "wallet": {
        "description": "The digital wallet used for this authorization. One of `apple_pay`, `google_pay`, or `samsung_pay`.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      }
    },
    "required": [
      "amount",
      "approved",
      "authorization_method",
      "balance_transactions",
      "card",
      "created",
      "currency",
      "id",
      "livemode",
      "merchant_amount",
      "merchant_currency",
      "merchant_data",
      "metadata",
      "object",
      "request_history",
      "status",
      "transactions",
      "verification_data"
    ],
    "title": "IssuingAuthorization",
    "type": "object",
    "x-expandableFields": [
      "amount_details",
      "balance_transactions",
      "card",
      "cardholder",
      "merchant_data",
      "pending_request",
      "request_history",
      "transactions",
      "treasury",
      "verification_data"
    ],
    "x-resourceId": "issuing.authorization"
  },
  "issuing_card": {
    "description": "You can [create physical or virtual cards](https://stripe.com/docs/issuing/cards) that are issued to cardholders.",
    "properties": {
      "brand": {
        "description": "The brand of the card.",
        "maxLength": 5000,
        "type": "string"
      },
      "cancellation_reason": {
        "description": "The reason why the card was canceled.",
        "enum": [
          "design_rejected",
          "lost",
          "stolen"
        ],
        "nullable": true,
        "type": "string"
      },
      "cardholder": {
        "description": "An Issuing `Cardholder` object represents an individual or business entity who is [issued](https://stripe.com/docs/issuing) cards.\n\nRelated guide: [How to create a Cardholder](https://stripe.com/docs/issuing/cards#create-cardholder)",
        "properties": {
          "billing": {
            "$ref": "#/components/schemas/issuing_cardholder_address"
          },
          "company": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_cardholder_company"
              }
            ],
            "description": "Additional information about a `company` cardholder.",
            "nullable": true
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "email": {
            "description": "The cardholder's email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "individual": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_cardholder_individual"
              }
            ],
            "description": "Additional information about an `individual` cardholder.",
            "nullable": true
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "name": {
            "description": "The cardholder's name. This will be printed on cards issued to them.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "issuing.cardholder"
            ],
            "type": "string"
          },
          "phone_number": {
            "description": "The cardholder's phone number. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure#when-is-3d-secure-applied) for more details.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "requirements": {
            "$ref": "#/components/schemas/issuing_cardholder_requirements"
          },
          "spending_controls": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_cardholder_authorization_controls"
              }
            ],
            "description": "Rules that control spending across this cardholder's cards. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.",
            "nullable": true
          },
          "status": {
            "description": "Specifies whether to permit authorizations on this cardholder's cards.",
            "enum": [
              "active",
              "blocked",
              "inactive"
            ],
            "type": "string"
          },
          "type": {
            "description": "One of `individual` or `company`.",
            "enum": [
              "company",
              "individual"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "billing",
          "created",
          "id",
          "livemode",
          "metadata",
          "name",
          "object",
          "requirements",
          "status",
          "type"
        ],
        "title": "IssuingCardholder",
        "type": "object",
        "x-expandableFields": [
          "billing",
          "company",
          "individual",
          "requirements",
          "spending_controls"
        ],
        "x-resourceId": "issuing.cardholder"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Supported currencies are `usd` in the US, `eur` in the EU, and `gbp` in the UK.",
        "type": "string"
      },
      "cvc": {
        "description": "The card's CVC. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it's only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.",
        "maxLength": 5000,
        "type": "string"
      },
      "exp_month": {
        "description": "The expiration month of the card.",
        "type": "integer"
      },
      "exp_year": {
        "description": "The expiration year of the card.",
        "type": "integer"
      },
      "financial_account": {
        "description": "The financial account this card is attached to.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "last4": {
        "description": "The last 4 digits of the card number.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "number": {
        "description": "The full unredacted card number. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it's only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.",
        "maxLength": 5000,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "issuing.card"
        ],
        "type": "string"
      },
      "replaced_by": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "You can [create physical or virtual cards](https://stripe.com/docs/issuing/cards) that are issued to cardholders.",
          "properties": {
            "brand": {
              "description": "The brand of the card.",
              "maxLength": 5000,
              "type": "string"
            },
            "cancellation_reason": {
              "description": "The reason why the card was canceled.",
              "enum": [
                "design_rejected",
                "lost",
                "stolen"
              ],
              "nullable": true,
              "type": "string"
            },
            "cardholder": {
              "$ref": "#/components/schemas/issuing.cardholder"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Supported currencies are `usd` in the US, `eur` in the EU, and `gbp` in the UK.",
              "type": "string"
            },
            "cvc": {
              "description": "The card's CVC. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it's only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.",
              "maxLength": 5000,
              "type": "string"
            },
            "exp_month": {
              "description": "The expiration month of the card.",
              "type": "integer"
            },
            "exp_year": {
              "description": "The expiration year of the card.",
              "type": "integer"
            },
            "financial_account": {
              "description": "The financial account this card is attached to.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "last4": {
              "description": "The last 4 digits of the card number.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "number": {
              "description": "The full unredacted card number. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it's only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "issuing.card"
              ],
              "type": "string"
            },
            "replaced_by": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.card"
                }
              ],
              "description": "The latest card that replaces this card, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.card"
                  }
                ]
              }
            },
            "replacement_for": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.card"
                }
              ],
              "description": "The card this card replaces, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.card"
                  }
                ]
              }
            },
            "replacement_reason": {
              "description": "The reason why the previous card needed to be replaced.",
              "enum": [
                "damaged",
                "expired",
                "lost",
                "stolen"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_card_shipping"
                }
              ],
              "description": "Where and how the card will be shipped.",
              "nullable": true
            },
            "spending_controls": {
              "$ref": "#/components/schemas/issuing_card_authorization_controls"
            },
            "status": {
              "description": "Whether authorizations can be approved on this card.",
              "enum": [
                "active",
                "canceled",
                "inactive"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "type": {
              "description": "The type of the card.",
              "enum": [
                "physical",
                "virtual"
              ],
              "type": "string"
            },
            "wallets": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_card_wallets"
                }
              ],
              "description": "Information relating to digital wallets (like Apple Pay and Google Pay).",
              "nullable": true
            }
          },
          "required": [
            "brand",
            "cardholder",
            "created",
            "currency",
            "exp_month",
            "exp_year",
            "id",
            "last4",
            "livemode",
            "metadata",
            "object",
            "spending_controls",
            "status",
            "type"
          ],
          "title": "IssuingCard",
          "type": "object",
          "x-expandableFields": [
            "cardholder",
            "replaced_by",
            "replacement_for",
            "shipping",
            "spending_controls",
            "wallets"
          ],
          "x-resourceId": "issuing.card"
        }
      ],
      "replacement_for": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "You can [create physical or virtual cards](https://stripe.com/docs/issuing/cards) that are issued to cardholders.",
          "properties": {
            "brand": {
              "description": "The brand of the card.",
              "maxLength": 5000,
              "type": "string"
            },
            "cancellation_reason": {
              "description": "The reason why the card was canceled.",
              "enum": [
                "design_rejected",
                "lost",
                "stolen"
              ],
              "nullable": true,
              "type": "string"
            },
            "cardholder": {
              "$ref": "#/components/schemas/issuing.cardholder"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Supported currencies are `usd` in the US, `eur` in the EU, and `gbp` in the UK.",
              "type": "string"
            },
            "cvc": {
              "description": "The card's CVC. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it's only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.",
              "maxLength": 5000,
              "type": "string"
            },
            "exp_month": {
              "description": "The expiration month of the card.",
              "type": "integer"
            },
            "exp_year": {
              "description": "The expiration year of the card.",
              "type": "integer"
            },
            "financial_account": {
              "description": "The financial account this card is attached to.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "last4": {
              "description": "The last 4 digits of the card number.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "number": {
              "description": "The full unredacted card number. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it's only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "issuing.card"
              ],
              "type": "string"
            },
            "replaced_by": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.card"
                }
              ],
              "description": "The latest card that replaces this card, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.card"
                  }
                ]
              }
            },
            "replacement_for": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.card"
                }
              ],
              "description": "The card this card replaces, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.card"
                  }
                ]
              }
            },
            "replacement_reason": {
              "description": "The reason why the previous card needed to be replaced.",
              "enum": [
                "damaged",
                "expired",
                "lost",
                "stolen"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_card_shipping"
                }
              ],
              "description": "Where and how the card will be shipped.",
              "nullable": true
            },
            "spending_controls": {
              "$ref": "#/components/schemas/issuing_card_authorization_controls"
            },
            "status": {
              "description": "Whether authorizations can be approved on this card.",
              "enum": [
                "active",
                "canceled",
                "inactive"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "type": {
              "description": "The type of the card.",
              "enum": [
                "physical",
                "virtual"
              ],
              "type": "string"
            },
            "wallets": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_card_wallets"
                }
              ],
              "description": "Information relating to digital wallets (like Apple Pay and Google Pay).",
              "nullable": true
            }
          },
          "required": [
            "brand",
            "cardholder",
            "created",
            "currency",
            "exp_month",
            "exp_year",
            "id",
            "last4",
            "livemode",
            "metadata",
            "object",
            "spending_controls",
            "status",
            "type"
          ],
          "title": "IssuingCard",
          "type": "object",
          "x-expandableFields": [
            "cardholder",
            "replaced_by",
            "replacement_for",
            "shipping",
            "spending_controls",
            "wallets"
          ],
          "x-resourceId": "issuing.card"
        }
      ],
      "replacement_reason": {
        "description": "The reason why the previous card needed to be replaced.",
        "enum": [
          "damaged",
          "expired",
          "lost",
          "stolen"
        ],
        "nullable": true,
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "shipping": [
        {
          "description": "",
          "properties": {
            "address": {
              "$ref": "#/components/schemas/address"
            },
            "carrier": {
              "description": "The delivery company that shipped a card.",
              "enum": [
                "dhl",
                "fedex",
                "royal_mail",
                "usps"
              ],
              "nullable": true,
              "type": "string"
            },
            "eta": {
              "description": "A unix timestamp representing a best estimate of when the card will be delivered.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "name": {
              "description": "Recipient name.",
              "maxLength": 5000,
              "type": "string"
            },
            "service": {
              "description": "Shipment service, such as `standard` or `express`.",
              "enum": [
                "express",
                "priority",
                "standard"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "status": {
              "description": "The delivery status of the card.",
              "enum": [
                "canceled",
                "delivered",
                "failure",
                "pending",
                "returned",
                "shipped"
              ],
              "nullable": true,
              "type": "string"
            },
            "tracking_number": {
              "description": "A tracking number for a card shipment.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tracking_url": {
              "description": "A link to the shipping carrier's site where you can view detailed information about a card shipment.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "Packaging options.",
              "enum": [
                "bulk",
                "individual"
              ],
              "type": "string"
            }
          },
          "required": [
            "address",
            "name",
            "service",
            "type"
          ],
          "title": "IssuingCardShipping",
          "type": "object",
          "x-expandableFields": [
            "address"
          ]
        }
      ],
      "spending_controls": {
        "description": "",
        "properties": {
          "allowed_categories": {
            "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to allow. All other categories will be blocked. Cannot be set with `blocked_categories`.",
            "items": {
              "enum": [
                "ac_refrigeration_repair",
                "accounting_bookkeeping_services",
                "advertising_services",
                "agricultural_cooperative",
                "airlines_air_carriers",
                "airports_flying_fields",
                "ambulance_services",
                "amusement_parks_carnivals",
                "antique_reproductions",
                "antique_shops",
                "aquariums",
                "architectural_surveying_services",
                "art_dealers_and_galleries",
                "artists_supply_and_craft_shops",
                "auto_and_home_supply_stores",
                "auto_body_repair_shops",
                "auto_paint_shops",
                "auto_service_shops",
                "automated_cash_disburse",
                "automated_fuel_dispensers",
                "automobile_associations",
                "automotive_parts_and_accessories_stores",
                "automotive_tire_stores",
                "bail_and_bond_payments",
                "bakeries",
                "bands_orchestras",
                "barber_and_beauty_shops",
                "betting_casino_gambling",
                "bicycle_shops",
                "billiard_pool_establishments",
                "boat_dealers",
                "boat_rentals_and_leases",
                "book_stores",
                "books_periodicals_and_newspapers",
                "bowling_alleys",
                "bus_lines",
                "business_secretarial_schools",
                "buying_shopping_services",
                "cable_satellite_and_other_pay_television_and_radio",
                "camera_and_photographic_supply_stores",
                "candy_nut_and_confectionery_stores",
                "car_and_truck_dealers_new_used",
                "car_and_truck_dealers_used_only",
                "car_rental_agencies",
                "car_washes",
                "carpentry_services",
                "carpet_upholstery_cleaning",
                "caterers",
                "charitable_and_social_service_organizations_fundraising",
                "chemicals_and_allied_products",
                "child_care_services",
                "childrens_and_infants_wear_stores",
                "chiropodists_podiatrists",
                "chiropractors",
                "cigar_stores_and_stands",
                "civic_social_fraternal_associations",
                "cleaning_and_maintenance",
                "clothing_rental",
                "colleges_universities",
                "commercial_equipment",
                "commercial_footwear",
                "commercial_photography_art_and_graphics",
                "commuter_transport_and_ferries",
                "computer_network_services",
                "computer_programming",
                "computer_repair",
                "computer_software_stores",
                "computers_peripherals_and_software",
                "concrete_work_services",
                "construction_materials",
                "consulting_public_relations",
                "correspondence_schools",
                "cosmetic_stores",
                "counseling_services",
                "country_clubs",
                "courier_services",
                "court_costs",
                "credit_reporting_agencies",
                "cruise_lines",
                "dairy_products_stores",
                "dance_hall_studios_schools",
                "dating_escort_services",
                "dentists_orthodontists",
                "department_stores",
                "detective_agencies",
                "digital_goods_applications",
                "digital_goods_games",
                "digital_goods_large_volume",
                "digital_goods_media",
                "direct_marketing_catalog_merchant",
                "direct_marketing_combination_catalog_and_retail_merchant",
                "direct_marketing_inbound_telemarketing",
                "direct_marketing_insurance_services",
                "direct_marketing_other",
                "direct_marketing_outbound_telemarketing",
                "direct_marketing_subscription",
                "direct_marketing_travel",
                "discount_stores",
                "doctors",
                "door_to_door_sales",
                "drapery_window_covering_and_upholstery_stores",
                "drinking_places",
                "drug_stores_and_pharmacies",
                "drugs_drug_proprietaries_and_druggist_sundries",
                "dry_cleaners",
                "durable_goods",
                "duty_free_stores",
                "eating_places_restaurants",
                "educational_services",
                "electric_razor_stores",
                "electrical_parts_and_equipment",
                "electrical_services",
                "electronics_repair_shops",
                "electronics_stores",
                "elementary_secondary_schools",
                "employment_temp_agencies",
                "equipment_rental",
                "exterminating_services",
                "family_clothing_stores",
                "fast_food_restaurants",
                "financial_institutions",
                "fines_government_administrative_entities",
                "fireplace_fireplace_screens_and_accessories_stores",
                "floor_covering_stores",
                "florists",
                "florists_supplies_nursery_stock_and_flowers",
                "freezer_and_locker_meat_provisioners",
                "fuel_dealers_non_automotive",
                "funeral_services_crematories",
                "furniture_home_furnishings_and_equipment_stores_except_appliances",
                "furniture_repair_refinishing",
                "furriers_and_fur_shops",
                "general_services",
                "gift_card_novelty_and_souvenir_shops",
                "glass_paint_and_wallpaper_stores",
                "glassware_crystal_stores",
                "golf_courses_public",
                "government_services",
                "grocery_stores_supermarkets",
                "hardware_equipment_and_supplies",
                "hardware_stores",
                "health_and_beauty_spas",
                "hearing_aids_sales_and_supplies",
                "heating_plumbing_a_c",
                "hobby_toy_and_game_shops",
                "home_supply_warehouse_stores",
                "hospitals",
                "hotels_motels_and_resorts",
                "household_appliance_stores",
                "industrial_supplies",
                "information_retrieval_services",
                "insurance_default",
                "insurance_underwriting_premiums",
                "intra_company_purchases",
                "jewelry_stores_watches_clocks_and_silverware_stores",
                "landscaping_services",
                "laundries",
                "laundry_cleaning_services",
                "legal_services_attorneys",
                "luggage_and_leather_goods_stores",
                "lumber_building_materials_stores",
                "manual_cash_disburse",
                "marinas_service_and_supplies",
                "masonry_stonework_and_plaster",
                "massage_parlors",
                "medical_and_dental_labs",
                "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
                "medical_services",
                "membership_organizations",
                "mens_and_boys_clothing_and_accessories_stores",
                "mens_womens_clothing_stores",
                "metal_service_centers",
                "miscellaneous",
                "miscellaneous_apparel_and_accessory_shops",
                "miscellaneous_auto_dealers",
                "miscellaneous_business_services",
                "miscellaneous_food_stores",
                "miscellaneous_general_merchandise",
                "miscellaneous_general_services",
                "miscellaneous_home_furnishing_specialty_stores",
                "miscellaneous_publishing_and_printing",
                "miscellaneous_recreation_services",
                "miscellaneous_repair_shops",
                "miscellaneous_specialty_retail",
                "mobile_home_dealers",
                "motion_picture_theaters",
                "motor_freight_carriers_and_trucking",
                "motor_homes_dealers",
                "motor_vehicle_supplies_and_new_parts",
                "motorcycle_shops_and_dealers",
                "motorcycle_shops_dealers",
                "music_stores_musical_instruments_pianos_and_sheet_music",
                "news_dealers_and_newsstands",
                "non_fi_money_orders",
                "non_fi_stored_value_card_purchase_load",
                "nondurable_goods",
                "nurseries_lawn_and_garden_supply_stores",
                "nursing_personal_care",
                "office_and_commercial_furniture",
                "opticians_eyeglasses",
                "optometrists_ophthalmologist",
                "orthopedic_goods_prosthetic_devices",
                "osteopaths",
                "package_stores_beer_wine_and_liquor",
                "paints_varnishes_and_supplies",
                "parking_lots_garages",
                "passenger_railways",
                "pawn_shops",
                "pet_shops_pet_food_and_supplies",
                "petroleum_and_petroleum_products",
                "photo_developing",
                "photographic_photocopy_microfilm_equipment_and_supplies",
                "photographic_studios",
                "picture_video_production",
                "piece_goods_notions_and_other_dry_goods",
                "plumbing_heating_equipment_and_supplies",
                "political_organizations",
                "postal_services_government_only",
                "precious_stones_and_metals_watches_and_jewelry",
                "professional_services",
                "public_warehousing_and_storage",
                "quick_copy_repro_and_blueprint",
                "railroads",
                "real_estate_agents_and_managers_rentals",
                "record_stores",
                "recreational_vehicle_rentals",
                "religious_goods_stores",
                "religious_organizations",
                "roofing_siding_sheet_metal",
                "secretarial_support_services",
                "security_brokers_dealers",
                "service_stations",
                "sewing_needlework_fabric_and_piece_goods_stores",
                "shoe_repair_hat_cleaning",
                "shoe_stores",
                "small_appliance_repair",
                "snowmobile_dealers",
                "special_trade_services",
                "specialty_cleaning",
                "sporting_goods_stores",
                "sporting_recreation_camps",
                "sports_and_riding_apparel_stores",
                "sports_clubs_fields",
                "stamp_and_coin_stores",
                "stationary_office_supplies_printing_and_writing_paper",
                "stationery_stores_office_and_school_supply_stores",
                "swimming_pools_sales",
                "t_ui_travel_germany",
                "tailors_alterations",
                "tax_payments_government_agencies",
                "tax_preparation_services",
                "taxicabs_limousines",
                "telecommunication_equipment_and_telephone_sales",
                "telecommunication_services",
                "telegraph_services",
                "tent_and_awning_shops",
                "testing_laboratories",
                "theatrical_ticket_agencies",
                "timeshares",
                "tire_retreading_and_repair",
                "tolls_bridge_fees",
                "tourist_attractions_and_exhibits",
                "towing_services",
                "trailer_parks_campgrounds",
                "transportation_services",
                "travel_agencies_tour_operators",
                "truck_stop_iteration",
                "truck_utility_trailer_rentals",
                "typesetting_plate_making_and_related_services",
                "typewriter_stores",
                "u_s_federal_government_agencies_or_departments",
                "uniforms_commercial_clothing",
                "used_merchandise_and_secondhand_stores",
                "utilities",
                "variety_stores",
                "veterinary_services",
                "video_amusement_game_supplies",
                "video_game_arcades",
                "video_tape_rental_stores",
                "vocational_trade_schools",
                "watch_jewelry_repair",
                "welding_repair",
                "wholesale_clubs",
                "wig_and_toupee_stores",
                "wires_money_orders",
                "womens_accessory_and_specialty_shops",
                "womens_ready_to_wear_stores",
                "wrecking_and_salvage_yards"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "blocked_categories": {
            "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to decline. All other categories will be allowed. Cannot be set with `allowed_categories`.",
            "items": {
              "enum": [
                "ac_refrigeration_repair",
                "accounting_bookkeeping_services",
                "advertising_services",
                "agricultural_cooperative",
                "airlines_air_carriers",
                "airports_flying_fields",
                "ambulance_services",
                "amusement_parks_carnivals",
                "antique_reproductions",
                "antique_shops",
                "aquariums",
                "architectural_surveying_services",
                "art_dealers_and_galleries",
                "artists_supply_and_craft_shops",
                "auto_and_home_supply_stores",
                "auto_body_repair_shops",
                "auto_paint_shops",
                "auto_service_shops",
                "automated_cash_disburse",
                "automated_fuel_dispensers",
                "automobile_associations",
                "automotive_parts_and_accessories_stores",
                "automotive_tire_stores",
                "bail_and_bond_payments",
                "bakeries",
                "bands_orchestras",
                "barber_and_beauty_shops",
                "betting_casino_gambling",
                "bicycle_shops",
                "billiard_pool_establishments",
                "boat_dealers",
                "boat_rentals_and_leases",
                "book_stores",
                "books_periodicals_and_newspapers",
                "bowling_alleys",
                "bus_lines",
                "business_secretarial_schools",
                "buying_shopping_services",
                "cable_satellite_and_other_pay_television_and_radio",
                "camera_and_photographic_supply_stores",
                "candy_nut_and_confectionery_stores",
                "car_and_truck_dealers_new_used",
                "car_and_truck_dealers_used_only",
                "car_rental_agencies",
                "car_washes",
                "carpentry_services",
                "carpet_upholstery_cleaning",
                "caterers",
                "charitable_and_social_service_organizations_fundraising",
                "chemicals_and_allied_products",
                "child_care_services",
                "childrens_and_infants_wear_stores",
                "chiropodists_podiatrists",
                "chiropractors",
                "cigar_stores_and_stands",
                "civic_social_fraternal_associations",
                "cleaning_and_maintenance",
                "clothing_rental",
                "colleges_universities",
                "commercial_equipment",
                "commercial_footwear",
                "commercial_photography_art_and_graphics",
                "commuter_transport_and_ferries",
                "computer_network_services",
                "computer_programming",
                "computer_repair",
                "computer_software_stores",
                "computers_peripherals_and_software",
                "concrete_work_services",
                "construction_materials",
                "consulting_public_relations",
                "correspondence_schools",
                "cosmetic_stores",
                "counseling_services",
                "country_clubs",
                "courier_services",
                "court_costs",
                "credit_reporting_agencies",
                "cruise_lines",
                "dairy_products_stores",
                "dance_hall_studios_schools",
                "dating_escort_services",
                "dentists_orthodontists",
                "department_stores",
                "detective_agencies",
                "digital_goods_applications",
                "digital_goods_games",
                "digital_goods_large_volume",
                "digital_goods_media",
                "direct_marketing_catalog_merchant",
                "direct_marketing_combination_catalog_and_retail_merchant",
                "direct_marketing_inbound_telemarketing",
                "direct_marketing_insurance_services",
                "direct_marketing_other",
                "direct_marketing_outbound_telemarketing",
                "direct_marketing_subscription",
                "direct_marketing_travel",
                "discount_stores",
                "doctors",
                "door_to_door_sales",
                "drapery_window_covering_and_upholstery_stores",
                "drinking_places",
                "drug_stores_and_pharmacies",
                "drugs_drug_proprietaries_and_druggist_sundries",
                "dry_cleaners",
                "durable_goods",
                "duty_free_stores",
                "eating_places_restaurants",
                "educational_services",
                "electric_razor_stores",
                "electrical_parts_and_equipment",
                "electrical_services",
                "electronics_repair_shops",
                "electronics_stores",
                "elementary_secondary_schools",
                "employment_temp_agencies",
                "equipment_rental",
                "exterminating_services",
                "family_clothing_stores",
                "fast_food_restaurants",
                "financial_institutions",
                "fines_government_administrative_entities",
                "fireplace_fireplace_screens_and_accessories_stores",
                "floor_covering_stores",
                "florists",
                "florists_supplies_nursery_stock_and_flowers",
                "freezer_and_locker_meat_provisioners",
                "fuel_dealers_non_automotive",
                "funeral_services_crematories",
                "furniture_home_furnishings_and_equipment_stores_except_appliances",
                "furniture_repair_refinishing",
                "furriers_and_fur_shops",
                "general_services",
                "gift_card_novelty_and_souvenir_shops",
                "glass_paint_and_wallpaper_stores",
                "glassware_crystal_stores",
                "golf_courses_public",
                "government_services",
                "grocery_stores_supermarkets",
                "hardware_equipment_and_supplies",
                "hardware_stores",
                "health_and_beauty_spas",
                "hearing_aids_sales_and_supplies",
                "heating_plumbing_a_c",
                "hobby_toy_and_game_shops",
                "home_supply_warehouse_stores",
                "hospitals",
                "hotels_motels_and_resorts",
                "household_appliance_stores",
                "industrial_supplies",
                "information_retrieval_services",
                "insurance_default",
                "insurance_underwriting_premiums",
                "intra_company_purchases",
                "jewelry_stores_watches_clocks_and_silverware_stores",
                "landscaping_services",
                "laundries",
                "laundry_cleaning_services",
                "legal_services_attorneys",
                "luggage_and_leather_goods_stores",
                "lumber_building_materials_stores",
                "manual_cash_disburse",
                "marinas_service_and_supplies",
                "masonry_stonework_and_plaster",
                "massage_parlors",
                "medical_and_dental_labs",
                "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
                "medical_services",
                "membership_organizations",
                "mens_and_boys_clothing_and_accessories_stores",
                "mens_womens_clothing_stores",
                "metal_service_centers",
                "miscellaneous",
                "miscellaneous_apparel_and_accessory_shops",
                "miscellaneous_auto_dealers",
                "miscellaneous_business_services",
                "miscellaneous_food_stores",
                "miscellaneous_general_merchandise",
                "miscellaneous_general_services",
                "miscellaneous_home_furnishing_specialty_stores",
                "miscellaneous_publishing_and_printing",
                "miscellaneous_recreation_services",
                "miscellaneous_repair_shops",
                "miscellaneous_specialty_retail",
                "mobile_home_dealers",
                "motion_picture_theaters",
                "motor_freight_carriers_and_trucking",
                "motor_homes_dealers",
                "motor_vehicle_supplies_and_new_parts",
                "motorcycle_shops_and_dealers",
                "motorcycle_shops_dealers",
                "music_stores_musical_instruments_pianos_and_sheet_music",
                "news_dealers_and_newsstands",
                "non_fi_money_orders",
                "non_fi_stored_value_card_purchase_load",
                "nondurable_goods",
                "nurseries_lawn_and_garden_supply_stores",
                "nursing_personal_care",
                "office_and_commercial_furniture",
                "opticians_eyeglasses",
                "optometrists_ophthalmologist",
                "orthopedic_goods_prosthetic_devices",
                "osteopaths",
                "package_stores_beer_wine_and_liquor",
                "paints_varnishes_and_supplies",
                "parking_lots_garages",
                "passenger_railways",
                "pawn_shops",
                "pet_shops_pet_food_and_supplies",
                "petroleum_and_petroleum_products",
                "photo_developing",
                "photographic_photocopy_microfilm_equipment_and_supplies",
                "photographic_studios",
                "picture_video_production",
                "piece_goods_notions_and_other_dry_goods",
                "plumbing_heating_equipment_and_supplies",
                "political_organizations",
                "postal_services_government_only",
                "precious_stones_and_metals_watches_and_jewelry",
                "professional_services",
                "public_warehousing_and_storage",
                "quick_copy_repro_and_blueprint",
                "railroads",
                "real_estate_agents_and_managers_rentals",
                "record_stores",
                "recreational_vehicle_rentals",
                "religious_goods_stores",
                "religious_organizations",
                "roofing_siding_sheet_metal",
                "secretarial_support_services",
                "security_brokers_dealers",
                "service_stations",
                "sewing_needlework_fabric_and_piece_goods_stores",
                "shoe_repair_hat_cleaning",
                "shoe_stores",
                "small_appliance_repair",
                "snowmobile_dealers",
                "special_trade_services",
                "specialty_cleaning",
                "sporting_goods_stores",
                "sporting_recreation_camps",
                "sports_and_riding_apparel_stores",
                "sports_clubs_fields",
                "stamp_and_coin_stores",
                "stationary_office_supplies_printing_and_writing_paper",
                "stationery_stores_office_and_school_supply_stores",
                "swimming_pools_sales",
                "t_ui_travel_germany",
                "tailors_alterations",
                "tax_payments_government_agencies",
                "tax_preparation_services",
                "taxicabs_limousines",
                "telecommunication_equipment_and_telephone_sales",
                "telecommunication_services",
                "telegraph_services",
                "tent_and_awning_shops",
                "testing_laboratories",
                "theatrical_ticket_agencies",
                "timeshares",
                "tire_retreading_and_repair",
                "tolls_bridge_fees",
                "tourist_attractions_and_exhibits",
                "towing_services",
                "trailer_parks_campgrounds",
                "transportation_services",
                "travel_agencies_tour_operators",
                "truck_stop_iteration",
                "truck_utility_trailer_rentals",
                "typesetting_plate_making_and_related_services",
                "typewriter_stores",
                "u_s_federal_government_agencies_or_departments",
                "uniforms_commercial_clothing",
                "used_merchandise_and_secondhand_stores",
                "utilities",
                "variety_stores",
                "veterinary_services",
                "video_amusement_game_supplies",
                "video_game_arcades",
                "video_tape_rental_stores",
                "vocational_trade_schools",
                "watch_jewelry_repair",
                "welding_repair",
                "wholesale_clubs",
                "wig_and_toupee_stores",
                "wires_money_orders",
                "womens_accessory_and_specialty_shops",
                "womens_ready_to_wear_stores",
                "wrecking_and_salvage_yards"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "spending_limits": {
            "description": "Limit spending with amount-based rules that apply across any cards this card replaced (i.e., its `replacement_for` card and _that_ card's `replacement_for` card, up the chain).",
            "items": {
              "$ref": "#/components/schemas/issuing_card_spending_limit"
            },
            "nullable": true,
            "type": "array"
          },
          "spending_limits_currency": {
            "description": "Currency of the amounts within `spending_limits`. Always the same as the currency of the card.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "IssuingCardAuthorizationControls",
        "type": "object",
        "x-expandableFields": [
          "spending_limits"
        ]
      },
      "status": {
        "description": "Whether authorizations can be approved on this card.",
        "enum": [
          "active",
          "canceled",
          "inactive"
        ],
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "type": {
        "description": "The type of the card.",
        "enum": [
          "physical",
          "virtual"
        ],
        "type": "string"
      },
      "wallets": [
        {
          "description": "",
          "properties": {
            "apple_pay": {
              "$ref": "#/components/schemas/issuing_card_apple_pay"
            },
            "google_pay": {
              "$ref": "#/components/schemas/issuing_card_google_pay"
            },
            "primary_account_identifier": {
              "description": "Unique identifier for a card used with digital wallets",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "apple_pay",
            "google_pay"
          ],
          "title": "IssuingCardWallets",
          "type": "object",
          "x-expandableFields": [
            "apple_pay",
            "google_pay"
          ]
        }
      ]
    },
    "required": [
      "brand",
      "cardholder",
      "created",
      "currency",
      "exp_month",
      "exp_year",
      "id",
      "last4",
      "livemode",
      "metadata",
      "object",
      "spending_controls",
      "status",
      "type"
    ],
    "title": "IssuingCard",
    "type": "object",
    "x-expandableFields": [
      "cardholder",
      "replaced_by",
      "replacement_for",
      "shipping",
      "spending_controls",
      "wallets"
    ],
    "x-resourceId": "issuing.card"
  },
  "issuing_cardholder": {
    "description": "An Issuing `Cardholder` object represents an individual or business entity who is [issued](https://stripe.com/docs/issuing) cards.\n\nRelated guide: [How to create a Cardholder](https://stripe.com/docs/issuing/cards#create-cardholder)",
    "properties": {
      "billing": {
        "description": "",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          }
        },
        "required": [
          "address"
        ],
        "title": "IssuingCardholderAddress",
        "type": "object",
        "x-expandableFields": [
          "address"
        ]
      },
      "company": [
        {
          "description": "",
          "properties": {
            "tax_id_provided": {
              "description": "Whether the company's business ID number was provided.",
              "type": "boolean"
            }
          },
          "required": [
            "tax_id_provided"
          ],
          "title": "IssuingCardholderCompany",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "email": {
        "description": "The cardholder's email address.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "individual": [
        {
          "description": "",
          "properties": {
            "dob": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_cardholder_individual_dob"
                }
              ],
              "description": "The date of birth of this cardholder.",
              "nullable": true
            },
            "first_name": {
              "description": "The first name of this cardholder.",
              "maxLength": 5000,
              "type": "string"
            },
            "last_name": {
              "description": "The last name of this cardholder.",
              "maxLength": 5000,
              "type": "string"
            },
            "verification": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_cardholder_verification"
                }
              ],
              "description": "Government-issued ID document for this cardholder.",
              "nullable": true
            }
          },
          "required": [
            "first_name",
            "last_name"
          ],
          "title": "IssuingCardholderIndividual",
          "type": "object",
          "x-expandableFields": [
            "dob",
            "verification"
          ]
        }
      ],
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "name": {
        "description": "The cardholder's name. This will be printed on cards issued to them.",
        "maxLength": 5000,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "issuing.cardholder"
        ],
        "type": "string"
      },
      "phone_number": {
        "description": "The cardholder's phone number. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure#when-is-3d-secure-applied) for more details.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "requirements": {
        "description": "",
        "properties": {
          "disabled_reason": {
            "description": "If `disabled_reason` is present, all cards will decline authorizations with `cardholder_verification_required` reason.",
            "enum": [
              "listed",
              "rejected.listed",
              "under_review"
            ],
            "nullable": true,
            "type": "string"
          },
          "past_due": {
            "description": "Array of fields that need to be collected in order to verify and re-enable the cardholder.",
            "items": {
              "enum": [
                "company.tax_id",
                "individual.dob.day",
                "individual.dob.month",
                "individual.dob.year",
                "individual.first_name",
                "individual.last_name",
                "individual.verification.document"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "IssuingCardholderRequirements",
        "type": "object",
        "x-expandableFields": []
      },
      "spending_controls": [
        {
          "description": "",
          "properties": {
            "allowed_categories": {
              "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to allow. All other categories will be blocked. Cannot be set with `blocked_categories`.",
              "items": {
                "enum": [
                  "ac_refrigeration_repair",
                  "accounting_bookkeeping_services",
                  "advertising_services",
                  "agricultural_cooperative",
                  "airlines_air_carriers",
                  "airports_flying_fields",
                  "ambulance_services",
                  "amusement_parks_carnivals",
                  "antique_reproductions",
                  "antique_shops",
                  "aquariums",
                  "architectural_surveying_services",
                  "art_dealers_and_galleries",
                  "artists_supply_and_craft_shops",
                  "auto_and_home_supply_stores",
                  "auto_body_repair_shops",
                  "auto_paint_shops",
                  "auto_service_shops",
                  "automated_cash_disburse",
                  "automated_fuel_dispensers",
                  "automobile_associations",
                  "automotive_parts_and_accessories_stores",
                  "automotive_tire_stores",
                  "bail_and_bond_payments",
                  "bakeries",
                  "bands_orchestras",
                  "barber_and_beauty_shops",
                  "betting_casino_gambling",
                  "bicycle_shops",
                  "billiard_pool_establishments",
                  "boat_dealers",
                  "boat_rentals_and_leases",
                  "book_stores",
                  "books_periodicals_and_newspapers",
                  "bowling_alleys",
                  "bus_lines",
                  "business_secretarial_schools",
                  "buying_shopping_services",
                  "cable_satellite_and_other_pay_television_and_radio",
                  "camera_and_photographic_supply_stores",
                  "candy_nut_and_confectionery_stores",
                  "car_and_truck_dealers_new_used",
                  "car_and_truck_dealers_used_only",
                  "car_rental_agencies",
                  "car_washes",
                  "carpentry_services",
                  "carpet_upholstery_cleaning",
                  "caterers",
                  "charitable_and_social_service_organizations_fundraising",
                  "chemicals_and_allied_products",
                  "child_care_services",
                  "childrens_and_infants_wear_stores",
                  "chiropodists_podiatrists",
                  "chiropractors",
                  "cigar_stores_and_stands",
                  "civic_social_fraternal_associations",
                  "cleaning_and_maintenance",
                  "clothing_rental",
                  "colleges_universities",
                  "commercial_equipment",
                  "commercial_footwear",
                  "commercial_photography_art_and_graphics",
                  "commuter_transport_and_ferries",
                  "computer_network_services",
                  "computer_programming",
                  "computer_repair",
                  "computer_software_stores",
                  "computers_peripherals_and_software",
                  "concrete_work_services",
                  "construction_materials",
                  "consulting_public_relations",
                  "correspondence_schools",
                  "cosmetic_stores",
                  "counseling_services",
                  "country_clubs",
                  "courier_services",
                  "court_costs",
                  "credit_reporting_agencies",
                  "cruise_lines",
                  "dairy_products_stores",
                  "dance_hall_studios_schools",
                  "dating_escort_services",
                  "dentists_orthodontists",
                  "department_stores",
                  "detective_agencies",
                  "digital_goods_applications",
                  "digital_goods_games",
                  "digital_goods_large_volume",
                  "digital_goods_media",
                  "direct_marketing_catalog_merchant",
                  "direct_marketing_combination_catalog_and_retail_merchant",
                  "direct_marketing_inbound_telemarketing",
                  "direct_marketing_insurance_services",
                  "direct_marketing_other",
                  "direct_marketing_outbound_telemarketing",
                  "direct_marketing_subscription",
                  "direct_marketing_travel",
                  "discount_stores",
                  "doctors",
                  "door_to_door_sales",
                  "drapery_window_covering_and_upholstery_stores",
                  "drinking_places",
                  "drug_stores_and_pharmacies",
                  "drugs_drug_proprietaries_and_druggist_sundries",
                  "dry_cleaners",
                  "durable_goods",
                  "duty_free_stores",
                  "eating_places_restaurants",
                  "educational_services",
                  "electric_razor_stores",
                  "electrical_parts_and_equipment",
                  "electrical_services",
                  "electronics_repair_shops",
                  "electronics_stores",
                  "elementary_secondary_schools",
                  "employment_temp_agencies",
                  "equipment_rental",
                  "exterminating_services",
                  "family_clothing_stores",
                  "fast_food_restaurants",
                  "financial_institutions",
                  "fines_government_administrative_entities",
                  "fireplace_fireplace_screens_and_accessories_stores",
                  "floor_covering_stores",
                  "florists",
                  "florists_supplies_nursery_stock_and_flowers",
                  "freezer_and_locker_meat_provisioners",
                  "fuel_dealers_non_automotive",
                  "funeral_services_crematories",
                  "furniture_home_furnishings_and_equipment_stores_except_appliances",
                  "furniture_repair_refinishing",
                  "furriers_and_fur_shops",
                  "general_services",
                  "gift_card_novelty_and_souvenir_shops",
                  "glass_paint_and_wallpaper_stores",
                  "glassware_crystal_stores",
                  "golf_courses_public",
                  "government_services",
                  "grocery_stores_supermarkets",
                  "hardware_equipment_and_supplies",
                  "hardware_stores",
                  "health_and_beauty_spas",
                  "hearing_aids_sales_and_supplies",
                  "heating_plumbing_a_c",
                  "hobby_toy_and_game_shops",
                  "home_supply_warehouse_stores",
                  "hospitals",
                  "hotels_motels_and_resorts",
                  "household_appliance_stores",
                  "industrial_supplies",
                  "information_retrieval_services",
                  "insurance_default",
                  "insurance_underwriting_premiums",
                  "intra_company_purchases",
                  "jewelry_stores_watches_clocks_and_silverware_stores",
                  "landscaping_services",
                  "laundries",
                  "laundry_cleaning_services",
                  "legal_services_attorneys",
                  "luggage_and_leather_goods_stores",
                  "lumber_building_materials_stores",
                  "manual_cash_disburse",
                  "marinas_service_and_supplies",
                  "masonry_stonework_and_plaster",
                  "massage_parlors",
                  "medical_and_dental_labs",
                  "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
                  "medical_services",
                  "membership_organizations",
                  "mens_and_boys_clothing_and_accessories_stores",
                  "mens_womens_clothing_stores",
                  "metal_service_centers",
                  "miscellaneous",
                  "miscellaneous_apparel_and_accessory_shops",
                  "miscellaneous_auto_dealers",
                  "miscellaneous_business_services",
                  "miscellaneous_food_stores",
                  "miscellaneous_general_merchandise",
                  "miscellaneous_general_services",
                  "miscellaneous_home_furnishing_specialty_stores",
                  "miscellaneous_publishing_and_printing",
                  "miscellaneous_recreation_services",
                  "miscellaneous_repair_shops",
                  "miscellaneous_specialty_retail",
                  "mobile_home_dealers",
                  "motion_picture_theaters",
                  "motor_freight_carriers_and_trucking",
                  "motor_homes_dealers",
                  "motor_vehicle_supplies_and_new_parts",
                  "motorcycle_shops_and_dealers",
                  "motorcycle_shops_dealers",
                  "music_stores_musical_instruments_pianos_and_sheet_music",
                  "news_dealers_and_newsstands",
                  "non_fi_money_orders",
                  "non_fi_stored_value_card_purchase_load",
                  "nondurable_goods",
                  "nurseries_lawn_and_garden_supply_stores",
                  "nursing_personal_care",
                  "office_and_commercial_furniture",
                  "opticians_eyeglasses",
                  "optometrists_ophthalmologist",
                  "orthopedic_goods_prosthetic_devices",
                  "osteopaths",
                  "package_stores_beer_wine_and_liquor",
                  "paints_varnishes_and_supplies",
                  "parking_lots_garages",
                  "passenger_railways",
                  "pawn_shops",
                  "pet_shops_pet_food_and_supplies",
                  "petroleum_and_petroleum_products",
                  "photo_developing",
                  "photographic_photocopy_microfilm_equipment_and_supplies",
                  "photographic_studios",
                  "picture_video_production",
                  "piece_goods_notions_and_other_dry_goods",
                  "plumbing_heating_equipment_and_supplies",
                  "political_organizations",
                  "postal_services_government_only",
                  "precious_stones_and_metals_watches_and_jewelry",
                  "professional_services",
                  "public_warehousing_and_storage",
                  "quick_copy_repro_and_blueprint",
                  "railroads",
                  "real_estate_agents_and_managers_rentals",
                  "record_stores",
                  "recreational_vehicle_rentals",
                  "religious_goods_stores",
                  "religious_organizations",
                  "roofing_siding_sheet_metal",
                  "secretarial_support_services",
                  "security_brokers_dealers",
                  "service_stations",
                  "sewing_needlework_fabric_and_piece_goods_stores",
                  "shoe_repair_hat_cleaning",
                  "shoe_stores",
                  "small_appliance_repair",
                  "snowmobile_dealers",
                  "special_trade_services",
                  "specialty_cleaning",
                  "sporting_goods_stores",
                  "sporting_recreation_camps",
                  "sports_and_riding_apparel_stores",
                  "sports_clubs_fields",
                  "stamp_and_coin_stores",
                  "stationary_office_supplies_printing_and_writing_paper",
                  "stationery_stores_office_and_school_supply_stores",
                  "swimming_pools_sales",
                  "t_ui_travel_germany",
                  "tailors_alterations",
                  "tax_payments_government_agencies",
                  "tax_preparation_services",
                  "taxicabs_limousines",
                  "telecommunication_equipment_and_telephone_sales",
                  "telecommunication_services",
                  "telegraph_services",
                  "tent_and_awning_shops",
                  "testing_laboratories",
                  "theatrical_ticket_agencies",
                  "timeshares",
                  "tire_retreading_and_repair",
                  "tolls_bridge_fees",
                  "tourist_attractions_and_exhibits",
                  "towing_services",
                  "trailer_parks_campgrounds",
                  "transportation_services",
                  "travel_agencies_tour_operators",
                  "truck_stop_iteration",
                  "truck_utility_trailer_rentals",
                  "typesetting_plate_making_and_related_services",
                  "typewriter_stores",
                  "u_s_federal_government_agencies_or_departments",
                  "uniforms_commercial_clothing",
                  "used_merchandise_and_secondhand_stores",
                  "utilities",
                  "variety_stores",
                  "veterinary_services",
                  "video_amusement_game_supplies",
                  "video_game_arcades",
                  "video_tape_rental_stores",
                  "vocational_trade_schools",
                  "watch_jewelry_repair",
                  "welding_repair",
                  "wholesale_clubs",
                  "wig_and_toupee_stores",
                  "wires_money_orders",
                  "womens_accessory_and_specialty_shops",
                  "womens_ready_to_wear_stores",
                  "wrecking_and_salvage_yards"
                ],
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "blocked_categories": {
              "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to decline. All other categories will be allowed. Cannot be set with `allowed_categories`.",
              "items": {
                "enum": [
                  "ac_refrigeration_repair",
                  "accounting_bookkeeping_services",
                  "advertising_services",
                  "agricultural_cooperative",
                  "airlines_air_carriers",
                  "airports_flying_fields",
                  "ambulance_services",
                  "amusement_parks_carnivals",
                  "antique_reproductions",
                  "antique_shops",
                  "aquariums",
                  "architectural_surveying_services",
                  "art_dealers_and_galleries",
                  "artists_supply_and_craft_shops",
                  "auto_and_home_supply_stores",
                  "auto_body_repair_shops",
                  "auto_paint_shops",
                  "auto_service_shops",
                  "automated_cash_disburse",
                  "automated_fuel_dispensers",
                  "automobile_associations",
                  "automotive_parts_and_accessories_stores",
                  "automotive_tire_stores",
                  "bail_and_bond_payments",
                  "bakeries",
                  "bands_orchestras",
                  "barber_and_beauty_shops",
                  "betting_casino_gambling",
                  "bicycle_shops",
                  "billiard_pool_establishments",
                  "boat_dealers",
                  "boat_rentals_and_leases",
                  "book_stores",
                  "books_periodicals_and_newspapers",
                  "bowling_alleys",
                  "bus_lines",
                  "business_secretarial_schools",
                  "buying_shopping_services",
                  "cable_satellite_and_other_pay_television_and_radio",
                  "camera_and_photographic_supply_stores",
                  "candy_nut_and_confectionery_stores",
                  "car_and_truck_dealers_new_used",
                  "car_and_truck_dealers_used_only",
                  "car_rental_agencies",
                  "car_washes",
                  "carpentry_services",
                  "carpet_upholstery_cleaning",
                  "caterers",
                  "charitable_and_social_service_organizations_fundraising",
                  "chemicals_and_allied_products",
                  "child_care_services",
                  "childrens_and_infants_wear_stores",
                  "chiropodists_podiatrists",
                  "chiropractors",
                  "cigar_stores_and_stands",
                  "civic_social_fraternal_associations",
                  "cleaning_and_maintenance",
                  "clothing_rental",
                  "colleges_universities",
                  "commercial_equipment",
                  "commercial_footwear",
                  "commercial_photography_art_and_graphics",
                  "commuter_transport_and_ferries",
                  "computer_network_services",
                  "computer_programming",
                  "computer_repair",
                  "computer_software_stores",
                  "computers_peripherals_and_software",
                  "concrete_work_services",
                  "construction_materials",
                  "consulting_public_relations",
                  "correspondence_schools",
                  "cosmetic_stores",
                  "counseling_services",
                  "country_clubs",
                  "courier_services",
                  "court_costs",
                  "credit_reporting_agencies",
                  "cruise_lines",
                  "dairy_products_stores",
                  "dance_hall_studios_schools",
                  "dating_escort_services",
                  "dentists_orthodontists",
                  "department_stores",
                  "detective_agencies",
                  "digital_goods_applications",
                  "digital_goods_games",
                  "digital_goods_large_volume",
                  "digital_goods_media",
                  "direct_marketing_catalog_merchant",
                  "direct_marketing_combination_catalog_and_retail_merchant",
                  "direct_marketing_inbound_telemarketing",
                  "direct_marketing_insurance_services",
                  "direct_marketing_other",
                  "direct_marketing_outbound_telemarketing",
                  "direct_marketing_subscription",
                  "direct_marketing_travel",
                  "discount_stores",
                  "doctors",
                  "door_to_door_sales",
                  "drapery_window_covering_and_upholstery_stores",
                  "drinking_places",
                  "drug_stores_and_pharmacies",
                  "drugs_drug_proprietaries_and_druggist_sundries",
                  "dry_cleaners",
                  "durable_goods",
                  "duty_free_stores",
                  "eating_places_restaurants",
                  "educational_services",
                  "electric_razor_stores",
                  "electrical_parts_and_equipment",
                  "electrical_services",
                  "electronics_repair_shops",
                  "electronics_stores",
                  "elementary_secondary_schools",
                  "employment_temp_agencies",
                  "equipment_rental",
                  "exterminating_services",
                  "family_clothing_stores",
                  "fast_food_restaurants",
                  "financial_institutions",
                  "fines_government_administrative_entities",
                  "fireplace_fireplace_screens_and_accessories_stores",
                  "floor_covering_stores",
                  "florists",
                  "florists_supplies_nursery_stock_and_flowers",
                  "freezer_and_locker_meat_provisioners",
                  "fuel_dealers_non_automotive",
                  "funeral_services_crematories",
                  "furniture_home_furnishings_and_equipment_stores_except_appliances",
                  "furniture_repair_refinishing",
                  "furriers_and_fur_shops",
                  "general_services",
                  "gift_card_novelty_and_souvenir_shops",
                  "glass_paint_and_wallpaper_stores",
                  "glassware_crystal_stores",
                  "golf_courses_public",
                  "government_services",
                  "grocery_stores_supermarkets",
                  "hardware_equipment_and_supplies",
                  "hardware_stores",
                  "health_and_beauty_spas",
                  "hearing_aids_sales_and_supplies",
                  "heating_plumbing_a_c",
                  "hobby_toy_and_game_shops",
                  "home_supply_warehouse_stores",
                  "hospitals",
                  "hotels_motels_and_resorts",
                  "household_appliance_stores",
                  "industrial_supplies",
                  "information_retrieval_services",
                  "insurance_default",
                  "insurance_underwriting_premiums",
                  "intra_company_purchases",
                  "jewelry_stores_watches_clocks_and_silverware_stores",
                  "landscaping_services",
                  "laundries",
                  "laundry_cleaning_services",
                  "legal_services_attorneys",
                  "luggage_and_leather_goods_stores",
                  "lumber_building_materials_stores",
                  "manual_cash_disburse",
                  "marinas_service_and_supplies",
                  "masonry_stonework_and_plaster",
                  "massage_parlors",
                  "medical_and_dental_labs",
                  "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
                  "medical_services",
                  "membership_organizations",
                  "mens_and_boys_clothing_and_accessories_stores",
                  "mens_womens_clothing_stores",
                  "metal_service_centers",
                  "miscellaneous",
                  "miscellaneous_apparel_and_accessory_shops",
                  "miscellaneous_auto_dealers",
                  "miscellaneous_business_services",
                  "miscellaneous_food_stores",
                  "miscellaneous_general_merchandise",
                  "miscellaneous_general_services",
                  "miscellaneous_home_furnishing_specialty_stores",
                  "miscellaneous_publishing_and_printing",
                  "miscellaneous_recreation_services",
                  "miscellaneous_repair_shops",
                  "miscellaneous_specialty_retail",
                  "mobile_home_dealers",
                  "motion_picture_theaters",
                  "motor_freight_carriers_and_trucking",
                  "motor_homes_dealers",
                  "motor_vehicle_supplies_and_new_parts",
                  "motorcycle_shops_and_dealers",
                  "motorcycle_shops_dealers",
                  "music_stores_musical_instruments_pianos_and_sheet_music",
                  "news_dealers_and_newsstands",
                  "non_fi_money_orders",
                  "non_fi_stored_value_card_purchase_load",
                  "nondurable_goods",
                  "nurseries_lawn_and_garden_supply_stores",
                  "nursing_personal_care",
                  "office_and_commercial_furniture",
                  "opticians_eyeglasses",
                  "optometrists_ophthalmologist",
                  "orthopedic_goods_prosthetic_devices",
                  "osteopaths",
                  "package_stores_beer_wine_and_liquor",
                  "paints_varnishes_and_supplies",
                  "parking_lots_garages",
                  "passenger_railways",
                  "pawn_shops",
                  "pet_shops_pet_food_and_supplies",
                  "petroleum_and_petroleum_products",
                  "photo_developing",
                  "photographic_photocopy_microfilm_equipment_and_supplies",
                  "photographic_studios",
                  "picture_video_production",
                  "piece_goods_notions_and_other_dry_goods",
                  "plumbing_heating_equipment_and_supplies",
                  "political_organizations",
                  "postal_services_government_only",
                  "precious_stones_and_metals_watches_and_jewelry",
                  "professional_services",
                  "public_warehousing_and_storage",
                  "quick_copy_repro_and_blueprint",
                  "railroads",
                  "real_estate_agents_and_managers_rentals",
                  "record_stores",
                  "recreational_vehicle_rentals",
                  "religious_goods_stores",
                  "religious_organizations",
                  "roofing_siding_sheet_metal",
                  "secretarial_support_services",
                  "security_brokers_dealers",
                  "service_stations",
                  "sewing_needlework_fabric_and_piece_goods_stores",
                  "shoe_repair_hat_cleaning",
                  "shoe_stores",
                  "small_appliance_repair",
                  "snowmobile_dealers",
                  "special_trade_services",
                  "specialty_cleaning",
                  "sporting_goods_stores",
                  "sporting_recreation_camps",
                  "sports_and_riding_apparel_stores",
                  "sports_clubs_fields",
                  "stamp_and_coin_stores",
                  "stationary_office_supplies_printing_and_writing_paper",
                  "stationery_stores_office_and_school_supply_stores",
                  "swimming_pools_sales",
                  "t_ui_travel_germany",
                  "tailors_alterations",
                  "tax_payments_government_agencies",
                  "tax_preparation_services",
                  "taxicabs_limousines",
                  "telecommunication_equipment_and_telephone_sales",
                  "telecommunication_services",
                  "telegraph_services",
                  "tent_and_awning_shops",
                  "testing_laboratories",
                  "theatrical_ticket_agencies",
                  "timeshares",
                  "tire_retreading_and_repair",
                  "tolls_bridge_fees",
                  "tourist_attractions_and_exhibits",
                  "towing_services",
                  "trailer_parks_campgrounds",
                  "transportation_services",
                  "travel_agencies_tour_operators",
                  "truck_stop_iteration",
                  "truck_utility_trailer_rentals",
                  "typesetting_plate_making_and_related_services",
                  "typewriter_stores",
                  "u_s_federal_government_agencies_or_departments",
                  "uniforms_commercial_clothing",
                  "used_merchandise_and_secondhand_stores",
                  "utilities",
                  "variety_stores",
                  "veterinary_services",
                  "video_amusement_game_supplies",
                  "video_game_arcades",
                  "video_tape_rental_stores",
                  "vocational_trade_schools",
                  "watch_jewelry_repair",
                  "welding_repair",
                  "wholesale_clubs",
                  "wig_and_toupee_stores",
                  "wires_money_orders",
                  "womens_accessory_and_specialty_shops",
                  "womens_ready_to_wear_stores",
                  "wrecking_and_salvage_yards"
                ],
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "spending_limits": {
              "description": "Limit spending with amount-based rules that apply across this cardholder's cards.",
              "items": {
                "$ref": "#/components/schemas/issuing_cardholder_spending_limit"
              },
              "nullable": true,
              "type": "array"
            },
            "spending_limits_currency": {
              "description": "Currency of the amounts within `spending_limits`.",
              "nullable": true,
              "type": "string"
            }
          },
          "title": "IssuingCardholderAuthorizationControls",
          "type": "object",
          "x-expandableFields": [
            "spending_limits"
          ]
        }
      ],
      "status": {
        "description": "Specifies whether to permit authorizations on this cardholder's cards.",
        "enum": [
          "active",
          "blocked",
          "inactive"
        ],
        "type": "string"
      },
      "type": {
        "description": "One of `individual` or `company`.",
        "enum": [
          "company",
          "individual"
        ],
        "type": "string",
        "x-stripeBypassValidation": true
      }
    },
    "required": [
      "billing",
      "created",
      "id",
      "livemode",
      "metadata",
      "name",
      "object",
      "requirements",
      "status",
      "type"
    ],
    "title": "IssuingCardholder",
    "type": "object",
    "x-expandableFields": [
      "billing",
      "company",
      "individual",
      "requirements",
      "spending_controls"
    ],
    "x-resourceId": "issuing.cardholder"
  },
  "issuing_dispute": {
    "description": "As a [card issuer](https://stripe.com/docs/issuing), you can dispute transactions that the cardholder does not recognize, suspects to be fraudulent, or has other issues with.\n\nRelated guide: [Disputing Transactions](https://stripe.com/docs/issuing/purchases/disputes)",
    "properties": {
      "amount": {
        "description": "Disputed amount in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). Usually the amount of the `transaction`, but can differ (usually because of currency fluctuation).",
        "type": "integer"
      },
      "balance_transactions": {
        "description": "List of balance transactions associated with the dispute.",
        "items": {
          "description": "Balance transactions represent funds moving through your Stripe account.\nThey're created for every type of transaction that comes into or flows out of your Stripe account balance.\n\nRelated guide: [Balance Transaction Types](https://stripe.com/docs/reports/balance-transaction-types).",
          "properties": {
            "amount": {
              "description": "Gross amount of the transaction, in %s.",
              "type": "integer"
            },
            "available_on": {
              "description": "The date the transaction's net funds will become available in the Stripe balance.",
              "format": "unix-time",
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exchange_rate": {
              "description": "The exchange rate used, if applicable, for this transaction. Specifically, if money was converted from currency A to currency B, then the `amount` in currency A, times `exchange_rate`, would be the `amount` in currency B. For example, suppose you charged a customer 10.00 EUR. Then the PaymentIntent's `amount` would be `1000` and `currency` would be `eur`. Suppose this was converted into 12.34 USD in your Stripe account. Then the BalanceTransaction's `amount` would be `1234`, `currency` would be `usd`, and `exchange_rate` would be `1.234`.",
              "nullable": true,
              "type": "number"
            },
            "fee": {
              "description": "Fees (in %s) paid for this transaction.",
              "type": "integer"
            },
            "fee_details": {
              "description": "Detailed breakdown of fees (in %s) paid for this transaction.",
              "items": {
                "$ref": "#/components/schemas/fee"
              },
              "type": "array"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "net": {
              "description": "Net amount of the transaction, in %s.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "balance_transaction"
              ],
              "type": "string"
            },
            "reporting_category": {
              "description": "[Learn more](https://stripe.com/docs/reports/reporting-categories) about how reporting categories can help you understand balance transactions from an accounting perspective.",
              "maxLength": 5000,
              "type": "string"
            },
            "source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                },
                {
                  "$ref": "#/components/schemas/charge"
                },
                {
                  "$ref": "#/components/schemas/connect_collection_transfer"
                },
                {
                  "$ref": "#/components/schemas/dispute"
                },
                {
                  "$ref": "#/components/schemas/fee_refund"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                },
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                },
                {
                  "$ref": "#/components/schemas/payout"
                },
                {
                  "$ref": "#/components/schemas/platform_tax_fee"
                },
                {
                  "$ref": "#/components/schemas/refund"
                },
                {
                  "$ref": "#/components/schemas/reserve_transaction"
                },
                {
                  "$ref": "#/components/schemas/tax_deducted_at_source"
                },
                {
                  "$ref": "#/components/schemas/topup"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ],
              "description": "The Stripe object to which this transaction is related.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  },
                  {
                    "$ref": "#/components/schemas/charge"
                  },
                  {
                    "$ref": "#/components/schemas/connect_collection_transfer"
                  },
                  {
                    "$ref": "#/components/schemas/dispute"
                  },
                  {
                    "$ref": "#/components/schemas/fee_refund"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.authorization"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.dispute"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.transaction"
                  },
                  {
                    "$ref": "#/components/schemas/payout"
                  },
                  {
                    "$ref": "#/components/schemas/platform_tax_fee"
                  },
                  {
                    "$ref": "#/components/schemas/refund"
                  },
                  {
                    "$ref": "#/components/schemas/reserve_transaction"
                  },
                  {
                    "$ref": "#/components/schemas/tax_deducted_at_source"
                  },
                  {
                    "$ref": "#/components/schemas/topup"
                  },
                  {
                    "$ref": "#/components/schemas/transfer"
                  },
                  {
                    "$ref": "#/components/schemas/transfer_reversal"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "status": {
              "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
              "maxLength": 5000,
              "type": "string"
            },
            "type": {
              "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. If you are looking to classify transactions for accounting purposes, you might want to consider `reporting_category` instead.",
              "enum": [
                "adjustment",
                "advance",
                "advance_funding",
                "anticipation_repayment",
                "application_fee",
                "application_fee_refund",
                "charge",
                "connect_collection_transfer",
                "contribution",
                "issuing_authorization_hold",
                "issuing_authorization_release",
                "issuing_dispute",
                "issuing_transaction",
                "payment",
                "payment_failure_refund",
                "payment_refund",
                "payout",
                "payout_cancel",
                "payout_failure",
                "refund",
                "refund_failure",
                "reserve_transaction",
                "reserved_funds",
                "stripe_fee",
                "stripe_fx_fee",
                "tax_fee",
                "topup",
                "topup_reversal",
                "transfer",
                "transfer_cancel",
                "transfer_failure",
                "transfer_refund"
              ],
              "type": "string"
            }
          },
          "required": [
            "amount",
            "available_on",
            "created",
            "currency",
            "fee",
            "fee_details",
            "id",
            "net",
            "object",
            "reporting_category",
            "status",
            "type"
          ],
          "title": "BalanceTransaction",
          "type": "object",
          "x-expandableFields": [
            "fee_details",
            "source"
          ],
          "x-resourceId": "balance_transaction"
        },
        "nullable": true,
        "type": "array"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "The currency the `transaction` was made in.",
        "type": "string"
      },
      "evidence": {
        "description": "",
        "properties": {
          "canceled": {
            "$ref": "#/components/schemas/issuing_dispute_canceled_evidence"
          },
          "duplicate": {
            "$ref": "#/components/schemas/issuing_dispute_duplicate_evidence"
          },
          "fraudulent": {
            "$ref": "#/components/schemas/issuing_dispute_fraudulent_evidence"
          },
          "merchandise_not_as_described": {
            "$ref": "#/components/schemas/issuing_dispute_merchandise_not_as_described_evidence"
          },
          "not_received": {
            "$ref": "#/components/schemas/issuing_dispute_not_received_evidence"
          },
          "other": {
            "$ref": "#/components/schemas/issuing_dispute_other_evidence"
          },
          "reason": {
            "description": "The reason for filing the dispute. Its value will match the field containing the evidence.",
            "enum": [
              "canceled",
              "duplicate",
              "fraudulent",
              "merchandise_not_as_described",
              "not_received",
              "other",
              "service_not_as_described"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "service_not_as_described": {
            "$ref": "#/components/schemas/issuing_dispute_service_not_as_described_evidence"
          }
        },
        "required": [
          "reason"
        ],
        "title": "IssuingDisputeEvidence",
        "type": "object",
        "x-expandableFields": [
          "canceled",
          "duplicate",
          "fraudulent",
          "merchandise_not_as_described",
          "not_received",
          "other",
          "service_not_as_described"
        ]
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "issuing.dispute"
        ],
        "type": "string"
      },
      "status": {
        "description": "Current status of the dispute.",
        "enum": [
          "expired",
          "lost",
          "submitted",
          "unsubmitted",
          "won"
        ],
        "type": "string"
      },
      "transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Any use of an [issued card](https://stripe.com/docs/issuing) that results in funds entering or leaving\nyour Stripe account, such as a completed purchase or refund, is represented by an Issuing\n`Transaction` object.\n\nRelated guide: [Issued Card Transactions](https://stripe.com/docs/issuing/purchases/transactions).",
          "properties": {
            "amount": {
              "description": "The transaction amount, which will be reflected in your balance. This amount is in your currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
              "type": "integer"
            },
            "amount_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_transaction_amount_details"
                }
              ],
              "description": "Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
              "nullable": true
            },
            "authorization": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                }
              ],
              "description": "The `Authorization` object that led to this transaction.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.authorization"
                  }
                ]
              }
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the [balance transaction](https://stripe.com/docs/api/balance_transactions) associated with this transaction.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "card": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.card"
                }
              ],
              "description": "The card used to make this transaction.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.card"
                  }
                ]
              }
            },
            "cardholder": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.cardholder"
                }
              ],
              "description": "The cardholder to whom this transaction belongs.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.cardholder"
                  }
                ]
              }
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "dispute": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                }
              ],
              "description": "If you've disputed the transaction, the ID of the dispute.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.dispute"
                  }
                ]
              }
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "merchant_amount": {
              "description": "The amount that the merchant will receive, denominated in `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). It will be different from `amount` if the merchant is taking payment in a different currency.",
              "type": "integer"
            },
            "merchant_currency": {
              "description": "The currency with which the merchant is taking payment.",
              "type": "string"
            },
            "merchant_data": {
              "$ref": "#/components/schemas/issuing_authorization_merchant_data"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "issuing.transaction"
              ],
              "type": "string"
            },
            "purchase_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_transaction_purchase_details"
                }
              ],
              "description": "Additional purchase information that is optionally provided by the merchant.",
              "nullable": true
            },
            "treasury": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_transaction_treasury"
                }
              ],
              "description": "[Treasury](https://stripe.com/docs/api/treasury) details related to this transaction if it was created on a [FinancialAccount](/docs/api/treasury/financial_accounts",
              "nullable": true
            },
            "type": {
              "description": "The nature of the transaction.",
              "enum": [
                "capture",
                "refund"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "wallet": {
              "description": "The digital wallet used for this transaction. One of `apple_pay`, `google_pay`, or `samsung_pay`.",
              "enum": [
                "apple_pay",
                "google_pay",
                "samsung_pay"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "card",
            "created",
            "currency",
            "id",
            "livemode",
            "merchant_amount",
            "merchant_currency",
            "merchant_data",
            "metadata",
            "object",
            "type"
          ],
          "title": "IssuingTransaction",
          "type": "object",
          "x-expandableFields": [
            "amount_details",
            "authorization",
            "balance_transaction",
            "card",
            "cardholder",
            "dispute",
            "merchant_data",
            "purchase_details",
            "treasury"
          ],
          "x-resourceId": "issuing.transaction"
        }
      ],
      "treasury": [
        {
          "description": "",
          "properties": {
            "debit_reversal": {
              "description": "The Treasury [DebitReversal](https://stripe.com/docs/api/treasury/debit_reversals) representing this Issuing dispute",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "received_debit": {
              "description": "The Treasury [ReceivedDebit](https://stripe.com/docs/api/treasury/received_debits) that is being disputed.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "received_debit"
          ],
          "title": "IssuingDisputeTreasury",
          "type": "object",
          "x-expandableFields": []
        }
      ]
    },
    "required": [
      "amount",
      "created",
      "currency",
      "evidence",
      "id",
      "livemode",
      "metadata",
      "object",
      "status",
      "transaction"
    ],
    "title": "IssuingDispute",
    "type": "object",
    "x-expandableFields": [
      "balance_transactions",
      "evidence",
      "transaction",
      "treasury"
    ],
    "x-resourceId": "issuing.dispute"
  },
  "issuing_transaction": {
    "description": "Any use of an [issued card](https://stripe.com/docs/issuing) that results in funds entering or leaving\nyour Stripe account, such as a completed purchase or refund, is represented by an Issuing\n`Transaction` object.\n\nRelated guide: [Issued Card Transactions](https://stripe.com/docs/issuing/purchases/transactions).",
    "properties": {
      "amount": {
        "description": "The transaction amount, which will be reflected in your balance. This amount is in your currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
        "type": "integer"
      },
      "amount_details": [
        {
          "description": "",
          "properties": {
            "atm_fee": {
              "description": "The fee charged by the ATM for the cash withdrawal.",
              "nullable": true,
              "type": "integer"
            }
          },
          "title": "IssuingTransactionAmountDetails",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "authorization": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "When an [issued card](https://stripe.com/docs/issuing) is used to make a purchase, an Issuing `Authorization`\nobject is created. [Authorizations](https://stripe.com/docs/issuing/purchases/authorizations) must be approved for the\npurchase to be completed successfully.\n\nRelated guide: [Issued Card Authorizations](https://stripe.com/docs/issuing/purchases/authorizations).",
          "properties": {
            "amount": {
              "description": "The total amount that was authorized or rejected. This amount is in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
              "type": "integer"
            },
            "amount_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_authorization_amount_details"
                }
              ],
              "description": "Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
              "nullable": true
            },
            "approved": {
              "description": "Whether the authorization has been approved.",
              "type": "boolean"
            },
            "authorization_method": {
              "description": "How the card details were provided.",
              "enum": [
                "chip",
                "contactless",
                "keyed_in",
                "online",
                "swipe"
              ],
              "type": "string"
            },
            "balance_transactions": {
              "description": "List of balance transactions associated with this authorization.",
              "items": {
                "$ref": "#/components/schemas/balance_transaction"
              },
              "type": "array"
            },
            "card": {
              "$ref": "#/components/schemas/issuing.card"
            },
            "cardholder": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.cardholder"
                }
              ],
              "description": "The cardholder to whom this authorization belongs.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.cardholder"
                  }
                ]
              }
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "merchant_amount": {
              "description": "The total amount that was authorized or rejected. This amount is in the `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
              "type": "integer"
            },
            "merchant_currency": {
              "description": "The currency that was presented to the cardholder for the authorization. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "merchant_data": {
              "$ref": "#/components/schemas/issuing_authorization_merchant_data"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "issuing.authorization"
              ],
              "type": "string"
            },
            "pending_request": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_authorization_pending_request"
                }
              ],
              "description": "The pending authorization request. This field will only be non-null during an `issuing_authorization.request` webhook.",
              "nullable": true
            },
            "request_history": {
              "description": "History of every time `pending_request` was approved/denied, either by you directly or by Stripe (e.g. based on your `spending_controls`). If the merchant changes the authorization by performing an [incremental authorization](https://stripe.com/docs/issuing/purchases/authorizations), you can look at this field to see the previous requests for the authorization.",
              "items": {
                "$ref": "#/components/schemas/issuing_authorization_request"
              },
              "type": "array"
            },
            "status": {
              "description": "The current status of the authorization in its lifecycle.",
              "enum": [
                "closed",
                "pending",
                "reversed"
              ],
              "type": "string"
            },
            "transactions": {
              "description": "List of [transactions](https://stripe.com/docs/api/issuing/transactions) associated with this authorization.",
              "items": {
                "$ref": "#/components/schemas/issuing.transaction"
              },
              "type": "array"
            },
            "treasury": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_authorization_treasury"
                }
              ],
              "description": "[Treasury](https://stripe.com/docs/api/treasury) details related to this authorization if it was created on a [FinancialAccount](https://stripe.com/docs/api/treasury/financial_accounts).",
              "nullable": true
            },
            "verification_data": {
              "$ref": "#/components/schemas/issuing_authorization_verification_data"
            },
            "wallet": {
              "description": "The digital wallet used for this authorization. One of `apple_pay`, `google_pay`, or `samsung_pay`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "approved",
            "authorization_method",
            "balance_transactions",
            "card",
            "created",
            "currency",
            "id",
            "livemode",
            "merchant_amount",
            "merchant_currency",
            "merchant_data",
            "metadata",
            "object",
            "request_history",
            "status",
            "transactions",
            "verification_data"
          ],
          "title": "IssuingAuthorization",
          "type": "object",
          "x-expandableFields": [
            "amount_details",
            "balance_transactions",
            "card",
            "cardholder",
            "merchant_data",
            "pending_request",
            "request_history",
            "transactions",
            "treasury",
            "verification_data"
          ],
          "x-resourceId": "issuing.authorization"
        }
      ],
      "balance_transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Balance transactions represent funds moving through your Stripe account.\nThey're created for every type of transaction that comes into or flows out of your Stripe account balance.\n\nRelated guide: [Balance Transaction Types](https://stripe.com/docs/reports/balance-transaction-types).",
          "properties": {
            "amount": {
              "description": "Gross amount of the transaction, in %s.",
              "type": "integer"
            },
            "available_on": {
              "description": "The date the transaction's net funds will become available in the Stripe balance.",
              "format": "unix-time",
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exchange_rate": {
              "description": "The exchange rate used, if applicable, for this transaction. Specifically, if money was converted from currency A to currency B, then the `amount` in currency A, times `exchange_rate`, would be the `amount` in currency B. For example, suppose you charged a customer 10.00 EUR. Then the PaymentIntent's `amount` would be `1000` and `currency` would be `eur`. Suppose this was converted into 12.34 USD in your Stripe account. Then the BalanceTransaction's `amount` would be `1234`, `currency` would be `usd`, and `exchange_rate` would be `1.234`.",
              "nullable": true,
              "type": "number"
            },
            "fee": {
              "description": "Fees (in %s) paid for this transaction.",
              "type": "integer"
            },
            "fee_details": {
              "description": "Detailed breakdown of fees (in %s) paid for this transaction.",
              "items": {
                "$ref": "#/components/schemas/fee"
              },
              "type": "array"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "net": {
              "description": "Net amount of the transaction, in %s.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "balance_transaction"
              ],
              "type": "string"
            },
            "reporting_category": {
              "description": "[Learn more](https://stripe.com/docs/reports/reporting-categories) about how reporting categories can help you understand balance transactions from an accounting perspective.",
              "maxLength": 5000,
              "type": "string"
            },
            "source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                },
                {
                  "$ref": "#/components/schemas/charge"
                },
                {
                  "$ref": "#/components/schemas/connect_collection_transfer"
                },
                {
                  "$ref": "#/components/schemas/dispute"
                },
                {
                  "$ref": "#/components/schemas/fee_refund"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                },
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                },
                {
                  "$ref": "#/components/schemas/payout"
                },
                {
                  "$ref": "#/components/schemas/platform_tax_fee"
                },
                {
                  "$ref": "#/components/schemas/refund"
                },
                {
                  "$ref": "#/components/schemas/reserve_transaction"
                },
                {
                  "$ref": "#/components/schemas/tax_deducted_at_source"
                },
                {
                  "$ref": "#/components/schemas/topup"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ],
              "description": "The Stripe object to which this transaction is related.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  },
                  {
                    "$ref": "#/components/schemas/charge"
                  },
                  {
                    "$ref": "#/components/schemas/connect_collection_transfer"
                  },
                  {
                    "$ref": "#/components/schemas/dispute"
                  },
                  {
                    "$ref": "#/components/schemas/fee_refund"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.authorization"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.dispute"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.transaction"
                  },
                  {
                    "$ref": "#/components/schemas/payout"
                  },
                  {
                    "$ref": "#/components/schemas/platform_tax_fee"
                  },
                  {
                    "$ref": "#/components/schemas/refund"
                  },
                  {
                    "$ref": "#/components/schemas/reserve_transaction"
                  },
                  {
                    "$ref": "#/components/schemas/tax_deducted_at_source"
                  },
                  {
                    "$ref": "#/components/schemas/topup"
                  },
                  {
                    "$ref": "#/components/schemas/transfer"
                  },
                  {
                    "$ref": "#/components/schemas/transfer_reversal"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "status": {
              "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
              "maxLength": 5000,
              "type": "string"
            },
            "type": {
              "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. If you are looking to classify transactions for accounting purposes, you might want to consider `reporting_category` instead.",
              "enum": [
                "adjustment",
                "advance",
                "advance_funding",
                "anticipation_repayment",
                "application_fee",
                "application_fee_refund",
                "charge",
                "connect_collection_transfer",
                "contribution",
                "issuing_authorization_hold",
                "issuing_authorization_release",
                "issuing_dispute",
                "issuing_transaction",
                "payment",
                "payment_failure_refund",
                "payment_refund",
                "payout",
                "payout_cancel",
                "payout_failure",
                "refund",
                "refund_failure",
                "reserve_transaction",
                "reserved_funds",
                "stripe_fee",
                "stripe_fx_fee",
                "tax_fee",
                "topup",
                "topup_reversal",
                "transfer",
                "transfer_cancel",
                "transfer_failure",
                "transfer_refund"
              ],
              "type": "string"
            }
          },
          "required": [
            "amount",
            "available_on",
            "created",
            "currency",
            "fee",
            "fee_details",
            "id",
            "net",
            "object",
            "reporting_category",
            "status",
            "type"
          ],
          "title": "BalanceTransaction",
          "type": "object",
          "x-expandableFields": [
            "fee_details",
            "source"
          ],
          "x-resourceId": "balance_transaction"
        }
      ],
      "card": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "You can [create physical or virtual cards](https://stripe.com/docs/issuing/cards) that are issued to cardholders.",
          "properties": {
            "brand": {
              "description": "The brand of the card.",
              "maxLength": 5000,
              "type": "string"
            },
            "cancellation_reason": {
              "description": "The reason why the card was canceled.",
              "enum": [
                "design_rejected",
                "lost",
                "stolen"
              ],
              "nullable": true,
              "type": "string"
            },
            "cardholder": {
              "$ref": "#/components/schemas/issuing.cardholder"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Supported currencies are `usd` in the US, `eur` in the EU, and `gbp` in the UK.",
              "type": "string"
            },
            "cvc": {
              "description": "The card's CVC. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it's only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.",
              "maxLength": 5000,
              "type": "string"
            },
            "exp_month": {
              "description": "The expiration month of the card.",
              "type": "integer"
            },
            "exp_year": {
              "description": "The expiration year of the card.",
              "type": "integer"
            },
            "financial_account": {
              "description": "The financial account this card is attached to.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "last4": {
              "description": "The last 4 digits of the card number.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "number": {
              "description": "The full unredacted card number. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it's only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "issuing.card"
              ],
              "type": "string"
            },
            "replaced_by": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.card"
                }
              ],
              "description": "The latest card that replaces this card, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.card"
                  }
                ]
              }
            },
            "replacement_for": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.card"
                }
              ],
              "description": "The card this card replaces, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.card"
                  }
                ]
              }
            },
            "replacement_reason": {
              "description": "The reason why the previous card needed to be replaced.",
              "enum": [
                "damaged",
                "expired",
                "lost",
                "stolen"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_card_shipping"
                }
              ],
              "description": "Where and how the card will be shipped.",
              "nullable": true
            },
            "spending_controls": {
              "$ref": "#/components/schemas/issuing_card_authorization_controls"
            },
            "status": {
              "description": "Whether authorizations can be approved on this card.",
              "enum": [
                "active",
                "canceled",
                "inactive"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "type": {
              "description": "The type of the card.",
              "enum": [
                "physical",
                "virtual"
              ],
              "type": "string"
            },
            "wallets": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_card_wallets"
                }
              ],
              "description": "Information relating to digital wallets (like Apple Pay and Google Pay).",
              "nullable": true
            }
          },
          "required": [
            "brand",
            "cardholder",
            "created",
            "currency",
            "exp_month",
            "exp_year",
            "id",
            "last4",
            "livemode",
            "metadata",
            "object",
            "spending_controls",
            "status",
            "type"
          ],
          "title": "IssuingCard",
          "type": "object",
          "x-expandableFields": [
            "cardholder",
            "replaced_by",
            "replacement_for",
            "shipping",
            "spending_controls",
            "wallets"
          ],
          "x-resourceId": "issuing.card"
        }
      ],
      "cardholder": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "An Issuing `Cardholder` object represents an individual or business entity who is [issued](https://stripe.com/docs/issuing) cards.\n\nRelated guide: [How to create a Cardholder](https://stripe.com/docs/issuing/cards#create-cardholder)",
          "properties": {
            "billing": {
              "$ref": "#/components/schemas/issuing_cardholder_address"
            },
            "company": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_cardholder_company"
                }
              ],
              "description": "Additional information about a `company` cardholder.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "email": {
              "description": "The cardholder's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "individual": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_cardholder_individual"
                }
              ],
              "description": "Additional information about an `individual` cardholder.",
              "nullable": true
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The cardholder's name. This will be printed on cards issued to them.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "issuing.cardholder"
              ],
              "type": "string"
            },
            "phone_number": {
              "description": "The cardholder's phone number. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure#when-is-3d-secure-applied) for more details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "requirements": {
              "$ref": "#/components/schemas/issuing_cardholder_requirements"
            },
            "spending_controls": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_cardholder_authorization_controls"
                }
              ],
              "description": "Rules that control spending across this cardholder's cards. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.",
              "nullable": true
            },
            "status": {
              "description": "Specifies whether to permit authorizations on this cardholder's cards.",
              "enum": [
                "active",
                "blocked",
                "inactive"
              ],
              "type": "string"
            },
            "type": {
              "description": "One of `individual` or `company`.",
              "enum": [
                "company",
                "individual"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            }
          },
          "required": [
            "billing",
            "created",
            "id",
            "livemode",
            "metadata",
            "name",
            "object",
            "requirements",
            "status",
            "type"
          ],
          "title": "IssuingCardholder",
          "type": "object",
          "x-expandableFields": [
            "billing",
            "company",
            "individual",
            "requirements",
            "spending_controls"
          ],
          "x-resourceId": "issuing.cardholder"
        }
      ],
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "dispute": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "As a [card issuer](https://stripe.com/docs/issuing), you can dispute transactions that the cardholder does not recognize, suspects to be fraudulent, or has other issues with.\n\nRelated guide: [Disputing Transactions](https://stripe.com/docs/issuing/purchases/disputes)",
          "properties": {
            "amount": {
              "description": "Disputed amount in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). Usually the amount of the `transaction`, but can differ (usually because of currency fluctuation).",
              "type": "integer"
            },
            "balance_transactions": {
              "description": "List of balance transactions associated with the dispute.",
              "items": {
                "$ref": "#/components/schemas/balance_transaction"
              },
              "nullable": true,
              "type": "array"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "The currency the `transaction` was made in.",
              "type": "string"
            },
            "evidence": {
              "$ref": "#/components/schemas/issuing_dispute_evidence"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "issuing.dispute"
              ],
              "type": "string"
            },
            "status": {
              "description": "Current status of the dispute.",
              "enum": [
                "expired",
                "lost",
                "submitted",
                "unsubmitted",
                "won"
              ],
              "type": "string"
            },
            "transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                }
              ],
              "description": "The transaction being disputed.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/issuing.transaction"
                  }
                ]
              }
            },
            "treasury": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_dispute_treasury"
                }
              ],
              "description": "[Treasury](https://stripe.com/docs/api/treasury) details related to this dispute if it was created on a [FinancialAccount](/docs/api/treasury/financial_accounts",
              "nullable": true
            }
          },
          "required": [
            "amount",
            "created",
            "currency",
            "evidence",
            "id",
            "livemode",
            "metadata",
            "object",
            "status",
            "transaction"
          ],
          "title": "IssuingDispute",
          "type": "object",
          "x-expandableFields": [
            "balance_transactions",
            "evidence",
            "transaction",
            "treasury"
          ],
          "x-resourceId": "issuing.dispute"
        }
      ],
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "merchant_amount": {
        "description": "The amount that the merchant will receive, denominated in `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). It will be different from `amount` if the merchant is taking payment in a different currency.",
        "type": "integer"
      },
      "merchant_currency": {
        "description": "The currency with which the merchant is taking payment.",
        "type": "string"
      },
      "merchant_data": {
        "description": "",
        "properties": {
          "category": {
            "description": "A categorization of the seller's type of business. See our [merchant categories guide](https://stripe.com/docs/issuing/merchant-categories) for a list of possible values.",
            "maxLength": 5000,
            "type": "string"
          },
          "category_code": {
            "description": "The merchant category code for the sellerâ€™s business",
            "maxLength": 5000,
            "type": "string"
          },
          "city": {
            "description": "City where the seller is located",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Country where the seller is located",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the seller",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "network_id": {
            "description": "Identifier assigned to the seller by the card brand",
            "maxLength": 5000,
            "type": "string"
          },
          "postal_code": {
            "description": "Postal code where the seller is located",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "State where the seller is located",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "category",
          "category_code",
          "network_id"
        ],
        "title": "IssuingAuthorizationMerchantData",
        "type": "object",
        "x-expandableFields": []
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "issuing.transaction"
        ],
        "type": "string"
      },
      "purchase_details": [
        {
          "description": "",
          "properties": {
            "flight": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_transaction_flight_data"
                }
              ],
              "description": "Information about the flight that was purchased with this transaction.",
              "nullable": true
            },
            "fuel": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_transaction_fuel_data"
                }
              ],
              "description": "Information about fuel that was purchased with this transaction.",
              "nullable": true
            },
            "lodging": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/issuing_transaction_lodging_data"
                }
              ],
              "description": "Information about lodging that was purchased with this transaction.",
              "nullable": true
            },
            "receipt": {
              "description": "The line items in the purchase.",
              "items": {
                "$ref": "#/components/schemas/issuing_transaction_receipt_data"
              },
              "nullable": true,
              "type": "array"
            },
            "reference": {
              "description": "A merchant-specific order number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "IssuingTransactionPurchaseDetails",
          "type": "object",
          "x-expandableFields": [
            "flight",
            "fuel",
            "lodging",
            "receipt"
          ]
        }
      ],
      "treasury": [
        {
          "description": "",
          "properties": {
            "received_credit": {
              "description": "The Treasury [ReceivedCredit](https://stripe.com/docs/api/treasury/received_debits) representing this Issuing transaction if it is a refund",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "received_debit": {
              "description": "The Treasury [ReceivedDebit](https://stripe.com/docs/api/treasury/received_credits) representing this Issuing transaction if it is a capture",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "IssuingTransactionTreasury",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "type": {
        "description": "The nature of the transaction.",
        "enum": [
          "capture",
          "refund"
        ],
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "wallet": {
        "description": "The digital wallet used for this transaction. One of `apple_pay`, `google_pay`, or `samsung_pay`.",
        "enum": [
          "apple_pay",
          "google_pay",
          "samsung_pay"
        ],
        "nullable": true,
        "type": "string"
      }
    },
    "required": [
      "amount",
      "card",
      "created",
      "currency",
      "id",
      "livemode",
      "merchant_amount",
      "merchant_currency",
      "merchant_data",
      "metadata",
      "object",
      "type"
    ],
    "title": "IssuingTransaction",
    "type": "object",
    "x-expandableFields": [
      "amount_details",
      "authorization",
      "balance_transaction",
      "card",
      "cardholder",
      "dispute",
      "merchant_data",
      "purchase_details",
      "treasury"
    ],
    "x-resourceId": "issuing.transaction"
  },
  "mandate": {
    "description": "A Mandate is a record of the permission a customer has given you to debit their payment method.",
    "properties": {
      "customer_acceptance": {
        "description": "",
        "properties": {
          "accepted_at": {
            "description": "The time at which the customer accepted the Mandate.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "offline": {
            "$ref": "#/components/schemas/offline_acceptance"
          },
          "online": {
            "$ref": "#/components/schemas/online_acceptance"
          },
          "type": {
            "description": "The type of customer acceptance information included with the Mandate. One of `online` or `offline`.",
            "enum": [
              "offline",
              "online"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "customer_acceptance",
        "type": "object",
        "x-expandableFields": [
          "offline",
          "online"
        ]
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "multi_use": {
        "description": "",
        "properties": {},
        "title": "mandate_multi_use",
        "type": "object",
        "x-expandableFields": []
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "mandate"
        ],
        "type": "string"
      },
      "payment_method": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "PaymentMethod objects represent your customer's payment instruments.\nYou can use them with [PaymentIntents](https://stripe.com/docs/payments/payment-intents) to collect payments or save them to\nCustomer objects to store instrument details for future payments.\n\nRelated guides: [Payment Methods](https://stripe.com/docs/payments/payment-methods) and [More Payment Scenarios](https://stripe.com/docs/payments/more-payment-scenarios).",
          "properties": {
            "acss_debit": {
              "$ref": "#/components/schemas/payment_method_acss_debit"
            },
            "affirm": {
              "$ref": "#/components/schemas/payment_method_affirm"
            },
            "afterpay_clearpay": {
              "$ref": "#/components/schemas/payment_method_afterpay_clearpay"
            },
            "alipay": {
              "$ref": "#/components/schemas/payment_flows_private_payment_methods_alipay"
            },
            "au_becs_debit": {
              "$ref": "#/components/schemas/payment_method_au_becs_debit"
            },
            "bacs_debit": {
              "$ref": "#/components/schemas/payment_method_bacs_debit"
            },
            "bancontact": {
              "$ref": "#/components/schemas/payment_method_bancontact"
            },
            "billing_details": {
              "$ref": "#/components/schemas/billing_details"
            },
            "blik": {
              "$ref": "#/components/schemas/payment_method_blik"
            },
            "boleto": {
              "$ref": "#/components/schemas/payment_method_boleto"
            },
            "card": {
              "$ref": "#/components/schemas/payment_method_card"
            },
            "card_present": {
              "$ref": "#/components/schemas/payment_method_card_present"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                }
              ],
              "description": "The ID of the Customer to which this PaymentMethod is saved. This will not be set when the PaymentMethod has not been saved to a Customer.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  }
                ]
              }
            },
            "customer_balance": {
              "$ref": "#/components/schemas/payment_method_customer_balance"
            },
            "eps": {
              "$ref": "#/components/schemas/payment_method_eps"
            },
            "fpx": {
              "$ref": "#/components/schemas/payment_method_fpx"
            },
            "giropay": {
              "$ref": "#/components/schemas/payment_method_giropay"
            },
            "grabpay": {
              "$ref": "#/components/schemas/payment_method_grabpay"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "ideal": {
              "$ref": "#/components/schemas/payment_method_ideal"
            },
            "interac_present": {
              "$ref": "#/components/schemas/payment_method_interac_present"
            },
            "klarna": {
              "$ref": "#/components/schemas/payment_method_klarna"
            },
            "konbini": {
              "$ref": "#/components/schemas/payment_method_konbini"
            },
            "link": {
              "$ref": "#/components/schemas/payment_method_link"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "payment_method"
              ],
              "type": "string"
            },
            "oxxo": {
              "$ref": "#/components/schemas/payment_method_oxxo"
            },
            "p24": {
              "$ref": "#/components/schemas/payment_method_p24"
            },
            "paynow": {
              "$ref": "#/components/schemas/payment_method_paynow"
            },
            "promptpay": {
              "$ref": "#/components/schemas/payment_method_promptpay"
            },
            "radar_options": {
              "$ref": "#/components/schemas/radar_radar_options"
            },
            "sepa_debit": {
              "$ref": "#/components/schemas/payment_method_sepa_debit"
            },
            "sofort": {
              "$ref": "#/components/schemas/payment_method_sofort"
            },
            "type": {
              "description": "The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.",
              "enum": [
                "acss_debit",
                "affirm",
                "afterpay_clearpay",
                "alipay",
                "au_becs_debit",
                "bacs_debit",
                "bancontact",
                "blik",
                "boleto",
                "card",
                "card_present",
                "customer_balance",
                "eps",
                "fpx",
                "giropay",
                "grabpay",
                "ideal",
                "interac_present",
                "klarna",
                "konbini",
                "link",
                "oxxo",
                "p24",
                "paynow",
                "promptpay",
                "sepa_debit",
                "sofort",
                "us_bank_account",
                "wechat_pay"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "us_bank_account": {
              "$ref": "#/components/schemas/payment_method_us_bank_account"
            },
            "wechat_pay": {
              "$ref": "#/components/schemas/payment_method_wechat_pay"
            }
          },
          "required": [
            "billing_details",
            "created",
            "id",
            "livemode",
            "object",
            "type"
          ],
          "title": "PaymentMethod",
          "type": "object",
          "x-expandableFields": [
            "acss_debit",
            "affirm",
            "afterpay_clearpay",
            "alipay",
            "au_becs_debit",
            "bacs_debit",
            "bancontact",
            "billing_details",
            "blik",
            "boleto",
            "card",
            "card_present",
            "customer",
            "customer_balance",
            "eps",
            "fpx",
            "giropay",
            "grabpay",
            "ideal",
            "interac_present",
            "klarna",
            "konbini",
            "link",
            "oxxo",
            "p24",
            "paynow",
            "promptpay",
            "radar_options",
            "sepa_debit",
            "sofort",
            "us_bank_account",
            "wechat_pay"
          ],
          "x-resourceId": "payment_method"
        }
      ],
      "payment_method_details": {
        "description": "",
        "properties": {
          "acss_debit": {
            "$ref": "#/components/schemas/mandate_acss_debit"
          },
          "au_becs_debit": {
            "$ref": "#/components/schemas/mandate_au_becs_debit"
          },
          "bacs_debit": {
            "$ref": "#/components/schemas/mandate_bacs_debit"
          },
          "blik": {
            "$ref": "#/components/schemas/mandate_blik"
          },
          "card": {
            "$ref": "#/components/schemas/card_mandate_payment_method_details"
          },
          "link": {
            "$ref": "#/components/schemas/mandate_link"
          },
          "sepa_debit": {
            "$ref": "#/components/schemas/mandate_sepa_debit"
          },
          "type": {
            "description": "The type of the payment method associated with this mandate. An additional hash is included on `payment_method_details` with a name matching this value. It contains mandate information specific to the payment method.",
            "maxLength": 5000,
            "type": "string"
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/mandate_us_bank_account"
          }
        },
        "required": [
          "type"
        ],
        "title": "mandate_payment_method_details",
        "type": "object",
        "x-expandableFields": [
          "acss_debit",
          "au_becs_debit",
          "bacs_debit",
          "blik",
          "card",
          "link",
          "sepa_debit",
          "us_bank_account"
        ]
      },
      "single_use": {
        "description": "",
        "properties": {
          "amount": {
            "description": "On a single use mandate, the amount of the payment.",
            "type": "integer"
          },
          "currency": {
            "description": "On a single use mandate, the currency of the payment.",
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency"
        ],
        "title": "mandate_single_use",
        "type": "object",
        "x-expandableFields": []
      },
      "status": {
        "description": "The status of the mandate, which indicates whether it can be used to initiate a payment.",
        "enum": [
          "active",
          "inactive",
          "pending"
        ],
        "type": "string"
      },
      "type": {
        "description": "The type of the mandate.",
        "enum": [
          "multi_use",
          "single_use"
        ],
        "type": "string"
      }
    },
    "required": [
      "customer_acceptance",
      "id",
      "livemode",
      "object",
      "payment_method",
      "payment_method_details",
      "status",
      "type"
    ],
    "title": "Mandate",
    "type": "object",
    "x-expandableFields": [
      "customer_acceptance",
      "multi_use",
      "payment_method",
      "payment_method_details",
      "single_use"
    ],
    "x-resourceId": "mandate"
  },
  "order": {
    "description": "An Order describes a purchase being made by a customer, including the\nproducts & quantities being purchased, the order status, the payment information,\nand the billing/shipping details.\n\nRelated guide: [Orders overview](https://stripe.com/docs/orders)",
    "properties": {
      "amount_subtotal": {
        "description": "Order cost before any discounts or taxes are applied. A positive integer representing the subtotal of the order in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency).",
        "type": "integer"
      },
      "amount_total": {
        "description": "Total order cost after discounts and taxes are applied. A positive integer representing the cost of the order in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). To submit an order, the total must be either 0 or at least $0.50 USD or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts).",
        "type": "integer"
      },
      "application": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "",
          "properties": {
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "The name of the application.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Application",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "automatic_tax": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether Stripe automatically computes tax on this Order.",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the most recent automated tax calculation for this Order.",
            "enum": [
              "complete",
              "failed",
              "requires_location_inputs"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "OrdersV2ResourceAutomaticTax",
        "type": "object",
        "x-expandableFields": []
      },
      "billing_details": [
        {
          "description": "",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "Billing address for the order.",
              "nullable": true
            },
            "email": {
              "description": "Email address for the order.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "name": {
              "description": "Full name for the order.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "phone": {
              "description": "Billing phone number for the order (including extension).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "OrdersV2ResourceBillingDetails",
          "type": "object",
          "x-expandableFields": [
            "address"
          ]
        }
      ],
      "client_secret": {
        "description": "The client secret of this Order. Used for client-side retrieval using a publishable key. \n\nThe client secret can be used to complete a payment for an Order from your frontend. It should not be stored, logged, embedded in URLs, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret. \n\nRefer to our docs for [creating and processing an order](https://stripe.com/docs/orders-beta/create-and-process) to learn about how client_secret should be handled.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "customer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address.",
              "nullable": true
            },
            "balance": {
              "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
              "type": "integer"
            },
            "cash_balance": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cash_balance"
                }
              ],
              "description": "The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the customer.\n\nIf you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "delinquent": {
              "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
              "nullable": true,
              "type": "boolean"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount active on the customer, if there is one.",
              "nullable": true
            },
            "email": {
              "description": "The customer's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_credit_balance": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "The current multi-currency balances, if any, being stored on the customer.If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency.If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices.They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
              "type": "object"
            },
            "invoice_prefix": {
              "description": "The prefix for the customer used to generate unique invoice numbers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_settings": {
              "$ref": "#/components/schemas/invoice_setting_customer_setting"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The customer's full name or business name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "next_invoice_sequence": {
              "description": "The suffix of the customer's next invoice number, e.g., 0001.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            },
            "phone": {
              "description": "The customer's phone number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "preferred_locales": {
              "description": "The customer's preferred locales (languages), ordered by preference.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
              "nullable": true
            },
            "sources": {
              "description": "The customer's payment sources, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      },
                      {
                        "$ref": "#/components/schemas/source"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "subscriptions": {
              "description": "The customer's current subscriptions, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "tax": {
              "$ref": "#/components/schemas/customer_tax"
            },
            "tax_exempt": {
              "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "tax_ids": {
              "description": "The customer's tax IDs.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this customer belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object"
          ],
          "title": "Customer",
          "type": "object",
          "x-expandableFields": [
            "address",
            "cash_balance",
            "default_source",
            "discount",
            "invoice_settings",
            "shipping",
            "sources",
            "subscriptions",
            "tax",
            "tax_ids",
            "test_clock"
          ],
          "x-resourceId": "customer"
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedCustomer",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "deleted_customer"
        }
      ],
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "discounts": {
        "description": "The discounts applied to the order. Use `expand[]=discounts` to expand each discount.",
        "items": [
          {
            "maxLength": 5000,
            "type": "string"
          },
          {
            "description": "A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).\nIt contains information about when the discount began, when it will end, and what it is applied to.\n\nRelated guide: [Applying Discounts to Subscriptions](https://stripe.com/docs/billing/subscriptions/discounts).",
            "properties": {
              "checkout_session": {
                "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "coupon": {
                "$ref": "#/components/schemas/coupon"
              },
              "customer": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ],
                "description": "The ID of the customer associated with this discount.",
                "nullable": true,
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/customer"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_customer"
                    }
                  ]
                }
              },
              "end": {
                "description": "If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.",
                "format": "unix-time",
                "nullable": true,
                "type": "integer"
              },
              "id": {
                "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
                "maxLength": 5000,
                "type": "string"
              },
              "invoice": {
                "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "invoice_item": {
                "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value.",
                "enum": [
                  "discount"
                ],
                "type": "string"
              },
              "promotion_code": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/promotion_code"
                  }
                ],
                "description": "The promotion code applied to create this discount.",
                "nullable": true,
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/promotion_code"
                    }
                  ]
                }
              },
              "start": {
                "description": "Date that the coupon was applied.",
                "format": "unix-time",
                "type": "integer"
              },
              "subscription": {
                "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "coupon",
              "id",
              "object",
              "start"
            ],
            "title": "Discount",
            "type": "object",
            "x-expandableFields": [
              "coupon",
              "customer",
              "promotion_code"
            ],
            "x-resourceId": "discount"
          }
        ],
        "nullable": true,
        "type": "array"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "ip_address": {
        "description": "A recent IP address of the purchaser used for tax reporting and tax location inference.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "line_items": {
        "description": "A list of line items the customer is ordering. Each line item includes information about the product, the quantity, and the resulting cost. There is a maximum of 100 line items.",
        "properties": {
          "data": {
            "description": "Details about each object.",
            "items": {
              "description": "A line item.",
              "properties": {
                "amount_discount": {
                  "description": "Total discount amount applied. If no discounts were applied, defaults to 0.",
                  "type": "integer"
                },
                "amount_subtotal": {
                  "description": "Total before any discounts or taxes are applied.",
                  "type": "integer"
                },
                "amount_tax": {
                  "description": "Total tax amount applied. If no tax was applied, defaults to 0.",
                  "type": "integer"
                },
                "amount_total": {
                  "description": "Total after discounts and taxes.",
                  "type": "integer"
                },
                "currency": {
                  "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                  "type": "string"
                },
                "description": {
                  "description": "An arbitrary string attached to the object. Often useful for displaying to users. Defaults to product name.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "discounts": {
                  "description": "The discounts applied to the line item.",
                  "items": {
                    "$ref": "#/components/schemas/line_items_discount_amount"
                  },
                  "type": "array"
                },
                "id": {
                  "description": "Unique identifier for the object.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "item"
                  ],
                  "type": "string"
                },
                "price": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/price"
                    }
                  ],
                  "description": "The price used to generate the line item.",
                  "nullable": true
                },
                "product": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/product"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_product"
                    }
                  ],
                  "description": "The ID of the product for this line item.\n\nThis will always be the same as `price.product`.",
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/product"
                      },
                      {
                        "$ref": "#/components/schemas/deleted_product"
                      }
                    ]
                  }
                },
                "quantity": {
                  "description": "The quantity of products being purchased.",
                  "nullable": true,
                  "type": "integer"
                },
                "taxes": {
                  "description": "The taxes applied to the line item.",
                  "items": {
                    "$ref": "#/components/schemas/line_items_tax_amount"
                  },
                  "type": "array"
                }
              },
              "required": [
                "amount_discount",
                "amount_subtotal",
                "amount_tax",
                "amount_total",
                "currency",
                "description",
                "id",
                "object"
              ],
              "title": "LineItem",
              "type": "object",
              "x-expandableFields": [
                "discounts",
                "price",
                "product",
                "taxes"
              ],
              "x-resourceId": "item"
            },
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "OrdersV2ResourceLineItemList",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "order"
        ],
        "type": "string"
      },
      "payment": {
        "description": "",
        "properties": {
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "ID of the payment intent associated with this order. Null when the order is `open`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/orders_v2_resource_payment_settings"
              }
            ],
            "description": "Settings describing how the order should configure generated PaymentIntents.",
            "nullable": true
          },
          "status": {
            "description": "The status of the underlying payment associated with this order, if any. Null when the order is `open`.",
            "enum": [
              "canceled",
              "complete",
              "not_required",
              "processing",
              "requires_action",
              "requires_capture",
              "requires_confirmation",
              "requires_payment_method"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "OrdersV2ResourcePayment",
        "type": "object",
        "x-expandableFields": [
          "payment_intent",
          "settings"
        ]
      },
      "shipping_cost": [
        {
          "description": "",
          "properties": {
            "amount_subtotal": {
              "description": "Total shipping cost before any discounts or taxes are applied.",
              "type": "integer"
            },
            "amount_tax": {
              "description": "Total tax amount applied due to shipping costs. If no tax was applied, defaults to 0.",
              "type": "integer"
            },
            "amount_total": {
              "description": "Total shipping cost after discounts and taxes are applied.",
              "type": "integer"
            },
            "shipping_rate": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/shipping_rate"
                }
              ],
              "description": "The ID of the ShippingRate for this order.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/shipping_rate"
                  }
                ]
              }
            },
            "taxes": {
              "description": "The taxes applied to the shipping rate.",
              "items": {
                "$ref": "#/components/schemas/line_items_tax_amount"
              },
              "type": "array"
            }
          },
          "required": [
            "amount_subtotal",
            "amount_tax",
            "amount_total"
          ],
          "title": "OrdersV2ResourceShippingCost",
          "type": "object",
          "x-expandableFields": [
            "shipping_rate",
            "taxes"
          ]
        }
      ],
      "shipping_details": [
        {
          "description": "",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "Recipient shipping address. Required if the order includes products that are shippable.",
              "nullable": true
            },
            "name": {
              "description": "Recipient name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "phone": {
              "description": "Recipient phone (including extension).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "OrdersV2ResourceShippingDetails",
          "type": "object",
          "x-expandableFields": [
            "address"
          ]
        }
      ],
      "status": {
        "description": "The overall status of the order.",
        "enum": [
          "canceled",
          "complete",
          "open",
          "processing",
          "submitted"
        ],
        "type": "string"
      },
      "tax_details": {
        "description": "",
        "properties": {
          "tax_exempt": {
            "description": "Describes the purchaser's tax exemption status. One of `none`, `exempt`, or `reverse`.",
            "enum": [
              "exempt",
              "none",
              "reverse"
            ],
            "type": "string"
          },
          "tax_ids": {
            "description": "The purchaser's tax IDs to be used in calculation of tax for this Order.",
            "items": {
              "$ref": "#/components/schemas/orders_v2_resource_tax_details_resource_tax_id"
            },
            "type": "array"
          }
        },
        "required": [
          "tax_exempt",
          "tax_ids"
        ],
        "title": "OrdersV2ResourceTaxDetails",
        "type": "object",
        "x-expandableFields": [
          "tax_ids"
        ]
      },
      "total_details": {
        "description": "",
        "properties": {
          "amount_discount": {
            "description": "This is the sum of all the discounts.",
            "type": "integer"
          },
          "amount_shipping": {
            "description": "This is the sum of all the shipping amounts.",
            "nullable": true,
            "type": "integer"
          },
          "amount_tax": {
            "description": "This is the sum of all the tax amounts.",
            "type": "integer"
          },
          "breakdown": {
            "$ref": "#/components/schemas/orders_v2_resource_total_details_api_resource_breakdown"
          }
        },
        "required": [
          "amount_discount",
          "amount_tax"
        ],
        "title": "OrdersV2ResourceTotalDetails",
        "type": "object",
        "x-expandableFields": [
          "breakdown"
        ]
      }
    },
    "required": [
      "amount_subtotal",
      "amount_total",
      "created",
      "currency",
      "id",
      "livemode",
      "object",
      "payment",
      "status",
      "total_details"
    ],
    "title": "OrdersV2ResourceOrder",
    "type": "object",
    "x-expandableFields": [
      "application",
      "automatic_tax",
      "billing_details",
      "customer",
      "discounts",
      "line_items",
      "payment",
      "shipping_cost",
      "shipping_details",
      "tax_details",
      "total_details"
    ],
    "x-resourceId": "order"
  },
  "payment_intent": {
    "description": "A PaymentIntent guides you through the process of collecting a payment from your customer.\nWe recommend that you create exactly one PaymentIntent for each order or\ncustomer session in your system. You can reference the PaymentIntent later to\nsee the history of payment attempts for a particular session.\n\nA PaymentIntent transitions through\n[multiple statuses](https://stripe.com/docs/payments/intents#intent-statuses)\nthroughout its lifetime as it interfaces with Stripe.js to perform\nauthentication flows and ultimately creates at most one successful charge.\n\nRelated guide: [Payment Intents API](https://stripe.com/docs/payments/payment-intents).",
    "properties": {
      "amount": {
        "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
        "type": "integer"
      },
      "amount_capturable": {
        "description": "Amount that can be captured from this PaymentIntent.",
        "type": "integer"
      },
      "amount_details": {
        "description": "",
        "properties": {
          "tip": {
            "$ref": "#/components/schemas/payment_flows_amount_details_resource_tip"
          }
        },
        "title": "PaymentFlowsAmountDetails",
        "type": "object",
        "x-expandableFields": [
          "tip"
        ]
      },
      "amount_received": {
        "description": "Amount that was collected by this PaymentIntent.",
        "type": "integer"
      },
      "application": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "",
          "properties": {
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "The name of the application.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Application",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "application_fee_amount": {
        "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
        "nullable": true,
        "type": "integer"
      },
      "automatic_payment_methods": [
        {
          "description": "",
          "properties": {
            "enabled": {
              "description": "Automatically calculates compatible payment methods",
              "type": "boolean"
            }
          },
          "required": [
            "enabled"
          ],
          "title": "PaymentFlowsAutomaticPaymentMethodsPaymentIntent",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "canceled_at": {
        "description": "Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "cancellation_reason": {
        "description": "Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`).",
        "enum": [
          "abandoned",
          "automatic",
          "duplicate",
          "failed_invoice",
          "fraudulent",
          "requested_by_customer",
          "void_invoice"
        ],
        "nullable": true,
        "type": "string"
      },
      "capture_method": {
        "description": "Controls when the funds will be captured from the customer's account.",
        "enum": [
          "automatic",
          "manual"
        ],
        "type": "string"
      },
      "charges": {
        "description": "Charges that were created by this PaymentIntent, if any.",
        "properties": {
          "data": {
            "description": "This list only contains the latest charge, even if there were previously multiple unsuccessful charges. To view all previous charges for a PaymentIntent, you can filter the charges list using the `payment_intent` [parameter](https://stripe.com/docs/api/charges/list#list_charges-payment_intent).",
            "items": {
              "description": "To charge a credit or a debit card, you create a `Charge` object. You can\nretrieve and refund individual charges as well as list all charges. Charges\nare identified by a unique, random ID.\n\nRelated guide: [Accept a payment with the Charges API](https://stripe.com/docs/payments/accept-a-payment-charges).",
              "properties": {
                "amount": {
                  "description": "Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
                  "type": "integer"
                },
                "amount_captured": {
                  "description": "Amount in %s captured (can be less than the amount attribute on the charge if a partial capture was made).",
                  "type": "integer"
                },
                "amount_refunded": {
                  "description": "Amount in %s refunded (can be less than the amount attribute on the charge if a partial refund was issued).",
                  "type": "integer"
                },
                "application": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/application"
                    }
                  ],
                  "description": "ID of the Connect application that created the charge.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/application"
                      }
                    ]
                  }
                },
                "application_fee": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/application_fee"
                    }
                  ],
                  "description": "The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/application_fee"
                      }
                    ]
                  }
                },
                "application_fee_amount": {
                  "description": "The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
                  "nullable": true,
                  "type": "integer"
                },
                "balance_transaction": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/balance_transaction"
                    }
                  ],
                  "description": "ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/balance_transaction"
                      }
                    ]
                  }
                },
                "billing_details": {
                  "$ref": "#/components/schemas/billing_details"
                },
                "calculated_statement_descriptor": {
                  "description": "The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "captured": {
                  "description": "If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.",
                  "type": "boolean"
                },
                "created": {
                  "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                  "format": "unix-time",
                  "type": "integer"
                },
                "currency": {
                  "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                  "type": "string"
                },
                "customer": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/customer"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_customer"
                    }
                  ],
                  "description": "ID of the customer this charge is for if one exists.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/customer"
                      },
                      {
                        "$ref": "#/components/schemas/deleted_customer"
                      }
                    ]
                  }
                },
                "description": {
                  "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                  "maxLength": 40000,
                  "nullable": true,
                  "type": "string"
                },
                "disputed": {
                  "description": "Whether the charge has been disputed.",
                  "type": "boolean"
                },
                "failure_balance_transaction": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/balance_transaction"
                    }
                  ],
                  "description": "ID of the balance transaction that describes the reversal of the balance on your account due to payment failure.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/balance_transaction"
                      }
                    ]
                  }
                },
                "failure_code": {
                  "description": "Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "failure_message": {
                  "description": "Message to user further explaining reason for charge failure if available.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "fraud_details": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/charge_fraud_details"
                    }
                  ],
                  "description": "Information on fraud assessments for the charge.",
                  "nullable": true
                },
                "id": {
                  "description": "Unique identifier for the object.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "invoice": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/invoice"
                    }
                  ],
                  "description": "ID of the invoice this charge is for if one exists.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/invoice"
                      }
                    ]
                  }
                },
                "livemode": {
                  "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                  "type": "boolean"
                },
                "metadata": {
                  "additionalProperties": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                  "type": "object"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "charge"
                  ],
                  "type": "string"
                },
                "on_behalf_of": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/account"
                    }
                  ],
                  "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers) for details.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/account"
                      }
                    ]
                  }
                },
                "outcome": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/charge_outcome"
                    }
                  ],
                  "description": "Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details.",
                  "nullable": true
                },
                "paid": {
                  "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
                  "type": "boolean"
                },
                "payment_intent": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/payment_intent"
                    }
                  ],
                  "description": "ID of the PaymentIntent associated with this charge, if one exists.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/payment_intent"
                      }
                    ]
                  }
                },
                "payment_method": {
                  "description": "ID of the payment method used in this charge.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "payment_method_details": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/payment_method_details"
                    }
                  ],
                  "description": "Details about the payment method at the time of the transaction.",
                  "nullable": true
                },
                "radar_options": {
                  "$ref": "#/components/schemas/radar_radar_options"
                },
                "receipt_email": {
                  "description": "This is the email address that the receipt for this charge was sent to.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "receipt_number": {
                  "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "receipt_url": {
                  "description": "This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "refunded": {
                  "description": "Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.",
                  "type": "boolean"
                },
                "refunds": {
                  "description": "A list of refunds that have been applied to the charge.",
                  "properties": {
                    "data": {
                      "description": "Details about each object.",
                      "items": {
                        "$ref": "#/components/schemas/refund"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "RefundList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                },
                "review": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/review"
                    }
                  ],
                  "description": "ID of the review associated with this charge if one exists.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/review"
                      }
                    ]
                  }
                },
                "shipping": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/shipping"
                    }
                  ],
                  "description": "Shipping information for the charge.",
                  "nullable": true
                },
                "source_transfer": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/transfer"
                    }
                  ],
                  "description": "The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/transfer"
                      }
                    ]
                  }
                },
                "statement_descriptor": {
                  "description": "For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "statement_descriptor_suffix": {
                  "description": "Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "status": {
                  "description": "The status of the payment is either `succeeded`, `pending`, or `failed`.",
                  "enum": [
                    "failed",
                    "pending",
                    "succeeded"
                  ],
                  "type": "string"
                },
                "transfer": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/transfer"
                    }
                  ],
                  "description": "ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).",
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/transfer"
                      }
                    ]
                  }
                },
                "transfer_data": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/charge_transfer_data"
                    }
                  ],
                  "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
                  "nullable": true
                },
                "transfer_group": {
                  "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                }
              },
              "required": [
                "amount",
                "amount_captured",
                "amount_refunded",
                "billing_details",
                "captured",
                "created",
                "currency",
                "disputed",
                "id",
                "livemode",
                "metadata",
                "object",
                "paid",
                "refunded",
                "refunds",
                "status"
              ],
              "title": "Charge",
              "type": "object",
              "x-expandableFields": [
                "application",
                "application_fee",
                "balance_transaction",
                "billing_details",
                "customer",
                "failure_balance_transaction",
                "fraud_details",
                "invoice",
                "on_behalf_of",
                "outcome",
                "payment_intent",
                "payment_method_details",
                "radar_options",
                "refunds",
                "review",
                "shipping",
                "source_transfer",
                "transfer",
                "transfer_data"
              ],
              "x-resourceId": "charge"
            },
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "PaymentFlowsPaymentIntentResourceChargeList",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      },
      "client_secret": {
        "description": "The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. \n\nThe client secret can be used to complete a payment from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.\n\nRefer to our docs to [accept a payment](https://stripe.com/docs/payments/accept-a-payment?ui=elements) and learn about how `client_secret` should be handled.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "confirmation_method": {
        "enum": [
          "automatic",
          "manual"
        ],
        "type": "string"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "customer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address.",
              "nullable": true
            },
            "balance": {
              "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
              "type": "integer"
            },
            "cash_balance": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cash_balance"
                }
              ],
              "description": "The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the customer.\n\nIf you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "delinquent": {
              "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
              "nullable": true,
              "type": "boolean"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount active on the customer, if there is one.",
              "nullable": true
            },
            "email": {
              "description": "The customer's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_credit_balance": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "The current multi-currency balances, if any, being stored on the customer.If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency.If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices.They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
              "type": "object"
            },
            "invoice_prefix": {
              "description": "The prefix for the customer used to generate unique invoice numbers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_settings": {
              "$ref": "#/components/schemas/invoice_setting_customer_setting"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The customer's full name or business name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "next_invoice_sequence": {
              "description": "The suffix of the customer's next invoice number, e.g., 0001.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            },
            "phone": {
              "description": "The customer's phone number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "preferred_locales": {
              "description": "The customer's preferred locales (languages), ordered by preference.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
              "nullable": true
            },
            "sources": {
              "description": "The customer's payment sources, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      },
                      {
                        "$ref": "#/components/schemas/source"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "subscriptions": {
              "description": "The customer's current subscriptions, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "tax": {
              "$ref": "#/components/schemas/customer_tax"
            },
            "tax_exempt": {
              "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "tax_ids": {
              "description": "The customer's tax IDs.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this customer belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object"
          ],
          "title": "Customer",
          "type": "object",
          "x-expandableFields": [
            "address",
            "cash_balance",
            "default_source",
            "discount",
            "invoice_settings",
            "shipping",
            "sources",
            "subscriptions",
            "tax",
            "tax_ids",
            "test_clock"
          ],
          "x-resourceId": "customer"
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedCustomer",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "deleted_customer"
        }
      ],
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "invoice": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Invoices are statements of amounts owed by a customer, and are either\ngenerated one-off, or generated periodically from a subscription.\n\nThey contain [invoice items](https://stripe.com/docs/api#invoiceitems), and proration adjustments\nthat may be caused by subscription upgrades/downgrades (if necessary).\n\nIf your invoice is configured to be billed through automatic charges,\nStripe automatically finalizes your invoice and attempts payment. Note\nthat finalizing the invoice,\n[when automatic](https://stripe.com/docs/billing/invoices/workflow/#auto_advance), does\nnot happen immediately as the invoice is created. Stripe waits\nuntil one hour after the last webhook was successfully sent (or the last\nwebhook timed out after failing). If you (and the platforms you may have\nconnected to) have no webhooks configured, Stripe waits one hour after\ncreation to finalize the invoice.\n\nIf your invoice is configured to be billed by sending an email, then based on your\n[email settings](https://dashboard.stripe.com/account/billing/automatic),\nStripe will email the invoice to your customer and await payment. These\nemails can contain a link to a hosted page to pay the invoice.\n\nStripe applies any customer credit on the account before determining the\namount due for the invoice (i.e., the amount that will be actually\ncharged). If the amount due for the invoice is less than Stripe's [minimum allowed charge\nper currency](/docs/currencies#minimum-and-maximum-charge-amounts), the\ninvoice is automatically marked paid, and we add the amount due to the\ncustomer's credit balance which is applied to the next invoice.\n\nMore details on the customer's credit balance are\n[here](https://stripe.com/docs/billing/customer/balance).\n\nRelated guide: [Send Invoices to Customers](https://stripe.com/docs/billing/invoices/sending).",
          "properties": {
            "account_country": {
              "description": "The country of the business associated with this invoice, most often the business creating the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_name": {
              "description": "The public name of the business associated with this invoice, most often the business creating the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_tax_ids": {
              "description": "The account tax IDs associated with the invoice. Only editable when the invoice is a draft.",
              "items": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_tax_id"
                  }
                ],
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/tax_id"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_tax_id"
                    }
                  ]
                }
              },
              "nullable": true,
              "type": "array"
            },
            "amount_due": {
              "description": "Final amount due at this time for this invoice. If the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.",
              "type": "integer"
            },
            "amount_paid": {
              "description": "The amount, in %s, that was paid.",
              "type": "integer"
            },
            "amount_remaining": {
              "description": "The difference between amount_due and amount_paid, in %s.",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ],
              "description": "ID of the Connect Application that created the invoice.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_application"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The fee in %s that will be applied to the invoice and transferred to the application owner's Stripe account when the invoice is paid.",
              "nullable": true,
              "type": "integer"
            },
            "attempt_count": {
              "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule.",
              "type": "integer"
            },
            "attempted": {
              "description": "Whether an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.",
              "type": "boolean"
            },
            "auto_advance": {
              "description": "Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance) of the invoice. When `false`, the invoice's state will not automatically advance without an explicit action.",
              "type": "boolean"
            },
            "automatic_tax": {
              "$ref": "#/components/schemas/automatic_tax"
            },
            "billing_reason": {
              "description": "Indicates the reason why the invoice was created. `subscription_cycle` indicates an invoice created by a subscription advancing into a new period. `subscription_create` indicates an invoice created due to creating a subscription. `subscription_update` indicates an invoice created due to updating a subscription. `subscription` is set for all old invoices to indicate either a change to a subscription or a period advancement. `manual` is set for all invoices unrelated to a subscription (for example: created via the invoice editor). The `upcoming` value is reserved for simulated invoices per the upcoming invoice endpoint. `subscription_threshold` indicates an invoice created due to a billing threshold being reached.",
              "enum": [
                "automatic_pending_invoice_item_invoice",
                "manual",
                "quote_accept",
                "subscription",
                "subscription_create",
                "subscription_cycle",
                "subscription_threshold",
                "subscription_update",
                "upcoming"
              ],
              "nullable": true,
              "type": "string"
            },
            "charge": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/charge"
                }
              ],
              "description": "ID of the latest charge generated for this invoice, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/charge"
                  }
                ]
              }
            },
            "collection_method": {
              "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.",
              "enum": [
                "charge_automatically",
                "send_invoice"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "custom_fields": {
              "description": "Custom fields displayed on the invoice.",
              "items": {
                "$ref": "#/components/schemas/invoice_setting_custom_field"
              },
              "nullable": true,
              "type": "array"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The ID of the customer who will be billed.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "customer_address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address. Until the invoice is finalized, this field will equal `customer.address`. Once the invoice is finalized, this field will no longer be updated.",
              "nullable": true
            },
            "customer_email": {
              "description": "The customer's email. Until the invoice is finalized, this field will equal `customer.email`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_name": {
              "description": "The customer's name. Until the invoice is finalized, this field will equal `customer.name`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_phone": {
              "description": "The customer's phone number. Until the invoice is finalized, this field will equal `customer.phone`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "The customer's shipping information. Until the invoice is finalized, this field will equal `customer.shipping`. Once the invoice is finalized, this field will no longer be updated.",
              "nullable": true
            },
            "customer_tax_exempt": {
              "description": "The customer's tax exempt status. Until the invoice is finalized, this field will equal `customer.tax_exempt`. Once the invoice is finalized, this field will no longer be updated.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "customer_tax_ids": {
              "description": "The customer's tax IDs. Until the invoice is finalized, this field will contain the same tax IDs as `customer.tax_ids`. Once the invoice is finalized, this field will no longer be updated.",
              "items": {
                "$ref": "#/components/schemas/invoices_resource_invoice_tax_id"
              },
              "nullable": true,
              "type": "array"
            },
            "default_payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "default_tax_rates": {
              "description": "The tax rates applied to this invoice, if any.",
              "items": {
                "$ref": "#/components/schemas/tax_rate"
              },
              "type": "array"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount applied to this invoice, if there is one. Not populated if there are multiple discounts.",
              "nullable": true
            },
            "discounts": {
              "description": "The discounts applied to the invoice. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
              "items": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/discount"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_discount"
                  }
                ],
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/discount"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_discount"
                    }
                  ]
                }
              },
              "nullable": true,
              "type": "array"
            },
            "due_date": {
              "description": "The date on which payment for this invoice is due. This value will be `null` for invoices where `collection_method=charge_automatically`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "ending_balance": {
              "description": "Ending customer balance after the invoice is finalized. Invoices are finalized approximately an hour after successful webhook delivery or when payment collection is attempted for the invoice. If the invoice has not been finalized yet, this will be null.",
              "nullable": true,
              "type": "integer"
            },
            "footer": {
              "description": "Footer displayed on the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "hosted_invoice_url": {
              "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_pdf": {
              "description": "The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "last_finalization_error": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/api_errors"
                }
              ],
              "description": "The error encountered during the previous attempt to finalize the invoice. This field is cleared when the invoice is successfully finalized.",
              "nullable": true
            },
            "lines": {
              "description": "The individual line items that make up the invoice. `lines` is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/line_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "InvoiceLinesList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "next_payment_attempt": {
              "description": "The time at which payment will next be attempted. This value will be `null` for invoices where `collection_method=send_invoice`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "number": {
              "description": "A unique, identifying string that appears on emails sent to the customer for this invoice. This starts with the customer's unique invoice_prefix if it is specified.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "invoice"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "paid": {
              "description": "Whether payment was successfully collected for this invoice. An invoice can be paid (most commonly) with a charge or with credit from the customer's account balance.",
              "type": "boolean"
            },
            "paid_out_of_band": {
              "description": "Returns true if the invoice was manually marked paid, returns false if the invoice hasn't been paid yet or was paid on Stripe.",
              "type": "boolean"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "The PaymentIntent associated with this invoice. The PaymentIntent is generated when the invoice is finalized, and can then be used to pay the invoice. Note that voiding an invoice will cancel the PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "payment_settings": {
              "$ref": "#/components/schemas/invoices_payment_settings"
            },
            "period_end": {
              "description": "End of the usage period during which invoice items were added to this invoice.",
              "format": "unix-time",
              "type": "integer"
            },
            "period_start": {
              "description": "Start of the usage period during which invoice items were added to this invoice.",
              "format": "unix-time",
              "type": "integer"
            },
            "post_payment_credit_notes_amount": {
              "description": "Total amount of all post-payment credit notes issued for this invoice.",
              "type": "integer"
            },
            "pre_payment_credit_notes_amount": {
              "description": "Total amount of all pre-payment credit notes issued for this invoice.",
              "type": "integer"
            },
            "quote": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/quote"
                }
              ],
              "description": "The quote this invoice was generated from.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/quote"
                  }
                ]
              }
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "rendering_options": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/invoice_setting_rendering_options"
                }
              ],
              "description": "Options for invoice PDF rendering.",
              "nullable": true
            },
            "starting_balance": {
              "description": "Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance.",
              "type": "integer"
            },
            "statement_descriptor": {
              "description": "Extra information about an invoice for the customer's credit card statement.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)",
              "enum": [
                "deleted",
                "draft",
                "open",
                "paid",
                "uncollectible",
                "void"
              ],
              "nullable": true,
              "type": "string"
            },
            "status_transitions": {
              "$ref": "#/components/schemas/invoices_status_transitions"
            },
            "subscription": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ],
              "description": "The subscription that this invoice was prepared for, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/subscription"
                  }
                ]
              }
            },
            "subscription_proration_date": {
              "description": "Only set for upcoming invoices that preview prorations. The time used to calculate prorations.",
              "type": "integer"
            },
            "subtotal": {
              "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or exclusive tax is applied. Item discounts are already incorporated",
              "type": "integer"
            },
            "subtotal_excluding_tax": {
              "description": "The integer amount in %s representing the subtotal of the invoice before any invoice level discount or tax is applied. Item discounts are already incorporated",
              "nullable": true,
              "type": "integer"
            },
            "tax": {
              "description": "The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice.",
              "nullable": true,
              "type": "integer"
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this invoice belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            },
            "threshold_reason": {
              "$ref": "#/components/schemas/invoice_threshold_reason"
            },
            "total": {
              "description": "Total after discounts and taxes.",
              "type": "integer"
            },
            "total_discount_amounts": {
              "description": "The aggregate amounts calculated per discount across all line items.",
              "items": {
                "$ref": "#/components/schemas/discounts_resource_discount_amount"
              },
              "nullable": true,
              "type": "array"
            },
            "total_excluding_tax": {
              "description": "The integer amount in %s representing the total amount of the invoice including all discounts but excluding all tax.",
              "nullable": true,
              "type": "integer"
            },
            "total_tax_amounts": {
              "description": "The aggregate amounts calculated per tax rate for all line items.",
              "items": {
                "$ref": "#/components/schemas/invoice_tax_amount"
              },
              "type": "array"
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/invoice_transfer_data"
                }
              ],
              "description": "The account (if any) the payment will be attributed to for tax reporting, and where funds from the payment will be transferred to for the invoice.",
              "nullable": true
            },
            "webhooks_delivered_at": {
              "description": "Invoices are automatically paid or sent 1 hour after webhooks are delivered, or until all webhook delivery attempts have [been exhausted](https://stripe.com/docs/billing/webhooks#understand). This field tracks the time when webhooks for this invoice were successfully delivered. If the invoice had no webhooks to deliver, this will be set while the invoice is being created.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            }
          },
          "required": [
            "amount_due",
            "amount_paid",
            "amount_remaining",
            "attempt_count",
            "attempted",
            "automatic_tax",
            "collection_method",
            "created",
            "currency",
            "default_tax_rates",
            "lines",
            "livemode",
            "object",
            "paid",
            "paid_out_of_band",
            "payment_settings",
            "period_end",
            "period_start",
            "post_payment_credit_notes_amount",
            "pre_payment_credit_notes_amount",
            "starting_balance",
            "status_transitions",
            "subtotal",
            "total",
            "total_tax_amounts"
          ],
          "title": "Invoice",
          "type": "object",
          "x-expandableFields": [
            "account_tax_ids",
            "application",
            "automatic_tax",
            "charge",
            "custom_fields",
            "customer",
            "customer_address",
            "customer_shipping",
            "customer_tax_ids",
            "default_payment_method",
            "default_source",
            "default_tax_rates",
            "discount",
            "discounts",
            "last_finalization_error",
            "lines",
            "on_behalf_of",
            "payment_intent",
            "payment_settings",
            "quote",
            "rendering_options",
            "status_transitions",
            "subscription",
            "test_clock",
            "threshold_reason",
            "total_discount_amounts",
            "total_tax_amounts",
            "transfer_data"
          ],
          "x-resourceId": "invoice"
        }
      ],
      "last_payment_error": [
        {
          "description": "",
          "properties": {
            "charge": {
              "description": "For card errors, the ID of the failed charge.",
              "maxLength": 5000,
              "type": "string"
            },
            "code": {
              "description": "For some errors that could be handled programmatically, a short string indicating the [error code](https://stripe.com/docs/error-codes) reported.",
              "maxLength": 5000,
              "type": "string"
            },
            "decline_code": {
              "description": "For card errors resulting from a card issuer decline, a short string indicating the [card issuer's reason for the decline](https://stripe.com/docs/declines#issuer-declines) if they provide one.",
              "maxLength": 5000,
              "type": "string"
            },
            "doc_url": {
              "description": "A URL to more information about the [error code](https://stripe.com/docs/error-codes) reported.",
              "maxLength": 5000,
              "type": "string"
            },
            "message": {
              "description": "A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.",
              "maxLength": 40000,
              "type": "string"
            },
            "param": {
              "description": "If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.",
              "maxLength": 5000,
              "type": "string"
            },
            "payment_intent": {
              "$ref": "#/components/schemas/payment_intent"
            },
            "payment_method": {
              "$ref": "#/components/schemas/payment_method"
            },
            "payment_method_type": {
              "description": "If the error is specific to the type of payment method, the payment method type that had a problem. This field is only populated for invoice-related errors.",
              "maxLength": 5000,
              "type": "string"
            },
            "setup_intent": {
              "$ref": "#/components/schemas/setup_intent"
            },
            "source": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "The source object for errors returned on a request involving a source."
            },
            "type": {
              "description": "The type of error returned. One of `api_error`, `card_error`, `idempotency_error`, or `invalid_request_error`",
              "enum": [
                "api_error",
                "card_error",
                "idempotency_error",
                "invalid_request_error"
              ],
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "APIErrors",
          "type": "object",
          "x-expandableFields": [
            "payment_intent",
            "payment_method",
            "setup_intent",
            "source"
          ]
        }
      ],
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. For more information, see the [documentation](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).",
        "type": "object"
      },
      "next_action": [
        {
          "description": "",
          "properties": {
            "alipay_handle_redirect": {
              "$ref": "#/components/schemas/payment_intent_next_action_alipay_handle_redirect"
            },
            "boleto_display_details": {
              "$ref": "#/components/schemas/payment_intent_next_action_boleto"
            },
            "card_await_notification": {
              "$ref": "#/components/schemas/payment_intent_next_action_card_await_notification"
            },
            "display_bank_transfer_instructions": {
              "$ref": "#/components/schemas/payment_intent_next_action_display_bank_transfer_instructions"
            },
            "konbini_display_details": {
              "$ref": "#/components/schemas/payment_intent_next_action_konbini"
            },
            "oxxo_display_details": {
              "$ref": "#/components/schemas/payment_intent_next_action_display_oxxo_details"
            },
            "paynow_display_qr_code": {
              "$ref": "#/components/schemas/payment_intent_next_action_paynow_display_qr_code"
            },
            "promptpay_display_qr_code": {
              "$ref": "#/components/schemas/payment_intent_next_action_promptpay_display_qr_code"
            },
            "redirect_to_url": {
              "$ref": "#/components/schemas/payment_intent_next_action_redirect_to_url"
            },
            "type": {
              "description": "Type of the next action to perform, one of `redirect_to_url`, `use_stripe_sdk`, `alipay_handle_redirect`, `oxxo_display_details`, or `verify_with_microdeposits`.",
              "maxLength": 5000,
              "type": "string"
            },
            "use_stripe_sdk": {
              "description": "When confirming a PaymentIntent with Stripe.js, Stripe.js depends on the contents of this dictionary to invoke authentication flows. The shape of the contents is subject to change and is only intended to be used by Stripe.js.",
              "type": "object"
            },
            "verify_with_microdeposits": {
              "$ref": "#/components/schemas/payment_intent_next_action_verify_with_microdeposits"
            },
            "wechat_pay_display_qr_code": {
              "$ref": "#/components/schemas/payment_intent_next_action_wechat_pay_display_qr_code"
            },
            "wechat_pay_redirect_to_android_app": {
              "$ref": "#/components/schemas/payment_intent_next_action_wechat_pay_redirect_to_android_app"
            },
            "wechat_pay_redirect_to_ios_app": {
              "$ref": "#/components/schemas/payment_intent_next_action_wechat_pay_redirect_to_ios_app"
            }
          },
          "required": [
            "type"
          ],
          "title": "PaymentIntentNextAction",
          "type": "object",
          "x-expandableFields": [
            "alipay_handle_redirect",
            "boleto_display_details",
            "card_await_notification",
            "display_bank_transfer_instructions",
            "konbini_display_details",
            "oxxo_display_details",
            "paynow_display_qr_code",
            "promptpay_display_qr_code",
            "redirect_to_url",
            "verify_with_microdeposits",
            "wechat_pay_display_qr_code",
            "wechat_pay_redirect_to_android_app",
            "wechat_pay_redirect_to_ios_app"
          ]
        }
      ],
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "payment_intent"
        ],
        "type": "string"
      },
      "on_behalf_of": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current e-mail address or if the account is\nenabled yet to make live charges.\n\nSome properties, marked below, are available only to platforms that want to\n[create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts).",
          "properties": {
            "business_profile": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_business_profile"
                }
              ],
              "description": "Business information about the account.",
              "nullable": true
            },
            "business_type": {
              "description": "The business type.",
              "enum": [
                "company",
                "government_entity",
                "individual",
                "non_profit"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "capabilities": {
              "$ref": "#/components/schemas/account_capabilities"
            },
            "charges_enabled": {
              "description": "Whether the account can create live charges.",
              "type": "boolean"
            },
            "company": {
              "$ref": "#/components/schemas/legal_entity_company"
            },
            "controller": {
              "$ref": "#/components/schemas/account_unification_account_controller"
            },
            "country": {
              "description": "The account's country.",
              "maxLength": 5000,
              "type": "string"
            },
            "created": {
              "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "default_currency": {
              "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
              "maxLength": 5000,
              "type": "string"
            },
            "details_submitted": {
              "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
              "type": "boolean"
            },
            "email": {
              "description": "An email address associated with the account. You can treat this as metadata: it is not used for authentication or messaging account holders.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "external_accounts": {
              "description": "External accounts (bank accounts and debit cards) currently attached to this account",
              "properties": {
                "data": {
                  "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ExternalAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "future_requirements": {
              "$ref": "#/components/schemas/account_future_requirements"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "individual": {
              "$ref": "#/components/schemas/person"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "account"
              ],
              "type": "string"
            },
            "payouts_enabled": {
              "description": "Whether Stripe can send payouts to this account.",
              "type": "boolean"
            },
            "requirements": {
              "$ref": "#/components/schemas/account_requirements"
            },
            "settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_settings"
                }
              ],
              "description": "Options for customizing how the account functions within Stripe.",
              "nullable": true
            },
            "tos_acceptance": {
              "$ref": "#/components/schemas/account_tos_acceptance"
            },
            "type": {
              "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
              "enum": [
                "custom",
                "express",
                "standard"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Account",
          "type": "object",
          "x-expandableFields": [
            "business_profile",
            "capabilities",
            "company",
            "controller",
            "external_accounts",
            "future_requirements",
            "individual",
            "requirements",
            "settings",
            "tos_acceptance"
          ],
          "x-resourceId": "account"
        }
      ],
      "payment_method": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "PaymentMethod objects represent your customer's payment instruments.\nYou can use them with [PaymentIntents](https://stripe.com/docs/payments/payment-intents) to collect payments or save them to\nCustomer objects to store instrument details for future payments.\n\nRelated guides: [Payment Methods](https://stripe.com/docs/payments/payment-methods) and [More Payment Scenarios](https://stripe.com/docs/payments/more-payment-scenarios).",
          "properties": {
            "acss_debit": {
              "$ref": "#/components/schemas/payment_method_acss_debit"
            },
            "affirm": {
              "$ref": "#/components/schemas/payment_method_affirm"
            },
            "afterpay_clearpay": {
              "$ref": "#/components/schemas/payment_method_afterpay_clearpay"
            },
            "alipay": {
              "$ref": "#/components/schemas/payment_flows_private_payment_methods_alipay"
            },
            "au_becs_debit": {
              "$ref": "#/components/schemas/payment_method_au_becs_debit"
            },
            "bacs_debit": {
              "$ref": "#/components/schemas/payment_method_bacs_debit"
            },
            "bancontact": {
              "$ref": "#/components/schemas/payment_method_bancontact"
            },
            "billing_details": {
              "$ref": "#/components/schemas/billing_details"
            },
            "blik": {
              "$ref": "#/components/schemas/payment_method_blik"
            },
            "boleto": {
              "$ref": "#/components/schemas/payment_method_boleto"
            },
            "card": {
              "$ref": "#/components/schemas/payment_method_card"
            },
            "card_present": {
              "$ref": "#/components/schemas/payment_method_card_present"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                }
              ],
              "description": "The ID of the Customer to which this PaymentMethod is saved. This will not be set when the PaymentMethod has not been saved to a Customer.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  }
                ]
              }
            },
            "customer_balance": {
              "$ref": "#/components/schemas/payment_method_customer_balance"
            },
            "eps": {
              "$ref": "#/components/schemas/payment_method_eps"
            },
            "fpx": {
              "$ref": "#/components/schemas/payment_method_fpx"
            },
            "giropay": {
              "$ref": "#/components/schemas/payment_method_giropay"
            },
            "grabpay": {
              "$ref": "#/components/schemas/payment_method_grabpay"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "ideal": {
              "$ref": "#/components/schemas/payment_method_ideal"
            },
            "interac_present": {
              "$ref": "#/components/schemas/payment_method_interac_present"
            },
            "klarna": {
              "$ref": "#/components/schemas/payment_method_klarna"
            },
            "konbini": {
              "$ref": "#/components/schemas/payment_method_konbini"
            },
            "link": {
              "$ref": "#/components/schemas/payment_method_link"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "payment_method"
              ],
              "type": "string"
            },
            "oxxo": {
              "$ref": "#/components/schemas/payment_method_oxxo"
            },
            "p24": {
              "$ref": "#/components/schemas/payment_method_p24"
            },
            "paynow": {
              "$ref": "#/components/schemas/payment_method_paynow"
            },
            "promptpay": {
              "$ref": "#/components/schemas/payment_method_promptpay"
            },
            "radar_options": {
              "$ref": "#/components/schemas/radar_radar_options"
            },
            "sepa_debit": {
              "$ref": "#/components/schemas/payment_method_sepa_debit"
            },
            "sofort": {
              "$ref": "#/components/schemas/payment_method_sofort"
            },
            "type": {
              "description": "The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.",
              "enum": [
                "acss_debit",
                "affirm",
                "afterpay_clearpay",
                "alipay",
                "au_becs_debit",
                "bacs_debit",
                "bancontact",
                "blik",
                "boleto",
                "card",
                "card_present",
                "customer_balance",
                "eps",
                "fpx",
                "giropay",
                "grabpay",
                "ideal",
                "interac_present",
                "klarna",
                "konbini",
                "link",
                "oxxo",
                "p24",
                "paynow",
                "promptpay",
                "sepa_debit",
                "sofort",
                "us_bank_account",
                "wechat_pay"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "us_bank_account": {
              "$ref": "#/components/schemas/payment_method_us_bank_account"
            },
            "wechat_pay": {
              "$ref": "#/components/schemas/payment_method_wechat_pay"
            }
          },
          "required": [
            "billing_details",
            "created",
            "id",
            "livemode",
            "object",
            "type"
          ],
          "title": "PaymentMethod",
          "type": "object",
          "x-expandableFields": [
            "acss_debit",
            "affirm",
            "afterpay_clearpay",
            "alipay",
            "au_becs_debit",
            "bacs_debit",
            "bancontact",
            "billing_details",
            "blik",
            "boleto",
            "card",
            "card_present",
            "customer",
            "customer_balance",
            "eps",
            "fpx",
            "giropay",
            "grabpay",
            "ideal",
            "interac_present",
            "klarna",
            "konbini",
            "link",
            "oxxo",
            "p24",
            "paynow",
            "promptpay",
            "radar_options",
            "sepa_debit",
            "sofort",
            "us_bank_account",
            "wechat_pay"
          ],
          "x-resourceId": "payment_method"
        }
      ],
      "payment_method_options": [
        {
          "description": "",
          "properties": {
            "acss_debit": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_payment_method_options_acss_debit"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "affirm": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_affirm"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "afterpay_clearpay": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_afterpay_clearpay"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "alipay": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_alipay"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "au_becs_debit": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_payment_method_options_au_becs_debit"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "bacs_debit": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_bacs_debit"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "bancontact": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_bancontact"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "blik": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_payment_method_options_blik"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "boleto": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_boleto"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "card": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_payment_method_options_card"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "card_present": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_card_present"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "customer_balance": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_customer_balance"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "eps": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_payment_method_options_eps"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "fpx": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_fpx"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "giropay": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_giropay"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "grabpay": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_grabpay"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "ideal": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_ideal"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "interac_present": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_interac_present"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "klarna": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_klarna"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "konbini": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_konbini"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "link": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_payment_method_options_link"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "oxxo": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_oxxo"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "p24": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_p24"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "paynow": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_paynow"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "promptpay": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_promptpay"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "sepa_debit": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_payment_method_options_sepa_debit"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "sofort": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_sofort"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "us_bank_account": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_payment_method_options_us_bank_account"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "wechat_pay": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_options_wechat_pay"
                },
                {
                  "$ref": "#/components/schemas/payment_intent_type_specific_payment_method_options_client"
                }
              ]
            }
          },
          "title": "PaymentIntentPaymentMethodOptions",
          "type": "object",
          "x-expandableFields": [
            "acss_debit",
            "affirm",
            "afterpay_clearpay",
            "alipay",
            "au_becs_debit",
            "bacs_debit",
            "bancontact",
            "blik",
            "boleto",
            "card",
            "card_present",
            "customer_balance",
            "eps",
            "fpx",
            "giropay",
            "grabpay",
            "ideal",
            "interac_present",
            "klarna",
            "konbini",
            "link",
            "oxxo",
            "p24",
            "paynow",
            "promptpay",
            "sepa_debit",
            "sofort",
            "us_bank_account",
            "wechat_pay"
          ]
        }
      ],
      "payment_method_types": {
        "description": "The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.",
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "processing": [
        {
          "description": "",
          "properties": {
            "card": {
              "$ref": "#/components/schemas/payment_intent_card_processing"
            },
            "type": {
              "description": "Type of the payment method for which payment is in `processing` state, one of `card`.",
              "enum": [
                "card"
              ],
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "PaymentIntentProcessing",
          "type": "object",
          "x-expandableFields": [
            "card"
          ]
        }
      ],
      "receipt_email": {
        "description": "Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "review": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Reviews can be used to supplement automated fraud detection with human expertise.\n\nLearn more about [Radar](/radar) and reviewing payments\n[here](https://stripe.com/docs/radar/reviews).",
          "properties": {
            "billing_zip": {
              "description": "The ZIP or postal code of the card used, if applicable.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "charge": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/charge"
                }
              ],
              "description": "The charge associated with this review.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/charge"
                  }
                ]
              }
            },
            "closed_reason": {
              "description": "The reason the review was closed, or null if it has not yet been closed. One of `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.",
              "enum": [
                "approved",
                "disputed",
                "redacted",
                "refunded",
                "refunded_as_fraud"
              ],
              "nullable": true,
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "ip_address": {
              "description": "The IP address where the payment originated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "ip_address_location": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/radar_review_resource_location"
                }
              ],
              "description": "Information related to the location of the payment. Note that this information is an approximation and attempts to locate the nearest population center - it should not be used to determine a specific address.",
              "nullable": true
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "review"
              ],
              "type": "string"
            },
            "open": {
              "description": "If `true`, the review needs action.",
              "type": "boolean"
            },
            "opened_reason": {
              "description": "The reason the review was opened. One of `rule` or `manual`.",
              "enum": [
                "manual",
                "rule"
              ],
              "type": "string"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "The PaymentIntent ID associated with this review, if one exists.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "reason": {
              "description": "The reason the review is currently open or closed. One of `rule`, `manual`, `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.",
              "maxLength": 5000,
              "type": "string"
            },
            "session": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/radar_review_resource_session"
                }
              ],
              "description": "Information related to the browsing session of the user who initiated the payment.",
              "nullable": true
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object",
            "open",
            "opened_reason",
            "reason"
          ],
          "title": "RadarReview",
          "type": "object",
          "x-expandableFields": [
            "charge",
            "ip_address_location",
            "payment_intent",
            "session"
          ],
          "x-resourceId": "review"
        }
      ],
      "setup_future_usage": {
        "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
        "enum": [
          "off_session",
          "on_session"
        ],
        "nullable": true,
        "type": "string"
      },
      "shipping": [
        {
          "description": "",
          "properties": {
            "address": {
              "$ref": "#/components/schemas/address"
            },
            "carrier": {
              "description": "The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "name": {
              "description": "Recipient name.",
              "maxLength": 5000,
              "type": "string"
            },
            "phone": {
              "description": "Recipient phone (including extension).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tracking_number": {
              "description": "The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "Shipping",
          "type": "object",
          "x-expandableFields": [
            "address"
          ]
        }
      ],
      "statement_descriptor": {
        "description": "For non-card charges, you can use this value as the complete description that appears on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "statement_descriptor_suffix": {
        "description": "Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "status": {
        "description": "Status of this PaymentIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `requires_capture`, `canceled`, or `succeeded`. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses).",
        "enum": [
          "canceled",
          "processing",
          "requires_action",
          "requires_capture",
          "requires_confirmation",
          "requires_payment_method",
          "succeeded"
        ],
        "type": "string"
      },
      "transfer_data": [
        {
          "description": "",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "destination": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) the payment will be attributed to for tax\nreporting, and where funds from the payment will be transferred to upon\npayment success.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            }
          },
          "required": [
            "destination"
          ],
          "title": "transfer_data",
          "type": "object",
          "x-expandableFields": [
            "destination"
          ]
        }
      ],
      "transfer_group": {
        "description": "A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      }
    },
    "required": [
      "amount",
      "capture_method",
      "confirmation_method",
      "created",
      "currency",
      "id",
      "livemode",
      "object",
      "payment_method_types",
      "status"
    ],
    "title": "PaymentIntent",
    "type": "object",
    "x-expandableFields": [
      "amount_details",
      "application",
      "automatic_payment_methods",
      "charges",
      "customer",
      "invoice",
      "last_payment_error",
      "next_action",
      "on_behalf_of",
      "payment_method",
      "payment_method_options",
      "processing",
      "review",
      "shipping",
      "transfer_data"
    ],
    "x-resourceId": "payment_intent"
  },
  "payment_link": {
    "description": "A payment link is a shareable URL that will take your customers to a hosted payment page. A payment link can be shared and used multiple times.\n\nWhen a customer opens a payment link it will open a new [checkout session](https://stripe.com/docs/api/checkout/sessions) to render the payment page. You can use [checkout session events](https://stripe.com/docs/api/events/types#event_types-checkout.session.completed) to track payments through payment links.\n\nRelated guide: [Payment Links API](https://stripe.com/docs/payments/payment-links/api)",
    "properties": {
      "active": {
        "description": "Whether the payment link's `url` is active. If `false`, customers visiting the URL will be shown a page saying that the link has been deactivated.",
        "type": "boolean"
      },
      "after_completion": {
        "description": "",
        "properties": {
          "hosted_confirmation": {
            "$ref": "#/components/schemas/payment_links_resource_completion_behavior_confirmation_page"
          },
          "redirect": {
            "$ref": "#/components/schemas/payment_links_resource_completion_behavior_redirect"
          },
          "type": {
            "description": "The specified behavior after the purchase is complete.",
            "enum": [
              "hosted_confirmation",
              "redirect"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "PaymentLinksResourceAfterCompletion",
        "type": "object",
        "x-expandableFields": [
          "hosted_confirmation",
          "redirect"
        ]
      },
      "allow_promotion_codes": {
        "description": "Whether user redeemable promotion codes are enabled.",
        "type": "boolean"
      },
      "application_fee_amount": {
        "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account.",
        "nullable": true,
        "type": "integer"
      },
      "application_fee_percent": {
        "description": "This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.",
        "nullable": true,
        "type": "number"
      },
      "automatic_tax": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "If `true`, tax will be calculated automatically using the customer's location.",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "PaymentLinksResourceAutomaticTax",
        "type": "object",
        "x-expandableFields": []
      },
      "billing_address_collection": {
        "description": "Configuration for collecting the customer's billing address.",
        "enum": [
          "auto",
          "required"
        ],
        "type": "string"
      },
      "consent_collection": [
        {
          "description": "",
          "properties": {
            "promotions": {
              "description": "If set to `auto`, enables the collection of customer consent for promotional communications.",
              "enum": [
                "auto",
                "none"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          "title": "PaymentLinksResourceConsentCollection",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "customer_creation": {
        "description": "Configuration for Customer creation during checkout.",
        "enum": [
          "always",
          "if_required"
        ],
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "line_items": {
        "description": "The line items representing what is being sold.",
        "properties": {
          "data": {
            "description": "Details about each object.",
            "items": {
              "description": "A line item.",
              "properties": {
                "amount_discount": {
                  "description": "Total discount amount applied. If no discounts were applied, defaults to 0.",
                  "type": "integer"
                },
                "amount_subtotal": {
                  "description": "Total before any discounts or taxes are applied.",
                  "type": "integer"
                },
                "amount_tax": {
                  "description": "Total tax amount applied. If no tax was applied, defaults to 0.",
                  "type": "integer"
                },
                "amount_total": {
                  "description": "Total after discounts and taxes.",
                  "type": "integer"
                },
                "currency": {
                  "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                  "type": "string"
                },
                "description": {
                  "description": "An arbitrary string attached to the object. Often useful for displaying to users. Defaults to product name.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "discounts": {
                  "description": "The discounts applied to the line item.",
                  "items": {
                    "$ref": "#/components/schemas/line_items_discount_amount"
                  },
                  "type": "array"
                },
                "id": {
                  "description": "Unique identifier for the object.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "item"
                  ],
                  "type": "string"
                },
                "price": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/price"
                    }
                  ],
                  "description": "The price used to generate the line item.",
                  "nullable": true
                },
                "product": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/product"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_product"
                    }
                  ],
                  "description": "The ID of the product for this line item.\n\nThis will always be the same as `price.product`.",
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/product"
                      },
                      {
                        "$ref": "#/components/schemas/deleted_product"
                      }
                    ]
                  }
                },
                "quantity": {
                  "description": "The quantity of products being purchased.",
                  "nullable": true,
                  "type": "integer"
                },
                "taxes": {
                  "description": "The taxes applied to the line item.",
                  "items": {
                    "$ref": "#/components/schemas/line_items_tax_amount"
                  },
                  "type": "array"
                }
              },
              "required": [
                "amount_discount",
                "amount_subtotal",
                "amount_tax",
                "amount_total",
                "currency",
                "description",
                "id",
                "object"
              ],
              "title": "LineItem",
              "type": "object",
              "x-expandableFields": [
                "discounts",
                "price",
                "product",
                "taxes"
              ],
              "x-resourceId": "item"
            },
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "PaymentLinksResourceListLineItems",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "payment_link"
        ],
        "type": "string"
      },
      "on_behalf_of": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current e-mail address or if the account is\nenabled yet to make live charges.\n\nSome properties, marked below, are available only to platforms that want to\n[create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts).",
          "properties": {
            "business_profile": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_business_profile"
                }
              ],
              "description": "Business information about the account.",
              "nullable": true
            },
            "business_type": {
              "description": "The business type.",
              "enum": [
                "company",
                "government_entity",
                "individual",
                "non_profit"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "capabilities": {
              "$ref": "#/components/schemas/account_capabilities"
            },
            "charges_enabled": {
              "description": "Whether the account can create live charges.",
              "type": "boolean"
            },
            "company": {
              "$ref": "#/components/schemas/legal_entity_company"
            },
            "controller": {
              "$ref": "#/components/schemas/account_unification_account_controller"
            },
            "country": {
              "description": "The account's country.",
              "maxLength": 5000,
              "type": "string"
            },
            "created": {
              "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "default_currency": {
              "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
              "maxLength": 5000,
              "type": "string"
            },
            "details_submitted": {
              "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
              "type": "boolean"
            },
            "email": {
              "description": "An email address associated with the account. You can treat this as metadata: it is not used for authentication or messaging account holders.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "external_accounts": {
              "description": "External accounts (bank accounts and debit cards) currently attached to this account",
              "properties": {
                "data": {
                  "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ExternalAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "future_requirements": {
              "$ref": "#/components/schemas/account_future_requirements"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "individual": {
              "$ref": "#/components/schemas/person"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "account"
              ],
              "type": "string"
            },
            "payouts_enabled": {
              "description": "Whether Stripe can send payouts to this account.",
              "type": "boolean"
            },
            "requirements": {
              "$ref": "#/components/schemas/account_requirements"
            },
            "settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_settings"
                }
              ],
              "description": "Options for customizing how the account functions within Stripe.",
              "nullable": true
            },
            "tos_acceptance": {
              "$ref": "#/components/schemas/account_tos_acceptance"
            },
            "type": {
              "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
              "enum": [
                "custom",
                "express",
                "standard"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Account",
          "type": "object",
          "x-expandableFields": [
            "business_profile",
            "capabilities",
            "company",
            "controller",
            "external_accounts",
            "future_requirements",
            "individual",
            "requirements",
            "settings",
            "tos_acceptance"
          ],
          "x-resourceId": "account"
        }
      ],
      "payment_intent_data": [
        {
          "description": "",
          "properties": {
            "capture_method": {
              "description": "Indicates when the funds will be captured from the customer's account.",
              "enum": [
                "automatic",
                "manual"
              ],
              "nullable": true,
              "type": "string"
            },
            "setup_future_usage": {
              "description": "Indicates that you intend to make future payments with the payment method collected during checkout.",
              "enum": [
                "off_session",
                "on_session"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          "title": "PaymentLinksResourcePaymentIntentData",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "payment_method_collection": {
        "description": "Configuration for collecting a payment method during checkout.",
        "enum": [
          "always",
          "if_required"
        ],
        "type": "string"
      },
      "payment_method_types": {
        "description": "The list of payment method types that customers can use. When `null`, Stripe will dynamically show relevant payment methods you've enabled in your [payment method settings](https://dashboard.stripe.com/settings/payment_methods).",
        "items": {
          "enum": [
            "affirm",
            "afterpay_clearpay",
            "alipay",
            "au_becs_debit",
            "bacs_debit",
            "bancontact",
            "blik",
            "boleto",
            "card",
            "eps",
            "fpx",
            "giropay",
            "grabpay",
            "ideal",
            "klarna",
            "konbini",
            "oxxo",
            "p24",
            "paynow",
            "promptpay",
            "sepa_debit",
            "sofort",
            "us_bank_account",
            "wechat_pay"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "nullable": true,
        "type": "array"
      },
      "phone_number_collection": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "If `true`, a phone number will be collected during checkout.",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "PaymentLinksResourcePhoneNumberCollection",
        "type": "object",
        "x-expandableFields": []
      },
      "shipping_address_collection": [
        {
          "description": "",
          "properties": {
            "allowed_countries": {
              "description": "An array of two-letter ISO country codes representing which countries Checkout should provide as options for shipping locations. Unsupported country codes: `AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD, SY, UM, VI`.",
              "items": {
                "enum": [
                  "AC",
                  "AD",
                  "AE",
                  "AF",
                  "AG",
                  "AI",
                  "AL",
                  "AM",
                  "AO",
                  "AQ",
                  "AR",
                  "AT",
                  "AU",
                  "AW",
                  "AX",
                  "AZ",
                  "BA",
                  "BB",
                  "BD",
                  "BE",
                  "BF",
                  "BG",
                  "BH",
                  "BI",
                  "BJ",
                  "BL",
                  "BM",
                  "BN",
                  "BO",
                  "BQ",
                  "BR",
                  "BS",
                  "BT",
                  "BV",
                  "BW",
                  "BY",
                  "BZ",
                  "CA",
                  "CD",
                  "CF",
                  "CG",
                  "CH",
                  "CI",
                  "CK",
                  "CL",
                  "CM",
                  "CN",
                  "CO",
                  "CR",
                  "CV",
                  "CW",
                  "CY",
                  "CZ",
                  "DE",
                  "DJ",
                  "DK",
                  "DM",
                  "DO",
                  "DZ",
                  "EC",
                  "EE",
                  "EG",
                  "EH",
                  "ER",
                  "ES",
                  "ET",
                  "FI",
                  "FJ",
                  "FK",
                  "FO",
                  "FR",
                  "GA",
                  "GB",
                  "GD",
                  "GE",
                  "GF",
                  "GG",
                  "GH",
                  "GI",
                  "GL",
                  "GM",
                  "GN",
                  "GP",
                  "GQ",
                  "GR",
                  "GS",
                  "GT",
                  "GU",
                  "GW",
                  "GY",
                  "HK",
                  "HN",
                  "HR",
                  "HT",
                  "HU",
                  "ID",
                  "IE",
                  "IL",
                  "IM",
                  "IN",
                  "IO",
                  "IQ",
                  "IS",
                  "IT",
                  "JE",
                  "JM",
                  "JO",
                  "JP",
                  "KE",
                  "KG",
                  "KH",
                  "KI",
                  "KM",
                  "KN",
                  "KR",
                  "KW",
                  "KY",
                  "KZ",
                  "LA",
                  "LB",
                  "LC",
                  "LI",
                  "LK",
                  "LR",
                  "LS",
                  "LT",
                  "LU",
                  "LV",
                  "LY",
                  "MA",
                  "MC",
                  "MD",
                  "ME",
                  "MF",
                  "MG",
                  "MK",
                  "ML",
                  "MM",
                  "MN",
                  "MO",
                  "MQ",
                  "MR",
                  "MS",
                  "MT",
                  "MU",
                  "MV",
                  "MW",
                  "MX",
                  "MY",
                  "MZ",
                  "NA",
                  "NC",
                  "NE",
                  "NG",
                  "NI",
                  "NL",
                  "NO",
                  "NP",
                  "NR",
                  "NU",
                  "NZ",
                  "OM",
                  "PA",
                  "PE",
                  "PF",
                  "PG",
                  "PH",
                  "PK",
                  "PL",
                  "PM",
                  "PN",
                  "PR",
                  "PS",
                  "PT",
                  "PY",
                  "QA",
                  "RE",
                  "RO",
                  "RS",
                  "RU",
                  "RW",
                  "SA",
                  "SB",
                  "SC",
                  "SE",
                  "SG",
                  "SH",
                  "SI",
                  "SJ",
                  "SK",
                  "SL",
                  "SM",
                  "SN",
                  "SO",
                  "SR",
                  "SS",
                  "ST",
                  "SV",
                  "SX",
                  "SZ",
                  "TA",
                  "TC",
                  "TD",
                  "TF",
                  "TG",
                  "TH",
                  "TJ",
                  "TK",
                  "TL",
                  "TM",
                  "TN",
                  "TO",
                  "TR",
                  "TT",
                  "TV",
                  "TW",
                  "TZ",
                  "UA",
                  "UG",
                  "US",
                  "UY",
                  "UZ",
                  "VA",
                  "VC",
                  "VE",
                  "VG",
                  "VN",
                  "VU",
                  "WF",
                  "WS",
                  "XK",
                  "YE",
                  "YT",
                  "ZA",
                  "ZM",
                  "ZW",
                  "ZZ"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "allowed_countries"
          ],
          "title": "PaymentLinksResourceShippingAddressCollection",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "shipping_options": {
        "description": "The shipping rate options applied to the session.",
        "items": {
          "description": "",
          "properties": {
            "shipping_amount": {
              "description": "A non-negative integer in cents representing how much to charge.",
              "type": "integer"
            },
            "shipping_rate": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/shipping_rate"
                }
              ],
              "description": "The ID of the Shipping Rate to use for this shipping option.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/shipping_rate"
                  }
                ]
              }
            }
          },
          "required": [
            "shipping_amount",
            "shipping_rate"
          ],
          "title": "PaymentLinksResourceShippingOption",
          "type": "object",
          "x-expandableFields": [
            "shipping_rate"
          ]
        },
        "type": "array"
      },
      "submit_type": {
        "description": "Indicates the type of transaction being performed which customizes relevant text on the page, such as the submit button.",
        "enum": [
          "auto",
          "book",
          "donate",
          "pay"
        ],
        "type": "string"
      },
      "subscription_data": [
        {
          "description": "",
          "properties": {
            "trial_period_days": {
              "description": "Integer representing the number of trial period days before the customer is charged for the first time.",
              "nullable": true,
              "type": "integer"
            }
          },
          "title": "PaymentLinksResourceSubscriptionData",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "tax_id_collection": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Indicates whether tax ID collection is enabled for the session.",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "PaymentLinksResourceTaxIdCollection",
        "type": "object",
        "x-expandableFields": []
      },
      "transfer_data": [
        {
          "description": "",
          "properties": {
            "amount": {
              "description": "The amount in %s that will be transferred to the destination account. By default, the entire amount is transferred to the destination.",
              "nullable": true,
              "type": "integer"
            },
            "destination": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The connected account receiving the transfer.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            }
          },
          "required": [
            "destination"
          ],
          "title": "PaymentLinksResourceTransferData",
          "type": "object",
          "x-expandableFields": [
            "destination"
          ]
        }
      ],
      "url": {
        "description": "The public URL that can be shared with customers.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "active",
      "after_completion",
      "allow_promotion_codes",
      "automatic_tax",
      "billing_address_collection",
      "currency",
      "customer_creation",
      "id",
      "livemode",
      "metadata",
      "object",
      "payment_method_collection",
      "phone_number_collection",
      "shipping_options",
      "submit_type",
      "tax_id_collection",
      "url"
    ],
    "title": "PaymentLink",
    "type": "object",
    "x-expandableFields": [
      "after_completion",
      "automatic_tax",
      "consent_collection",
      "line_items",
      "on_behalf_of",
      "payment_intent_data",
      "phone_number_collection",
      "shipping_address_collection",
      "shipping_options",
      "subscription_data",
      "tax_id_collection",
      "transfer_data"
    ],
    "x-resourceId": "payment_link"
  },
  "payment_method": {
    "description": "PaymentMethod objects represent your customer's payment instruments.\nYou can use them with [PaymentIntents](https://stripe.com/docs/payments/payment-intents) to collect payments or save them to\nCustomer objects to store instrument details for future payments.\n\nRelated guides: [Payment Methods](https://stripe.com/docs/payments/payment-methods) and [More Payment Scenarios](https://stripe.com/docs/payments/more-payment-scenarios).",
    "properties": {
      "acss_debit": {
        "description": "",
        "properties": {
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "institution_number": {
            "description": "Institution number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "transit_number": {
            "description": "Transit number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_acss_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "affirm": {
        "description": "",
        "properties": {},
        "title": "payment_method_affirm",
        "type": "object",
        "x-expandableFields": []
      },
      "afterpay_clearpay": {
        "description": "",
        "properties": {},
        "title": "payment_method_afterpay_clearpay",
        "type": "object",
        "x-expandableFields": []
      },
      "alipay": {
        "description": "",
        "properties": {},
        "title": "PaymentFlowsPrivatePaymentMethodsAlipay",
        "type": "object",
        "x-expandableFields": []
      },
      "au_becs_debit": {
        "description": "",
        "properties": {
          "bsb_number": {
            "description": "Six-digit number identifying bank and branch associated with this bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_au_becs_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "bacs_debit": {
        "description": "",
        "properties": {
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "sort_code": {
            "description": "Sort code of the bank account. (e.g., `10-20-30`)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_bacs_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "bancontact": {
        "description": "",
        "properties": {},
        "title": "payment_method_bancontact",
        "type": "object",
        "x-expandableFields": []
      },
      "billing_details": {
        "description": "",
        "properties": {
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Billing address.",
            "nullable": true
          },
          "email": {
            "description": "Email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Full name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "phone": {
            "description": "Billing phone number (including extension).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "billing_details",
        "type": "object",
        "x-expandableFields": [
          "address"
        ]
      },
      "blik": {
        "description": "",
        "properties": {},
        "title": "payment_method_blik",
        "type": "object",
        "x-expandableFields": []
      },
      "boleto": {
        "description": "",
        "properties": {
          "tax_id": {
            "description": "Uniquely identifies the customer tax id (CNPJ or CPF)",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "tax_id"
        ],
        "title": "payment_method_boleto",
        "type": "object",
        "x-expandableFields": []
      },
      "card": {
        "description": "",
        "properties": {
          "brand": {
            "description": "Card brand. Can be `amex`, `diners`, `discover`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "maxLength": 5000,
            "type": "string"
          },
          "checks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_card_checks"
              }
            ],
            "description": "Checks on Card address and CVC if provided.",
            "nullable": true
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "description": "Two-digit number representing the card's expiration month.",
            "type": "integer"
          },
          "exp_year": {
            "description": "Four-digit number representing the card's expiration year.",
            "type": "integer"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers whoâ€™ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "funding": {
            "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
            "maxLength": 5000,
            "type": "string"
          },
          "generated_from": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_card_generated_card"
              }
            ],
            "description": "Details of the original PaymentMethod that created this object.",
            "nullable": true
          },
          "last4": {
            "description": "The last four digits of the card.",
            "maxLength": 5000,
            "type": "string"
          },
          "networks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/networks"
              }
            ],
            "description": "Contains information about card networks that can be used to process the payment.",
            "nullable": true
          },
          "three_d_secure_usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/three_d_secure_usage"
              }
            ],
            "description": "Contains details on how this Card maybe be used for 3D Secure authentication.",
            "nullable": true
          },
          "wallet": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_card_wallet"
              }
            ],
            "description": "If this Card is part of a card wallet, this contains the details of the card wallet.",
            "nullable": true
          }
        },
        "required": [
          "brand",
          "exp_month",
          "exp_year",
          "funding",
          "last4"
        ],
        "title": "payment_method_card",
        "type": "object",
        "x-expandableFields": [
          "checks",
          "generated_from",
          "networks",
          "three_d_secure_usage",
          "wallet"
        ]
      },
      "card_present": {
        "description": "",
        "properties": {},
        "title": "payment_method_card_present",
        "type": "object",
        "x-expandableFields": []
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "customer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address.",
              "nullable": true
            },
            "balance": {
              "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
              "type": "integer"
            },
            "cash_balance": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cash_balance"
                }
              ],
              "description": "The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the customer.\n\nIf you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "delinquent": {
              "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
              "nullable": true,
              "type": "boolean"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount active on the customer, if there is one.",
              "nullable": true
            },
            "email": {
              "description": "The customer's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_credit_balance": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "The current multi-currency balances, if any, being stored on the customer.If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency.If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices.They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
              "type": "object"
            },
            "invoice_prefix": {
              "description": "The prefix for the customer used to generate unique invoice numbers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_settings": {
              "$ref": "#/components/schemas/invoice_setting_customer_setting"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The customer's full name or business name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "next_invoice_sequence": {
              "description": "The suffix of the customer's next invoice number, e.g., 0001.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            },
            "phone": {
              "description": "The customer's phone number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "preferred_locales": {
              "description": "The customer's preferred locales (languages), ordered by preference.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
              "nullable": true
            },
            "sources": {
              "description": "The customer's payment sources, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      },
                      {
                        "$ref": "#/components/schemas/source"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "subscriptions": {
              "description": "The customer's current subscriptions, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "tax": {
              "$ref": "#/components/schemas/customer_tax"
            },
            "tax_exempt": {
              "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "tax_ids": {
              "description": "The customer's tax IDs.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this customer belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object"
          ],
          "title": "Customer",
          "type": "object",
          "x-expandableFields": [
            "address",
            "cash_balance",
            "default_source",
            "discount",
            "invoice_settings",
            "shipping",
            "sources",
            "subscriptions",
            "tax",
            "tax_ids",
            "test_clock"
          ],
          "x-resourceId": "customer"
        }
      ],
      "customer_balance": {
        "description": "",
        "properties": {},
        "title": "payment_method_customer_balance",
        "type": "object",
        "x-expandableFields": []
      },
      "eps": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank. Should be one of `arzte_und_apotheker_bank`, `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`, `bankhaus_schelhammer_und_schattera_ag`, `bawag_psk_ag`, `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`, `capital_bank_grawe_gruppe_ag`, `dolomitenbank`, `easybank_ag`, `erste_bank_und_sparkassen`, `hypo_alpeadriabank_international_ag`, `hypo_noe_lb_fur_niederosterreich_u_wien`, `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`, `hypo_vorarlberg_bank_ag`, `hypo_bank_burgenland_aktiengesellschaft`, `marchfelder_bank`, `oberbank_ag`, `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`, `sparda_bank_wien`, `volksbank_gruppe`, `volkskreditbank_ag`, or `vr_bank_braunau`.",
            "enum": [
              "arzte_und_apotheker_bank",
              "austrian_anadi_bank_ag",
              "bank_austria",
              "bankhaus_carl_spangler",
              "bankhaus_schelhammer_und_schattera_ag",
              "bawag_psk_ag",
              "bks_bank_ag",
              "brull_kallmus_bank_ag",
              "btv_vier_lander_bank",
              "capital_bank_grawe_gruppe_ag",
              "dolomitenbank",
              "easybank_ag",
              "erste_bank_und_sparkassen",
              "hypo_alpeadriabank_international_ag",
              "hypo_bank_burgenland_aktiengesellschaft",
              "hypo_noe_lb_fur_niederosterreich_u_wien",
              "hypo_oberosterreich_salzburg_steiermark",
              "hypo_tirol_bank_ag",
              "hypo_vorarlberg_bank_ag",
              "marchfelder_bank",
              "oberbank_ag",
              "raiffeisen_bankengruppe_osterreich",
              "schoellerbank_ag",
              "sparda_bank_wien",
              "volksbank_gruppe",
              "volkskreditbank_ag",
              "vr_bank_braunau"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_eps",
        "type": "object",
        "x-expandableFields": []
      },
      "fpx": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank, if provided. Can be one of `affin_bank`, `agrobank`, `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`, `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`, `public_bank`, `rhb`, `standard_chartered`, `uob`, `deutsche_bank`, `maybank2e`, or `pb_enterprise`.",
            "enum": [
              "affin_bank",
              "agrobank",
              "alliance_bank",
              "ambank",
              "bank_islam",
              "bank_muamalat",
              "bank_rakyat",
              "bsn",
              "cimb",
              "deutsche_bank",
              "hong_leong_bank",
              "hsbc",
              "kfh",
              "maybank2e",
              "maybank2u",
              "ocbc",
              "pb_enterprise",
              "public_bank",
              "rhb",
              "standard_chartered",
              "uob"
            ],
            "type": "string"
          }
        },
        "required": [
          "bank"
        ],
        "title": "payment_method_fpx",
        "type": "object",
        "x-expandableFields": []
      },
      "giropay": {
        "description": "",
        "properties": {},
        "title": "payment_method_giropay",
        "type": "object",
        "x-expandableFields": []
      },
      "grabpay": {
        "description": "",
        "properties": {},
        "title": "payment_method_grabpay",
        "type": "object",
        "x-expandableFields": []
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "ideal": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank, if provided. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, or `van_lanschot`.",
            "enum": [
              "abn_amro",
              "asn_bank",
              "bunq",
              "handelsbanken",
              "ing",
              "knab",
              "moneyou",
              "rabobank",
              "regiobank",
              "revolut",
              "sns_bank",
              "triodos_bank",
              "van_lanschot"
            ],
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "description": "The Bank Identifier Code of the customer's bank, if the bank was provided.",
            "enum": [
              "ABNANL2A",
              "ASNBNL21",
              "BUNQNL2A",
              "FVLBNL22",
              "HANDNL2A",
              "INGBNL2A",
              "KNABNL2H",
              "MOYONL21",
              "RABONL2U",
              "RBRBNL21",
              "REVOLT21",
              "SNSBNL2A",
              "TRIONL2U"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_ideal",
        "type": "object",
        "x-expandableFields": []
      },
      "interac_present": {
        "description": "",
        "properties": {},
        "title": "payment_method_interac_present",
        "type": "object",
        "x-expandableFields": []
      },
      "klarna": {
        "description": "",
        "properties": {
          "dob": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_flows_private_payment_methods_klarna_dob"
              }
            ],
            "description": "The customer's date of birth, if provided.",
            "nullable": true
          }
        },
        "title": "payment_method_klarna",
        "type": "object",
        "x-expandableFields": [
          "dob"
        ]
      },
      "konbini": {
        "description": "",
        "properties": {},
        "title": "payment_method_konbini",
        "type": "object",
        "x-expandableFields": []
      },
      "link": {
        "description": "",
        "properties": {
          "email": {
            "description": "Account owner's email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "persistent_token": {
            "description": "Token used for persistent Link logins.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "payment_method_link",
        "type": "object",
        "x-expandableFields": []
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "payment_method"
        ],
        "type": "string"
      },
      "oxxo": {
        "description": "",
        "properties": {},
        "title": "payment_method_oxxo",
        "type": "object",
        "x-expandableFields": []
      },
      "p24": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank, if provided.",
            "enum": [
              "alior_bank",
              "bank_millennium",
              "bank_nowy_bfg_sa",
              "bank_pekao_sa",
              "banki_spbdzielcze",
              "blik",
              "bnp_paribas",
              "boz",
              "citi_handlowy",
              "credit_agricole",
              "envelobank",
              "etransfer_pocztowy24",
              "getin_bank",
              "ideabank",
              "ing",
              "inteligo",
              "mbank_mtransfer",
              "nest_przelew",
              "noble_pay",
              "pbac_z_ipko",
              "plus_bank",
              "santander_przelew24",
              "tmobile_usbugi_bankowe",
              "toyota_bank",
              "volkswagen_bank"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "title": "payment_method_p24",
        "type": "object",
        "x-expandableFields": []
      },
      "paynow": {
        "description": "",
        "properties": {},
        "title": "payment_method_paynow",
        "type": "object",
        "x-expandableFields": []
      },
      "promptpay": {
        "description": "",
        "properties": {},
        "title": "payment_method_promptpay",
        "type": "object",
        "x-expandableFields": []
      },
      "radar_options": {
        "description": "Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.",
        "properties": {
          "session": {
            "description": "A [Radar Session](https://stripe.com/docs/radar/radar-session) is a snapshot of the browser metadata and device details that help Radar make more accurate predictions on your payments.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "RadarRadarOptions",
        "type": "object",
        "x-expandableFields": []
      },
      "sepa_debit": {
        "description": "",
        "properties": {
          "bank_code": {
            "description": "Bank code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "branch_code": {
            "description": "Branch code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country the bank account is located in.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "generated_from": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/sepa_debit_generated_from"
              }
            ],
            "description": "Information about the object that generated this PaymentMethod.",
            "nullable": true
          },
          "last4": {
            "description": "Last four characters of the IBAN.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_sepa_debit",
        "type": "object",
        "x-expandableFields": [
          "generated_from"
        ]
      },
      "sofort": {
        "description": "",
        "properties": {
          "country": {
            "description": "Two-letter ISO code representing the country the bank account is located in.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_sofort",
        "type": "object",
        "x-expandableFields": []
      },
      "type": {
        "description": "The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.",
        "enum": [
          "acss_debit",
          "affirm",
          "afterpay_clearpay",
          "alipay",
          "au_becs_debit",
          "bacs_debit",
          "bancontact",
          "blik",
          "boleto",
          "card",
          "card_present",
          "customer_balance",
          "eps",
          "fpx",
          "giropay",
          "grabpay",
          "ideal",
          "interac_present",
          "klarna",
          "konbini",
          "link",
          "oxxo",
          "p24",
          "paynow",
          "promptpay",
          "sepa_debit",
          "sofort",
          "us_bank_account",
          "wechat_pay"
        ],
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "us_bank_account": {
        "description": "",
        "properties": {
          "account_holder_type": {
            "description": "Account holder type: individual or company.",
            "enum": [
              "company",
              "individual"
            ],
            "nullable": true,
            "type": "string"
          },
          "account_type": {
            "description": "Account type: checkings or savings. Defaults to checking if omitted.",
            "enum": [
              "checking",
              "savings"
            ],
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "The name of the bank.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "financial_connections_account": {
            "description": "The ID of the Financial Connections Account used to create the payment method.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "networks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/us_bank_account_networks"
              }
            ],
            "description": "Contains information about US bank account networks that can be used.",
            "nullable": true
          },
          "routing_number": {
            "description": "Routing number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_us_bank_account",
        "type": "object",
        "x-expandableFields": [
          "networks"
        ]
      },
      "wechat_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_wechat_pay",
        "type": "object",
        "x-expandableFields": []
      }
    },
    "required": [
      "billing_details",
      "created",
      "id",
      "livemode",
      "object",
      "type"
    ],
    "title": "PaymentMethod",
    "type": "object",
    "x-expandableFields": [
      "acss_debit",
      "affirm",
      "afterpay_clearpay",
      "alipay",
      "au_becs_debit",
      "bacs_debit",
      "bancontact",
      "billing_details",
      "blik",
      "boleto",
      "card",
      "card_present",
      "customer",
      "customer_balance",
      "eps",
      "fpx",
      "giropay",
      "grabpay",
      "ideal",
      "interac_present",
      "klarna",
      "konbini",
      "link",
      "oxxo",
      "p24",
      "paynow",
      "promptpay",
      "radar_options",
      "sepa_debit",
      "sofort",
      "us_bank_account",
      "wechat_pay"
    ],
    "x-resourceId": "payment_method"
  },
  "payout": {
    "description": "A `Payout` object is created when you receive funds from Stripe, or when you\ninitiate a payout to either a bank account or debit card of a [connected\nStripe account](/docs/connect/bank-debit-card-payouts). You can retrieve individual payouts,\nas well as list all payouts. Payouts are made on [varying\nschedules](/docs/connect/manage-payout-schedule), depending on your country and\nindustry.\n\nRelated guide: [Receiving Payouts](https://stripe.com/docs/payouts).",
    "properties": {
      "amount": {
        "description": "Amount (in %s) to be transferred to your bank account or debit card.",
        "type": "integer"
      },
      "arrival_date": {
        "description": "Date the payout is expected to arrive in the bank. This factors in delays like weekends or bank holidays.",
        "format": "unix-time",
        "type": "integer"
      },
      "automatic": {
        "description": "Returns `true` if the payout was created by an [automated payout schedule](https://stripe.com/docs/payouts#payout-schedule), and `false` if it was [requested manually](https://stripe.com/docs/payouts#manual-payouts).",
        "type": "boolean"
      },
      "balance_transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Balance transactions represent funds moving through your Stripe account.\nThey're created for every type of transaction that comes into or flows out of your Stripe account balance.\n\nRelated guide: [Balance Transaction Types](https://stripe.com/docs/reports/balance-transaction-types).",
          "properties": {
            "amount": {
              "description": "Gross amount of the transaction, in %s.",
              "type": "integer"
            },
            "available_on": {
              "description": "The date the transaction's net funds will become available in the Stripe balance.",
              "format": "unix-time",
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exchange_rate": {
              "description": "The exchange rate used, if applicable, for this transaction. Specifically, if money was converted from currency A to currency B, then the `amount` in currency A, times `exchange_rate`, would be the `amount` in currency B. For example, suppose you charged a customer 10.00 EUR. Then the PaymentIntent's `amount` would be `1000` and `currency` would be `eur`. Suppose this was converted into 12.34 USD in your Stripe account. Then the BalanceTransaction's `amount` would be `1234`, `currency` would be `usd`, and `exchange_rate` would be `1.234`.",
              "nullable": true,
              "type": "number"
            },
            "fee": {
              "description": "Fees (in %s) paid for this transaction.",
              "type": "integer"
            },
            "fee_details": {
              "description": "Detailed breakdown of fees (in %s) paid for this transaction.",
              "items": {
                "$ref": "#/components/schemas/fee"
              },
              "type": "array"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "net": {
              "description": "Net amount of the transaction, in %s.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "balance_transaction"
              ],
              "type": "string"
            },
            "reporting_category": {
              "description": "[Learn more](https://stripe.com/docs/reports/reporting-categories) about how reporting categories can help you understand balance transactions from an accounting perspective.",
              "maxLength": 5000,
              "type": "string"
            },
            "source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                },
                {
                  "$ref": "#/components/schemas/charge"
                },
                {
                  "$ref": "#/components/schemas/connect_collection_transfer"
                },
                {
                  "$ref": "#/components/schemas/dispute"
                },
                {
                  "$ref": "#/components/schemas/fee_refund"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                },
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                },
                {
                  "$ref": "#/components/schemas/payout"
                },
                {
                  "$ref": "#/components/schemas/platform_tax_fee"
                },
                {
                  "$ref": "#/components/schemas/refund"
                },
                {
                  "$ref": "#/components/schemas/reserve_transaction"
                },
                {
                  "$ref": "#/components/schemas/tax_deducted_at_source"
                },
                {
                  "$ref": "#/components/schemas/topup"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ],
              "description": "The Stripe object to which this transaction is related.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  },
                  {
                    "$ref": "#/components/schemas/charge"
                  },
                  {
                    "$ref": "#/components/schemas/connect_collection_transfer"
                  },
                  {
                    "$ref": "#/components/schemas/dispute"
                  },
                  {
                    "$ref": "#/components/schemas/fee_refund"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.authorization"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.dispute"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.transaction"
                  },
                  {
                    "$ref": "#/components/schemas/payout"
                  },
                  {
                    "$ref": "#/components/schemas/platform_tax_fee"
                  },
                  {
                    "$ref": "#/components/schemas/refund"
                  },
                  {
                    "$ref": "#/components/schemas/reserve_transaction"
                  },
                  {
                    "$ref": "#/components/schemas/tax_deducted_at_source"
                  },
                  {
                    "$ref": "#/components/schemas/topup"
                  },
                  {
                    "$ref": "#/components/schemas/transfer"
                  },
                  {
                    "$ref": "#/components/schemas/transfer_reversal"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "status": {
              "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
              "maxLength": 5000,
              "type": "string"
            },
            "type": {
              "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. If you are looking to classify transactions for accounting purposes, you might want to consider `reporting_category` instead.",
              "enum": [
                "adjustment",
                "advance",
                "advance_funding",
                "anticipation_repayment",
                "application_fee",
                "application_fee_refund",
                "charge",
                "connect_collection_transfer",
                "contribution",
                "issuing_authorization_hold",
                "issuing_authorization_release",
                "issuing_dispute",
                "issuing_transaction",
                "payment",
                "payment_failure_refund",
                "payment_refund",
                "payout",
                "payout_cancel",
                "payout_failure",
                "refund",
                "refund_failure",
                "reserve_transaction",
                "reserved_funds",
                "stripe_fee",
                "stripe_fx_fee",
                "tax_fee",
                "topup",
                "topup_reversal",
                "transfer",
                "transfer_cancel",
                "transfer_failure",
                "transfer_refund"
              ],
              "type": "string"
            }
          },
          "required": [
            "amount",
            "available_on",
            "created",
            "currency",
            "fee",
            "fee_details",
            "id",
            "net",
            "object",
            "reporting_category",
            "status",
            "type"
          ],
          "title": "BalanceTransaction",
          "type": "object",
          "x-expandableFields": [
            "fee_details",
            "source"
          ],
          "x-resourceId": "balance_transaction"
        }
      ],
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "destination": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "These bank accounts are payment methods on `Customer` objects.\n\nOn the other hand [External Accounts](https://stripe.com/docs/api#external_accounts) are transfer\ndestinations on `Account` objects for [Custom accounts](https://stripe.com/docs/connect/custom-accounts).\nThey can be bank accounts or debit cards as well, and are documented in the links above.\n\nRelated guide: [Bank Debits and Transfers](https://stripe.com/docs/payments/bank-debits-transfers).",
          "properties": {
            "account": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The ID of the account that the bank account is associated with.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "account_holder_name": {
              "description": "The name of the person or business that owns the bank account.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_holder_type": {
              "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_type": {
              "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "available_payout_methods": {
              "description": "A set of available payout methods for this bank account. Only values from this set should be passed as the `method` when creating a payout.",
              "items": {
                "enum": [
                  "instant",
                  "standard"
                ],
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "bank_name": {
              "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "country": {
              "description": "Two-letter ISO code representing the country the bank account is located in.",
              "maxLength": 5000,
              "type": "string"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The ID of the customer that the bank account is associated with.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "default_for_currency": {
              "description": "Whether this bank account is the default external account for its currency.",
              "nullable": true,
              "type": "boolean"
            },
            "fingerprint": {
              "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "last4": {
              "description": "The last four digits of the bank account number.",
              "maxLength": 5000,
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "bank_account"
              ],
              "type": "string"
            },
            "routing_number": {
              "description": "The routing transit number for the bank account.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Stripe can determine that the bank account exists, its status will be `validated`. Note that there often isnâ€™t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a transfer sent to this bank account fails, we'll set the status to `errored` and will not continue to send transfers until the bank details are updated.\n\nFor external accounts, possible values are `new` and `errored`. Validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "country",
            "currency",
            "id",
            "last4",
            "object",
            "status"
          ],
          "title": "BankAccount",
          "type": "object",
          "x-expandableFields": [
            "account",
            "customer"
          ],
          "x-resourceId": "bank_account"
        },
        {
          "description": "You can store multiple cards on a customer in order to charge the customer\nlater. You can also store multiple debit cards on a recipient in order to\ntransfer to those cards later.\n\nRelated guide: [Card Payments with Sources](https://stripe.com/docs/sources/cards).",
          "properties": {
            "account": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account this card belongs to. This attribute will not be in the card object if the card belongs to a customer or recipient instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "address_city": {
              "description": "City/District/Suburb/Town/Village.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_country": {
              "description": "Billing address country, if provided when creating card.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_line1": {
              "description": "Address line 1 (Street address/PO Box/Company name).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_line1_check": {
              "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_line2": {
              "description": "Address line 2 (Apartment/Suite/Unit/Building).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_state": {
              "description": "State/County/Province/Region.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_zip": {
              "description": "ZIP or postal code.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_zip_check": {
              "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "available_payout_methods": {
              "description": "A set of available payout methods for this card. Only values from this set should be passed as the `method` when creating a payout.",
              "items": {
                "enum": [
                  "instant",
                  "standard"
                ],
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "brand": {
              "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
              "maxLength": 5000,
              "type": "string"
            },
            "country": {
              "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "currency": {
              "description": "Three-letter [ISO code for currency](https://stripe.com/docs/payouts). Only applicable on accounts (not customers or recipients). The card can be used as a transfer destination for funds in this currency.",
              "nullable": true,
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "cvc_check": {
              "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. A result of unchecked indicates that CVC was provided but hasn't been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https://support.stripe.com/questions/check-if-a-card-is-valid-without-a-charge).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_for_currency": {
              "description": "Whether this card is the default external account for its currency.",
              "nullable": true,
              "type": "boolean"
            },
            "dynamic_last4": {
              "description": "(For tokenized numbers only.) The last four digits of the device account number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exp_month": {
              "description": "Two-digit number representing the card's expiration month.",
              "type": "integer"
            },
            "exp_year": {
              "description": "Four-digit number representing the card's expiration year.",
              "type": "integer"
            },
            "fingerprint": {
              "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers whoâ€™ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "funding": {
              "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
              "maxLength": 5000,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "last4": {
              "description": "The last four digits of the card.",
              "maxLength": 5000,
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "name": {
              "description": "Cardholder name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "card"
              ],
              "type": "string"
            },
            "recipient": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/recipient"
                }
              ],
              "description": "The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/recipient"
                  }
                ]
              }
            },
            "status": {
              "description": "For external accounts, possible values are `new` and `errored`. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tokenization_method": {
              "description": "If the card number is tokenized, this is the method that was used. Can be `android_pay` (includes Google Pay), `apple_pay`, `masterpass`, `visa_checkout`, or null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "brand",
            "exp_month",
            "exp_year",
            "funding",
            "id",
            "last4",
            "object"
          ],
          "title": "Card",
          "type": "object",
          "x-expandableFields": [
            "account",
            "customer",
            "recipient"
          ],
          "x-resourceId": "card"
        },
        {
          "description": "",
          "properties": {
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "bank_account"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedBankAccount",
          "type": "object",
          "x-expandableFields": []
        },
        {
          "description": "",
          "properties": {
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "card"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedCard",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "failure_balance_transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Balance transactions represent funds moving through your Stripe account.\nThey're created for every type of transaction that comes into or flows out of your Stripe account balance.\n\nRelated guide: [Balance Transaction Types](https://stripe.com/docs/reports/balance-transaction-types).",
          "properties": {
            "amount": {
              "description": "Gross amount of the transaction, in %s.",
              "type": "integer"
            },
            "available_on": {
              "description": "The date the transaction's net funds will become available in the Stripe balance.",
              "format": "unix-time",
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exchange_rate": {
              "description": "The exchange rate used, if applicable, for this transaction. Specifically, if money was converted from currency A to currency B, then the `amount` in currency A, times `exchange_rate`, would be the `amount` in currency B. For example, suppose you charged a customer 10.00 EUR. Then the PaymentIntent's `amount` would be `1000` and `currency` would be `eur`. Suppose this was converted into 12.34 USD in your Stripe account. Then the BalanceTransaction's `amount` would be `1234`, `currency` would be `usd`, and `exchange_rate` would be `1.234`.",
              "nullable": true,
              "type": "number"
            },
            "fee": {
              "description": "Fees (in %s) paid for this transaction.",
              "type": "integer"
            },
            "fee_details": {
              "description": "Detailed breakdown of fees (in %s) paid for this transaction.",
              "items": {
                "$ref": "#/components/schemas/fee"
              },
              "type": "array"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "net": {
              "description": "Net amount of the transaction, in %s.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "balance_transaction"
              ],
              "type": "string"
            },
            "reporting_category": {
              "description": "[Learn more](https://stripe.com/docs/reports/reporting-categories) about how reporting categories can help you understand balance transactions from an accounting perspective.",
              "maxLength": 5000,
              "type": "string"
            },
            "source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                },
                {
                  "$ref": "#/components/schemas/charge"
                },
                {
                  "$ref": "#/components/schemas/connect_collection_transfer"
                },
                {
                  "$ref": "#/components/schemas/dispute"
                },
                {
                  "$ref": "#/components/schemas/fee_refund"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                },
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                },
                {
                  "$ref": "#/components/schemas/payout"
                },
                {
                  "$ref": "#/components/schemas/platform_tax_fee"
                },
                {
                  "$ref": "#/components/schemas/refund"
                },
                {
                  "$ref": "#/components/schemas/reserve_transaction"
                },
                {
                  "$ref": "#/components/schemas/tax_deducted_at_source"
                },
                {
                  "$ref": "#/components/schemas/topup"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ],
              "description": "The Stripe object to which this transaction is related.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  },
                  {
                    "$ref": "#/components/schemas/charge"
                  },
                  {
                    "$ref": "#/components/schemas/connect_collection_transfer"
                  },
                  {
                    "$ref": "#/components/schemas/dispute"
                  },
                  {
                    "$ref": "#/components/schemas/fee_refund"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.authorization"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.dispute"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.transaction"
                  },
                  {
                    "$ref": "#/components/schemas/payout"
                  },
                  {
                    "$ref": "#/components/schemas/platform_tax_fee"
                  },
                  {
                    "$ref": "#/components/schemas/refund"
                  },
                  {
                    "$ref": "#/components/schemas/reserve_transaction"
                  },
                  {
                    "$ref": "#/components/schemas/tax_deducted_at_source"
                  },
                  {
                    "$ref": "#/components/schemas/topup"
                  },
                  {
                    "$ref": "#/components/schemas/transfer"
                  },
                  {
                    "$ref": "#/components/schemas/transfer_reversal"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "status": {
              "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
              "maxLength": 5000,
              "type": "string"
            },
            "type": {
              "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. If you are looking to classify transactions for accounting purposes, you might want to consider `reporting_category` instead.",
              "enum": [
                "adjustment",
                "advance",
                "advance_funding",
                "anticipation_repayment",
                "application_fee",
                "application_fee_refund",
                "charge",
                "connect_collection_transfer",
                "contribution",
                "issuing_authorization_hold",
                "issuing_authorization_release",
                "issuing_dispute",
                "issuing_transaction",
                "payment",
                "payment_failure_refund",
                "payment_refund",
                "payout",
                "payout_cancel",
                "payout_failure",
                "refund",
                "refund_failure",
                "reserve_transaction",
                "reserved_funds",
                "stripe_fee",
                "stripe_fx_fee",
                "tax_fee",
                "topup",
                "topup_reversal",
                "transfer",
                "transfer_cancel",
                "transfer_failure",
                "transfer_refund"
              ],
              "type": "string"
            }
          },
          "required": [
            "amount",
            "available_on",
            "created",
            "currency",
            "fee",
            "fee_details",
            "id",
            "net",
            "object",
            "reporting_category",
            "status",
            "type"
          ],
          "title": "BalanceTransaction",
          "type": "object",
          "x-expandableFields": [
            "fee_details",
            "source"
          ],
          "x-resourceId": "balance_transaction"
        }
      ],
      "failure_code": {
        "description": "Error code explaining reason for payout failure if available. See [Types of payout failures](https://stripe.com/docs/api#payout_failures) for a list of failure codes.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "failure_message": {
        "description": "Message to user further explaining reason for payout failure if available.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "method": {
        "description": "The method used to send this payout, which can be `standard` or `instant`. `instant` is only supported for payouts to debit cards. (See [Instant payouts for marketplaces](https://stripe.com/blog/instant-payouts-for-marketplaces) for more information.)",
        "maxLength": 5000,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "payout"
        ],
        "type": "string"
      },
      "original_payout": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A `Payout` object is created when you receive funds from Stripe, or when you\ninitiate a payout to either a bank account or debit card of a [connected\nStripe account](/docs/connect/bank-debit-card-payouts). You can retrieve individual payouts,\nas well as list all payouts. Payouts are made on [varying\nschedules](/docs/connect/manage-payout-schedule), depending on your country and\nindustry.\n\nRelated guide: [Receiving Payouts](https://stripe.com/docs/payouts).",
          "properties": {
            "amount": {
              "description": "Amount (in %s) to be transferred to your bank account or debit card.",
              "type": "integer"
            },
            "arrival_date": {
              "description": "Date the payout is expected to arrive in the bank. This factors in delays like weekends or bank holidays.",
              "format": "unix-time",
              "type": "integer"
            },
            "automatic": {
              "description": "Returns `true` if the payout was created by an [automated payout schedule](https://stripe.com/docs/payouts#payout-schedule), and `false` if it was [requested manually](https://stripe.com/docs/payouts#manual-payouts).",
              "type": "boolean"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the impact of this payout on your account balance.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "destination": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/deleted_bank_account"
                },
                {
                  "$ref": "#/components/schemas/deleted_card"
                }
              ],
              "description": "ID of the bank account or card the payout was sent to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_card"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "failure_balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "If the payout failed or was canceled, this will be the ID of the balance transaction that reversed the initial balance transaction, and puts the funds from the failed payout back in your balance.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "failure_code": {
              "description": "Error code explaining reason for payout failure if available. See [Types of payout failures](https://stripe.com/docs/api#payout_failures) for a list of failure codes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "failure_message": {
              "description": "Message to user further explaining reason for payout failure if available.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "method": {
              "description": "The method used to send this payout, which can be `standard` or `instant`. `instant` is only supported for payouts to debit cards. (See [Instant payouts for marketplaces](https://stripe.com/blog/instant-payouts-for-marketplaces) for more information.)",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "payout"
              ],
              "type": "string"
            },
            "original_payout": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payout"
                }
              ],
              "description": "If the payout reverses another, this is the ID of the original payout.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payout"
                  }
                ]
              }
            },
            "reversed_by": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payout"
                }
              ],
              "description": "If the payout was reversed, this is the ID of the payout that reverses this payout.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payout"
                  }
                ]
              }
            },
            "source_type": {
              "description": "The source balance this payout came from. One of `card`, `fpx`, or `bank_account`.",
              "maxLength": 5000,
              "type": "string"
            },
            "statement_descriptor": {
              "description": "Extra information about a payout to be displayed on the user's bank statement.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "Current status of the payout: `paid`, `pending`, `in_transit`, `canceled` or `failed`. A payout is `pending` until it is submitted to the bank, when it becomes `in_transit`. The status then changes to `paid` if the transaction goes through, or to `failed` or `canceled` (within 5 business days). Some failed payouts may initially show as `paid` but then change to `failed`.",
              "maxLength": 5000,
              "type": "string"
            },
            "type": {
              "description": "Can be `bank_account` or `card`.",
              "enum": [
                "bank_account",
                "card"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            }
          },
          "required": [
            "amount",
            "arrival_date",
            "automatic",
            "created",
            "currency",
            "id",
            "livemode",
            "method",
            "object",
            "source_type",
            "status",
            "type"
          ],
          "title": "Payout",
          "type": "object",
          "x-expandableFields": [
            "balance_transaction",
            "destination",
            "failure_balance_transaction",
            "original_payout",
            "reversed_by"
          ],
          "x-resourceId": "payout"
        }
      ],
      "reversed_by": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A `Payout` object is created when you receive funds from Stripe, or when you\ninitiate a payout to either a bank account or debit card of a [connected\nStripe account](/docs/connect/bank-debit-card-payouts). You can retrieve individual payouts,\nas well as list all payouts. Payouts are made on [varying\nschedules](/docs/connect/manage-payout-schedule), depending on your country and\nindustry.\n\nRelated guide: [Receiving Payouts](https://stripe.com/docs/payouts).",
          "properties": {
            "amount": {
              "description": "Amount (in %s) to be transferred to your bank account or debit card.",
              "type": "integer"
            },
            "arrival_date": {
              "description": "Date the payout is expected to arrive in the bank. This factors in delays like weekends or bank holidays.",
              "format": "unix-time",
              "type": "integer"
            },
            "automatic": {
              "description": "Returns `true` if the payout was created by an [automated payout schedule](https://stripe.com/docs/payouts#payout-schedule), and `false` if it was [requested manually](https://stripe.com/docs/payouts#manual-payouts).",
              "type": "boolean"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the impact of this payout on your account balance.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "destination": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/deleted_bank_account"
                },
                {
                  "$ref": "#/components/schemas/deleted_card"
                }
              ],
              "description": "ID of the bank account or card the payout was sent to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_card"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "failure_balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "If the payout failed or was canceled, this will be the ID of the balance transaction that reversed the initial balance transaction, and puts the funds from the failed payout back in your balance.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "failure_code": {
              "description": "Error code explaining reason for payout failure if available. See [Types of payout failures](https://stripe.com/docs/api#payout_failures) for a list of failure codes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "failure_message": {
              "description": "Message to user further explaining reason for payout failure if available.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "method": {
              "description": "The method used to send this payout, which can be `standard` or `instant`. `instant` is only supported for payouts to debit cards. (See [Instant payouts for marketplaces](https://stripe.com/blog/instant-payouts-for-marketplaces) for more information.)",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "payout"
              ],
              "type": "string"
            },
            "original_payout": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payout"
                }
              ],
              "description": "If the payout reverses another, this is the ID of the original payout.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payout"
                  }
                ]
              }
            },
            "reversed_by": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payout"
                }
              ],
              "description": "If the payout was reversed, this is the ID of the payout that reverses this payout.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payout"
                  }
                ]
              }
            },
            "source_type": {
              "description": "The source balance this payout came from. One of `card`, `fpx`, or `bank_account`.",
              "maxLength": 5000,
              "type": "string"
            },
            "statement_descriptor": {
              "description": "Extra information about a payout to be displayed on the user's bank statement.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "Current status of the payout: `paid`, `pending`, `in_transit`, `canceled` or `failed`. A payout is `pending` until it is submitted to the bank, when it becomes `in_transit`. The status then changes to `paid` if the transaction goes through, or to `failed` or `canceled` (within 5 business days). Some failed payouts may initially show as `paid` but then change to `failed`.",
              "maxLength": 5000,
              "type": "string"
            },
            "type": {
              "description": "Can be `bank_account` or `card`.",
              "enum": [
                "bank_account",
                "card"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            }
          },
          "required": [
            "amount",
            "arrival_date",
            "automatic",
            "created",
            "currency",
            "id",
            "livemode",
            "method",
            "object",
            "source_type",
            "status",
            "type"
          ],
          "title": "Payout",
          "type": "object",
          "x-expandableFields": [
            "balance_transaction",
            "destination",
            "failure_balance_transaction",
            "original_payout",
            "reversed_by"
          ],
          "x-resourceId": "payout"
        }
      ],
      "source_type": {
        "description": "The source balance this payout came from. One of `card`, `fpx`, or `bank_account`.",
        "maxLength": 5000,
        "type": "string"
      },
      "statement_descriptor": {
        "description": "Extra information about a payout to be displayed on the user's bank statement.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "status": {
        "description": "Current status of the payout: `paid`, `pending`, `in_transit`, `canceled` or `failed`. A payout is `pending` until it is submitted to the bank, when it becomes `in_transit`. The status then changes to `paid` if the transaction goes through, or to `failed` or `canceled` (within 5 business days). Some failed payouts may initially show as `paid` but then change to `failed`.",
        "maxLength": 5000,
        "type": "string"
      },
      "type": {
        "description": "Can be `bank_account` or `card`.",
        "enum": [
          "bank_account",
          "card"
        ],
        "type": "string",
        "x-stripeBypassValidation": true
      }
    },
    "required": [
      "amount",
      "arrival_date",
      "automatic",
      "created",
      "currency",
      "id",
      "livemode",
      "method",
      "object",
      "source_type",
      "status",
      "type"
    ],
    "title": "Payout",
    "type": "object",
    "x-expandableFields": [
      "balance_transaction",
      "destination",
      "failure_balance_transaction",
      "original_payout",
      "reversed_by"
    ],
    "x-resourceId": "payout"
  },
  "person": {
    "description": "This is an object representing a person associated with a Stripe account.\n\nA platform cannot access a Standard or Express account's persons after the account starts onboarding, such as after generating an account link for the account.\nSee the [Standard onboarding](https://stripe.com/docs/connect/standard-accounts) or [Express onboarding documentation](https://stripe.com/docs/connect/express-accounts) for information about platform pre-filling and account onboarding steps.\n\nRelated guide: [Handling Identity Verification with the API](https://stripe.com/docs/connect/identity-verification-api#person-information).",
    "properties": {
      "account": {
        "description": "The account the person is associated with.",
        "maxLength": 5000,
        "type": "string"
      },
      "address": {
        "description": "",
        "properties": {
          "city": {
            "description": "City, district, suburb, town, or village.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line1": {
            "description": "Address line 1 (e.g., street, PO Box, or company name).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line2": {
            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "ZIP or postal code.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "State, county, province, or region.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Address",
        "type": "object",
        "x-expandableFields": []
      },
      "address_kana": [
        {
          "description": "",
          "properties": {
            "city": {
              "description": "City/Ward.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "country": {
              "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "line1": {
              "description": "Block/Building number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "line2": {
              "description": "Building details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "postal_code": {
              "description": "ZIP or postal code.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "state": {
              "description": "Prefecture.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "town": {
              "description": "Town/cho-me.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "LegalEntityJapanAddress",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "address_kanji": [
        {
          "description": "",
          "properties": {
            "city": {
              "description": "City/Ward.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "country": {
              "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "line1": {
              "description": "Block/Building number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "line2": {
              "description": "Building details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "postal_code": {
              "description": "ZIP or postal code.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "state": {
              "description": "Prefecture.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "town": {
              "description": "Town/cho-me.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "LegalEntityJapanAddress",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "dob": {
        "description": "",
        "properties": {
          "day": {
            "description": "The day of birth, between 1 and 31.",
            "nullable": true,
            "type": "integer"
          },
          "month": {
            "description": "The month of birth, between 1 and 12.",
            "nullable": true,
            "type": "integer"
          },
          "year": {
            "description": "The four-digit year of birth.",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "LegalEntityDOB",
        "type": "object",
        "x-expandableFields": []
      },
      "email": {
        "description": "The person's email address.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "first_name": {
        "description": "The person's first name.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "first_name_kana": {
        "description": "The Kana variation of the person's first name (Japan only).",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "first_name_kanji": {
        "description": "The Kanji variation of the person's first name (Japan only).",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "full_name_aliases": {
        "description": "A list of alternate names or aliases that the person is known by.",
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "future_requirements": [
        {
          "description": "",
          "properties": {
            "alternatives": {
              "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
              "items": {
                "$ref": "#/components/schemas/account_requirements_alternative"
              },
              "nullable": true,
              "type": "array"
            },
            "currently_due": {
              "description": "Fields that need to be collected to keep the person's account enabled. If not collected by the account's `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash, and may immediately become `past_due`, but the account may also be given a grace period depending on the account's enablement state prior to transition.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "errors": {
              "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
              "items": {
                "$ref": "#/components/schemas/account_requirements_error"
              },
              "type": "array"
            },
            "eventually_due": {
              "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and the account's `future_requirements[current_deadline]` becomes set.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "past_due": {
              "description": "Fields that weren't collected by the account's `requirements.current_deadline`. These fields need to be collected to enable the person's account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "pending_verification": {
              "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "currently_due",
            "errors",
            "eventually_due",
            "past_due",
            "pending_verification"
          ],
          "title": "PersonFutureRequirements",
          "type": "object",
          "x-expandableFields": [
            "alternatives",
            "errors"
          ]
        }
      ],
      "gender": {
        "description": "The person's gender (International regulations require either \"male\" or \"female\").",
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "id_number_provided": {
        "description": "Whether the person's `id_number` was provided.",
        "type": "boolean"
      },
      "id_number_secondary_provided": {
        "description": "Whether the person's `id_number_secondary` was provided.",
        "type": "boolean"
      },
      "last_name": {
        "description": "The person's last name.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "last_name_kana": {
        "description": "The Kana variation of the person's last name (Japan only).",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "last_name_kanji": {
        "description": "The Kanji variation of the person's last name (Japan only).",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "maiden_name": {
        "description": "The person's maiden name.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "nationality": {
        "description": "The country where the person is a national.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "person"
        ],
        "type": "string"
      },
      "phone": {
        "description": "The person's phone number.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "political_exposure": {
        "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
        "enum": [
          "existing",
          "none"
        ],
        "type": "string"
      },
      "registered_address": {
        "description": "",
        "properties": {
          "city": {
            "description": "City, district, suburb, town, or village.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line1": {
            "description": "Address line 1 (e.g., street, PO Box, or company name).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line2": {
            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "ZIP or postal code.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "State, county, province, or region.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Address",
        "type": "object",
        "x-expandableFields": []
      },
      "relationship": {
        "description": "",
        "properties": {
          "director": {
            "description": "Whether the person is a director of the account's legal entity. Directors are typically members of the governing board of the company, or responsible for ensuring the company meets its regulatory obligations.",
            "nullable": true,
            "type": "boolean"
          },
          "executive": {
            "description": "Whether the person has significant responsibility to control, manage, or direct the organization.",
            "nullable": true,
            "type": "boolean"
          },
          "owner": {
            "description": "Whether the person is an owner of the accountâ€™s legal entity.",
            "nullable": true,
            "type": "boolean"
          },
          "percent_ownership": {
            "description": "The percent owned by the person of the account's legal entity.",
            "nullable": true,
            "type": "number"
          },
          "representative": {
            "description": "Whether the person is authorized as the primary representative of the account. This is the person nominated by the business to provide information about themselves, and general information about the account. There can only be one representative at any given time. At the time the account is created, this person should be set to the person responsible for opening the account.",
            "nullable": true,
            "type": "boolean"
          },
          "title": {
            "description": "The person's title (e.g., CEO, Support Engineer).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "PersonRelationship",
        "type": "object",
        "x-expandableFields": []
      },
      "requirements": [
        {
          "description": "",
          "properties": {
            "alternatives": {
              "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
              "items": {
                "$ref": "#/components/schemas/account_requirements_alternative"
              },
              "nullable": true,
              "type": "array"
            },
            "currently_due": {
              "description": "Fields that need to be collected to keep the person's account enabled. If not collected by the account's `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "errors": {
              "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
              "items": {
                "$ref": "#/components/schemas/account_requirements_error"
              },
              "type": "array"
            },
            "eventually_due": {
              "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and the account's `current_deadline` becomes set.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "past_due": {
              "description": "Fields that weren't collected by the account's `current_deadline`. These fields need to be collected to enable the person's account.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "pending_verification": {
              "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "currently_due",
            "errors",
            "eventually_due",
            "past_due",
            "pending_verification"
          ],
          "title": "PersonRequirements",
          "type": "object",
          "x-expandableFields": [
            "alternatives",
            "errors"
          ]
        }
      ],
      "ssn_last_4_provided": {
        "description": "Whether the last four digits of the person's Social Security number have been provided (U.S. only).",
        "type": "boolean"
      },
      "verification": {
        "description": "",
        "properties": {
          "additional_document": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_person_verification_document"
              }
            ],
            "description": "A document showing address, either a passport, local ID card, or utility bill from a well-known utility company.",
            "nullable": true
          },
          "details": {
            "description": "A user-displayable string describing the verification state for the person. For example, this may say \"Provided identity information could not be verified\".",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "details_code": {
            "description": "One of `document_address_mismatch`, `document_dob_mismatch`, `document_duplicate_type`, `document_id_number_mismatch`, `document_name_mismatch`, `document_nationality_mismatch`, `failed_keyed_identity`, or `failed_other`. A machine-readable code specifying the verification state for the person.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "document": {
            "$ref": "#/components/schemas/legal_entity_person_verification_document"
          },
          "status": {
            "description": "The state of verification for the person. Possible values are `unverified`, `pending`, or `verified`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "status"
        ],
        "title": "LegalEntityPersonVerification",
        "type": "object",
        "x-expandableFields": [
          "additional_document",
          "document"
        ]
      }
    },
    "required": [
      "account",
      "created",
      "id",
      "object"
    ],
    "title": "Person",
    "type": "object",
    "x-expandableFields": [
      "address",
      "address_kana",
      "address_kanji",
      "dob",
      "future_requirements",
      "registered_address",
      "relationship",
      "requirements",
      "verification"
    ],
    "x-resourceId": "person"
  },
  "plan": {
    "description": "You can now model subscriptions more flexibly using the [Prices API](https://stripe.com/docs/api#prices). It replaces the Plans API and is backwards compatible to simplify your migration.\n\nPlans define the base price, currency, and billing cycle for recurring purchases of products.\n[Products](https://stripe.com/docs/api#products) help you track inventory or provisioning, and plans help you track pricing. Different physical goods or levels of service should be represented by products, and pricing options should be represented by plans. This approach lets you change prices without having to change your provisioning scheme.\n\nFor example, you might have a single \"gold\" product that has plans for $10/month, $100/year, â‚¬9/month, and â‚¬90/year.\n\nRelated guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription) and more about [products and prices](https://stripe.com/docs/products-prices/overview).",
    "properties": {
      "active": {
        "description": "Whether the plan can be used for new purchases.",
        "type": "boolean"
      },
      "aggregate_usage": {
        "description": "Specifies a usage aggregation strategy for plans of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for using the last usage record reported within a period, `last_ever` for using the last usage record ever (across period bounds) or `max` which uses the usage record with the maximum reported usage during a period. Defaults to `sum`.",
        "enum": [
          "last_during_period",
          "last_ever",
          "max",
          "sum"
        ],
        "nullable": true,
        "type": "string"
      },
      "amount": {
        "description": "The unit amount in %s to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.",
        "nullable": true,
        "type": "integer"
      },
      "amount_decimal": {
        "description": "The unit amount in %s to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.",
        "format": "decimal",
        "nullable": true,
        "type": "string"
      },
      "billing_scheme": {
        "description": "Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`) will be charged per unit in `quantity` (for plans with `usage_type=licensed`), or per unit of total usage (for plans with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.",
        "enum": [
          "per_unit",
          "tiered"
        ],
        "type": "string"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "interval": {
        "description": "The frequency at which a subscription is billed. One of `day`, `week`, `month` or `year`.",
        "enum": [
          "day",
          "month",
          "week",
          "year"
        ],
        "type": "string"
      },
      "interval_count": {
        "description": "The number of intervals (specified in the `interval` attribute) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.",
        "type": "integer"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "nickname": {
        "description": "A brief description of the plan, hidden from customers.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "plan"
        ],
        "type": "string"
      },
      "product": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Products describe the specific goods or services you offer to your customers.\nFor example, you might offer a Standard and Premium version of your goods or service; each version would be a separate Product.\nThey can be used in conjunction with [Prices](https://stripe.com/docs/api#prices) to configure pricing in Payment Links, Checkout, and Subscriptions.\n\nRelated guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription),\n[share a Payment Link](https://stripe.com/docs/payments/payment-links/overview),\n[accept payments with Checkout](https://stripe.com/docs/payments/accept-a-payment#create-product-prices-upfront),\nand more about [Products and Prices](https://stripe.com/docs/products-prices/overview)",
          "properties": {
            "active": {
              "description": "Whether the product is currently available for purchase.",
              "type": "boolean"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "default_price": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/price"
                }
              ],
              "description": "The ID of the [Price](https://stripe.com/docs/api/prices) object that is the default price for this product.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/price"
                  }
                ]
              }
            },
            "description": {
              "description": "The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "images": {
              "description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The product's name, meant to be displayable to the customer.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "product"
              ],
              "type": "string"
            },
            "package_dimensions": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/package_dimensions"
                }
              ],
              "description": "The dimensions of this product for shipping purposes.",
              "nullable": true
            },
            "shippable": {
              "description": "Whether this product is shipped (i.e., physical goods).",
              "nullable": true,
              "type": "boolean"
            },
            "statement_descriptor": {
              "description": "Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tax_code": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/tax_code"
                }
              ],
              "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/tax_code"
                  }
                ]
              }
            },
            "unit_label": {
              "description": "A label that represents units of this product in Stripe and on customersâ€™ receipts and invoices. When set, this will be included in associated invoice line item descriptions.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "updated": {
              "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "url": {
              "description": "A URL of a publicly-accessible webpage for this product.",
              "maxLength": 2048,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "active",
            "created",
            "id",
            "images",
            "livemode",
            "metadata",
            "name",
            "object",
            "updated"
          ],
          "title": "Product",
          "type": "object",
          "x-expandableFields": [
            "default_price",
            "package_dimensions",
            "tax_code"
          ],
          "x-resourceId": "product"
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "product"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedProduct",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "deleted_product"
        }
      ],
      "tiers": {
        "description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.",
        "items": {
          "description": "",
          "properties": {
            "flat_amount": {
              "description": "Price for the entire tier.",
              "nullable": true,
              "type": "integer"
            },
            "flat_amount_decimal": {
              "description": "Same as `flat_amount`, but contains a decimal value with at most 12 decimal places.",
              "format": "decimal",
              "nullable": true,
              "type": "string"
            },
            "unit_amount": {
              "description": "Per unit price for units relevant to the tier.",
              "nullable": true,
              "type": "integer"
            },
            "unit_amount_decimal": {
              "description": "Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.",
              "format": "decimal",
              "nullable": true,
              "type": "string"
            },
            "up_to": {
              "description": "Up to and including to this quantity will be contained in the tier.",
              "nullable": true,
              "type": "integer"
            }
          },
          "title": "PlanTier",
          "type": "object",
          "x-expandableFields": []
        },
        "type": "array"
      },
      "tiers_mode": {
        "description": "Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price. In `graduated` tiering, pricing can change as the quantity grows.",
        "enum": [
          "graduated",
          "volume"
        ],
        "nullable": true,
        "type": "string"
      },
      "transform_usage": [
        {
          "description": "",
          "properties": {
            "divide_by": {
              "description": "Divide usage by this number.",
              "type": "integer"
            },
            "round": {
              "description": "After division, either round the result `up` or `down`.",
              "enum": [
                "down",
                "up"
              ],
              "type": "string"
            }
          },
          "required": [
            "divide_by",
            "round"
          ],
          "title": "TransformUsage",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "trial_period_days": {
        "description": "Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).",
        "nullable": true,
        "type": "integer"
      },
      "usage_type": {
        "description": "Configures how the quantity per period should be determined. Can be either `metered` or `licensed`. `licensed` automatically bills the `quantity` set when adding it to a subscription. `metered` aggregates the total usage based on usage records. Defaults to `licensed`.",
        "enum": [
          "licensed",
          "metered"
        ],
        "type": "string"
      }
    },
    "required": [
      "active",
      "billing_scheme",
      "created",
      "currency",
      "id",
      "interval",
      "interval_count",
      "livemode",
      "object",
      "usage_type"
    ],
    "title": "Plan",
    "type": "object",
    "x-expandableFields": [
      "product",
      "tiers",
      "transform_usage"
    ],
    "x-resourceId": "plan"
  },
  "price": {
    "description": "Prices define the unit cost, currency, and (optional) billing cycle for both recurring and one-time purchases of products.\n[Products](https://stripe.com/docs/api#products) help you track inventory or provisioning, and prices help you track payment terms. Different physical goods or levels of service should be represented by products, and pricing options should be represented by prices. This approach lets you change prices without having to change your provisioning scheme.\n\nFor example, you might have a single \"gold\" product that has prices for $10/month, $100/year, and â‚¬9 once.\n\nRelated guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription), [create an invoice](https://stripe.com/docs/billing/invoices/create), and more about [products and prices](https://stripe.com/docs/products-prices/overview).",
    "properties": {
      "active": {
        "description": "Whether the price can be used for new purchases.",
        "type": "boolean"
      },
      "billing_scheme": {
        "description": "Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `unit_amount` or `unit_amount_decimal`) will be charged per unit in `quantity` (for prices with `usage_type=licensed`), or per unit of total usage (for prices with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.",
        "enum": [
          "per_unit",
          "tiered"
        ],
        "type": "string"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "currency_options": {
        "additionalProperties": {
          "description": "",
          "properties": {
            "custom_unit_amount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/custom_unit_amount"
                }
              ],
              "description": "When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.",
              "nullable": true
            },
            "tax_behavior": {
              "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
              "enum": [
                "exclusive",
                "inclusive",
                "unspecified"
              ],
              "nullable": true,
              "type": "string"
            },
            "tiers": {
              "description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.",
              "items": {
                "$ref": "#/components/schemas/price_tier"
              },
              "type": "array"
            },
            "unit_amount": {
              "description": "The unit amount in %s to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.",
              "nullable": true,
              "type": "integer"
            },
            "unit_amount_decimal": {
              "description": "The unit amount in %s to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.",
              "format": "decimal",
              "nullable": true,
              "type": "string"
            }
          },
          "title": "CurrencyOption",
          "type": "object",
          "x-expandableFields": [
            "custom_unit_amount",
            "tiers"
          ]
        },
        "description": "Prices defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
        "type": "object"
      },
      "custom_unit_amount": [
        {
          "description": "",
          "properties": {
            "maximum": {
              "description": "The maximum unit amount the customer can specify for this item.",
              "nullable": true,
              "type": "integer"
            },
            "minimum": {
              "description": "The minimum unit amount the customer can specify for this item. Must be at least the minimum charge amount.",
              "nullable": true,
              "type": "integer"
            },
            "preset": {
              "description": "The starting unit amount which can be updated by the customer.",
              "nullable": true,
              "type": "integer"
            }
          },
          "title": "CustomUnitAmount",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "lookup_key": {
        "description": "A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "nickname": {
        "description": "A brief description of the price, hidden from customers.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "price"
        ],
        "type": "string"
      },
      "product": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Products describe the specific goods or services you offer to your customers.\nFor example, you might offer a Standard and Premium version of your goods or service; each version would be a separate Product.\nThey can be used in conjunction with [Prices](https://stripe.com/docs/api#prices) to configure pricing in Payment Links, Checkout, and Subscriptions.\n\nRelated guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription),\n[share a Payment Link](https://stripe.com/docs/payments/payment-links/overview),\n[accept payments with Checkout](https://stripe.com/docs/payments/accept-a-payment#create-product-prices-upfront),\nand more about [Products and Prices](https://stripe.com/docs/products-prices/overview)",
          "properties": {
            "active": {
              "description": "Whether the product is currently available for purchase.",
              "type": "boolean"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "default_price": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/price"
                }
              ],
              "description": "The ID of the [Price](https://stripe.com/docs/api/prices) object that is the default price for this product.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/price"
                  }
                ]
              }
            },
            "description": {
              "description": "The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "images": {
              "description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The product's name, meant to be displayable to the customer.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "product"
              ],
              "type": "string"
            },
            "package_dimensions": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/package_dimensions"
                }
              ],
              "description": "The dimensions of this product for shipping purposes.",
              "nullable": true
            },
            "shippable": {
              "description": "Whether this product is shipped (i.e., physical goods).",
              "nullable": true,
              "type": "boolean"
            },
            "statement_descriptor": {
              "description": "Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tax_code": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/tax_code"
                }
              ],
              "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/tax_code"
                  }
                ]
              }
            },
            "unit_label": {
              "description": "A label that represents units of this product in Stripe and on customersâ€™ receipts and invoices. When set, this will be included in associated invoice line item descriptions.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "updated": {
              "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "url": {
              "description": "A URL of a publicly-accessible webpage for this product.",
              "maxLength": 2048,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "active",
            "created",
            "id",
            "images",
            "livemode",
            "metadata",
            "name",
            "object",
            "updated"
          ],
          "title": "Product",
          "type": "object",
          "x-expandableFields": [
            "default_price",
            "package_dimensions",
            "tax_code"
          ],
          "x-resourceId": "product"
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "product"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedProduct",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "deleted_product"
        }
      ],
      "recurring": [
        {
          "description": "",
          "properties": {
            "aggregate_usage": {
              "description": "Specifies a usage aggregation strategy for prices of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for using the last usage record reported within a period, `last_ever` for using the last usage record ever (across period bounds) or `max` which uses the usage record with the maximum reported usage during a period. Defaults to `sum`.",
              "enum": [
                "last_during_period",
                "last_ever",
                "max",
                "sum"
              ],
              "nullable": true,
              "type": "string"
            },
            "interval": {
              "description": "The frequency at which a subscription is billed. One of `day`, `week`, `month` or `year`.",
              "enum": [
                "day",
                "month",
                "week",
                "year"
              ],
              "type": "string"
            },
            "interval_count": {
              "description": "The number of intervals (specified in the `interval` attribute) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.",
              "type": "integer"
            },
            "usage_type": {
              "description": "Configures how the quantity per period should be determined. Can be either `metered` or `licensed`. `licensed` automatically bills the `quantity` set when adding it to a subscription. `metered` aggregates the total usage based on usage records. Defaults to `licensed`.",
              "enum": [
                "licensed",
                "metered"
              ],
              "type": "string"
            }
          },
          "required": [
            "interval",
            "interval_count",
            "usage_type"
          ],
          "title": "Recurring",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "tax_behavior": {
        "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
        "enum": [
          "exclusive",
          "inclusive",
          "unspecified"
        ],
        "nullable": true,
        "type": "string"
      },
      "tiers": {
        "description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.",
        "items": {
          "description": "",
          "properties": {
            "flat_amount": {
              "description": "Price for the entire tier.",
              "nullable": true,
              "type": "integer"
            },
            "flat_amount_decimal": {
              "description": "Same as `flat_amount`, but contains a decimal value with at most 12 decimal places.",
              "format": "decimal",
              "nullable": true,
              "type": "string"
            },
            "unit_amount": {
              "description": "Per unit price for units relevant to the tier.",
              "nullable": true,
              "type": "integer"
            },
            "unit_amount_decimal": {
              "description": "Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.",
              "format": "decimal",
              "nullable": true,
              "type": "string"
            },
            "up_to": {
              "description": "Up to and including to this quantity will be contained in the tier.",
              "nullable": true,
              "type": "integer"
            }
          },
          "title": "PriceTier",
          "type": "object",
          "x-expandableFields": []
        },
        "type": "array"
      },
      "tiers_mode": {
        "description": "Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price. In `graduated` tiering, pricing can change as the quantity grows.",
        "enum": [
          "graduated",
          "volume"
        ],
        "nullable": true,
        "type": "string"
      },
      "transform_quantity": [
        {
          "description": "",
          "properties": {
            "divide_by": {
              "description": "Divide usage by this number.",
              "type": "integer"
            },
            "round": {
              "description": "After division, either round the result `up` or `down`.",
              "enum": [
                "down",
                "up"
              ],
              "type": "string"
            }
          },
          "required": [
            "divide_by",
            "round"
          ],
          "title": "TransformQuantity",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "type": {
        "description": "One of `one_time` or `recurring` depending on whether the price is for a one-time purchase or a recurring (subscription) purchase.",
        "enum": [
          "one_time",
          "recurring"
        ],
        "type": "string"
      },
      "unit_amount": {
        "description": "The unit amount in %s to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.",
        "nullable": true,
        "type": "integer"
      },
      "unit_amount_decimal": {
        "description": "The unit amount in %s to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.",
        "format": "decimal",
        "nullable": true,
        "type": "string"
      }
    },
    "required": [
      "active",
      "billing_scheme",
      "created",
      "currency",
      "id",
      "livemode",
      "metadata",
      "object",
      "product",
      "type"
    ],
    "title": "Price",
    "type": "object",
    "x-expandableFields": [
      "currency_options",
      "custom_unit_amount",
      "product",
      "recurring",
      "tiers",
      "transform_quantity"
    ],
    "x-resourceId": "price"
  },
  "product": {
    "description": "Products describe the specific goods or services you offer to your customers.\nFor example, you might offer a Standard and Premium version of your goods or service; each version would be a separate Product.\nThey can be used in conjunction with [Prices](https://stripe.com/docs/api#prices) to configure pricing in Payment Links, Checkout, and Subscriptions.\n\nRelated guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription),\n[share a Payment Link](https://stripe.com/docs/payments/payment-links/overview),\n[accept payments with Checkout](https://stripe.com/docs/payments/accept-a-payment#create-product-prices-upfront),\nand more about [Products and Prices](https://stripe.com/docs/products-prices/overview)",
    "properties": {
      "active": {
        "description": "Whether the product is currently available for purchase.",
        "type": "boolean"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "default_price": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Prices define the unit cost, currency, and (optional) billing cycle for both recurring and one-time purchases of products.\n[Products](https://stripe.com/docs/api#products) help you track inventory or provisioning, and prices help you track payment terms. Different physical goods or levels of service should be represented by products, and pricing options should be represented by prices. This approach lets you change prices without having to change your provisioning scheme.\n\nFor example, you might have a single \"gold\" product that has prices for $10/month, $100/year, and â‚¬9 once.\n\nRelated guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription), [create an invoice](https://stripe.com/docs/billing/invoices/create), and more about [products and prices](https://stripe.com/docs/products-prices/overview).",
          "properties": {
            "active": {
              "description": "Whether the price can be used for new purchases.",
              "type": "boolean"
            },
            "billing_scheme": {
              "description": "Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `unit_amount` or `unit_amount_decimal`) will be charged per unit in `quantity` (for prices with `usage_type=licensed`), or per unit of total usage (for prices with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.",
              "enum": [
                "per_unit",
                "tiered"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "currency_options": {
              "additionalProperties": {
                "$ref": "#/components/schemas/currency_option"
              },
              "description": "Prices defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
              "type": "object"
            },
            "custom_unit_amount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/custom_unit_amount"
                }
              ],
              "description": "When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.",
              "nullable": true
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "lookup_key": {
              "description": "A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "nickname": {
              "description": "A brief description of the price, hidden from customers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "price"
              ],
              "type": "string"
            },
            "product": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/product"
                },
                {
                  "$ref": "#/components/schemas/deleted_product"
                }
              ],
              "description": "The ID of the product this price is associated with.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/product"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_product"
                  }
                ]
              }
            },
            "recurring": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/recurring"
                }
              ],
              "description": "The recurring components of a price such as `interval` and `usage_type`.",
              "nullable": true
            },
            "tax_behavior": {
              "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
              "enum": [
                "exclusive",
                "inclusive",
                "unspecified"
              ],
              "nullable": true,
              "type": "string"
            },
            "tiers": {
              "description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.",
              "items": {
                "$ref": "#/components/schemas/price_tier"
              },
              "type": "array"
            },
            "tiers_mode": {
              "description": "Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price. In `graduated` tiering, pricing can change as the quantity grows.",
              "enum": [
                "graduated",
                "volume"
              ],
              "nullable": true,
              "type": "string"
            },
            "transform_quantity": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/transform_quantity"
                }
              ],
              "description": "Apply a transformation to the reported usage or set quantity before computing the amount billed. Cannot be combined with `tiers`.",
              "nullable": true
            },
            "type": {
              "description": "One of `one_time` or `recurring` depending on whether the price is for a one-time purchase or a recurring (subscription) purchase.",
              "enum": [
                "one_time",
                "recurring"
              ],
              "type": "string"
            },
            "unit_amount": {
              "description": "The unit amount in %s to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.",
              "nullable": true,
              "type": "integer"
            },
            "unit_amount_decimal": {
              "description": "The unit amount in %s to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.",
              "format": "decimal",
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "active",
            "billing_scheme",
            "created",
            "currency",
            "id",
            "livemode",
            "metadata",
            "object",
            "product",
            "type"
          ],
          "title": "Price",
          "type": "object",
          "x-expandableFields": [
            "currency_options",
            "custom_unit_amount",
            "product",
            "recurring",
            "tiers",
            "transform_quantity"
          ],
          "x-resourceId": "price"
        }
      ],
      "description": {
        "description": "The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "images": {
        "description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer.",
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "name": {
        "description": "The product's name, meant to be displayable to the customer.",
        "maxLength": 5000,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "product"
        ],
        "type": "string"
      },
      "package_dimensions": [
        {
          "description": "",
          "properties": {
            "height": {
              "description": "Height, in inches.",
              "type": "number"
            },
            "length": {
              "description": "Length, in inches.",
              "type": "number"
            },
            "weight": {
              "description": "Weight, in ounces.",
              "type": "number"
            },
            "width": {
              "description": "Width, in inches.",
              "type": "number"
            }
          },
          "required": [
            "height",
            "length",
            "weight",
            "width"
          ],
          "title": "PackageDimensions",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "shippable": {
        "description": "Whether this product is shipped (i.e., physical goods).",
        "nullable": true,
        "type": "boolean"
      },
      "statement_descriptor": {
        "description": "Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "tax_code": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "[Tax codes](https://stripe.com/docs/tax/tax-categories) classify goods and services for tax purposes.",
          "properties": {
            "description": {
              "description": "A detailed description of which types of products the tax code represents.",
              "maxLength": 5000,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "A short name for the tax code.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "tax_code"
              ],
              "type": "string"
            }
          },
          "required": [
            "description",
            "id",
            "name",
            "object"
          ],
          "title": "TaxProductResourceTaxCode",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "tax_code"
        }
      ],
      "unit_label": {
        "description": "A label that represents units of this product in Stripe and on customersâ€™ receipts and invoices. When set, this will be included in associated invoice line item descriptions.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "updated": {
        "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "url": {
        "description": "A URL of a publicly-accessible webpage for this product.",
        "maxLength": 2048,
        "nullable": true,
        "type": "string"
      }
    },
    "required": [
      "active",
      "created",
      "id",
      "images",
      "livemode",
      "metadata",
      "name",
      "object",
      "updated"
    ],
    "title": "Product",
    "type": "object",
    "x-expandableFields": [
      "default_price",
      "package_dimensions",
      "tax_code"
    ],
    "x-resourceId": "product"
  },
  "promotion_code": {
    "description": "A Promotion Code represents a customer-redeemable code for a [coupon](https://stripe.com/docs/api#coupons). It can be used to\ncreate multiple codes for a single coupon.",
    "properties": {
      "active": {
        "description": "Whether the promotion code is currently active. A promotion code is only active if the coupon is also valid.",
        "type": "boolean"
      },
      "code": {
        "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
        "maxLength": 5000,
        "type": "string"
      },
      "coupon": {
        "description": "A coupon contains information about a percent-off or amount-off discount you\nmight want to apply to a customer. Coupons may be applied to [subscriptions](https://stripe.com/docs/api#subscriptions), [invoices](https://stripe.com/docs/api#invoices),\n[checkout sessions](https://stripe.com/docs/api/checkout/sessions), [quotes](https://stripe.com/docs/api#quotes), and more. Coupons do not work with conventional one-off [charges](https://stripe.com/docs/api#create_charge) or [payment intents](https://stripe.com/docs/api/payment_intents).",
        "properties": {
          "amount_off": {
            "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.",
            "nullable": true,
            "type": "integer"
          },
          "applies_to": {
            "$ref": "#/components/schemas/coupon_applies_to"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "If `amount_off` has been set, the three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the amount to take off.",
            "nullable": true,
            "type": "string"
          },
          "currency_options": {
            "additionalProperties": {
              "$ref": "#/components/schemas/coupon_currency_option"
            },
            "description": "Coupons defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
            "type": "object"
          },
          "duration": {
            "description": "One of `forever`, `once`, and `repeating`. Describes how long a customer who applies this coupon will get the discount.",
            "enum": [
              "forever",
              "once",
              "repeating"
            ],
            "type": "string"
          },
          "duration_in_months": {
            "description": "If `duration` is `repeating`, the number of months the coupon applies. Null if coupon `duration` is `forever` or `once`.",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "max_redemptions": {
            "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.",
            "nullable": true,
            "type": "integer"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "name": {
            "description": "Name of the coupon displayed to customers on for instance invoices or receipts.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "coupon"
            ],
            "type": "string"
          },
          "percent_off": {
            "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a %s100 invoice %s50 instead.",
            "nullable": true,
            "type": "number"
          },
          "redeem_by": {
            "description": "Date after which the coupon can no longer be redeemed.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "times_redeemed": {
            "description": "Number of times this coupon has been applied to a customer.",
            "type": "integer"
          },
          "valid": {
            "description": "Taking account of the above properties, whether this coupon can still be applied to a customer.",
            "type": "boolean"
          }
        },
        "required": [
          "created",
          "duration",
          "id",
          "livemode",
          "object",
          "times_redeemed",
          "valid"
        ],
        "title": "Coupon",
        "type": "object",
        "x-expandableFields": [
          "applies_to",
          "currency_options"
        ],
        "x-resourceId": "coupon"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "customer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address.",
              "nullable": true
            },
            "balance": {
              "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
              "type": "integer"
            },
            "cash_balance": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cash_balance"
                }
              ],
              "description": "The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the customer.\n\nIf you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "delinquent": {
              "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
              "nullable": true,
              "type": "boolean"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount active on the customer, if there is one.",
              "nullable": true
            },
            "email": {
              "description": "The customer's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_credit_balance": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "The current multi-currency balances, if any, being stored on the customer.If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency.If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices.They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
              "type": "object"
            },
            "invoice_prefix": {
              "description": "The prefix for the customer used to generate unique invoice numbers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_settings": {
              "$ref": "#/components/schemas/invoice_setting_customer_setting"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The customer's full name or business name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "next_invoice_sequence": {
              "description": "The suffix of the customer's next invoice number, e.g., 0001.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            },
            "phone": {
              "description": "The customer's phone number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "preferred_locales": {
              "description": "The customer's preferred locales (languages), ordered by preference.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
              "nullable": true
            },
            "sources": {
              "description": "The customer's payment sources, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      },
                      {
                        "$ref": "#/components/schemas/source"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "subscriptions": {
              "description": "The customer's current subscriptions, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "tax": {
              "$ref": "#/components/schemas/customer_tax"
            },
            "tax_exempt": {
              "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "tax_ids": {
              "description": "The customer's tax IDs.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this customer belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object"
          ],
          "title": "Customer",
          "type": "object",
          "x-expandableFields": [
            "address",
            "cash_balance",
            "default_source",
            "discount",
            "invoice_settings",
            "shipping",
            "sources",
            "subscriptions",
            "tax",
            "tax_ids",
            "test_clock"
          ],
          "x-resourceId": "customer"
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedCustomer",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "deleted_customer"
        }
      ],
      "expires_at": {
        "description": "Date at which the promotion code can no longer be redeemed.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "max_redemptions": {
        "description": "Maximum number of times this promotion code can be redeemed.",
        "nullable": true,
        "type": "integer"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "promotion_code"
        ],
        "type": "string"
      },
      "restrictions": {
        "description": "",
        "properties": {
          "currency_options": {
            "additionalProperties": {
              "$ref": "#/components/schemas/promotion_code_currency_option"
            },
            "description": "Promotion code restrictions defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
            "type": "object"
          },
          "first_time_transaction": {
            "description": "A Boolean indicating if the Promotion Code should only be redeemed for Customers without any successful payments or invoices",
            "type": "boolean"
          },
          "minimum_amount": {
            "description": "Minimum amount required to redeem this Promotion Code into a Coupon (e.g., a purchase must be $100 or more to work).",
            "nullable": true,
            "type": "integer"
          },
          "minimum_amount_currency": {
            "description": "Three-letter [ISO code](https://stripe.com/docs/currencies) for minimum_amount",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "first_time_transaction"
        ],
        "title": "PromotionCodesResourceRestrictions",
        "type": "object",
        "x-expandableFields": [
          "currency_options"
        ]
      },
      "times_redeemed": {
        "description": "Number of times this promotion code has been used.",
        "type": "integer"
      }
    },
    "required": [
      "active",
      "code",
      "coupon",
      "created",
      "id",
      "livemode",
      "object",
      "restrictions",
      "times_redeemed"
    ],
    "title": "PromotionCode",
    "type": "object",
    "x-expandableFields": [
      "coupon",
      "customer",
      "restrictions"
    ],
    "x-resourceId": "promotion_code"
  },
  "quote": {
    "description": "A Quote is a way to model prices that you'd like to provide to a customer.\nOnce accepted, it will automatically create an invoice, subscription or subscription schedule.",
    "properties": {
      "amount_subtotal": {
        "description": "Total before any discounts or taxes are applied.",
        "type": "integer"
      },
      "amount_total": {
        "description": "Total after discounts and taxes are applied.",
        "type": "integer"
      },
      "application": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "",
          "properties": {
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "The name of the application.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Application",
          "type": "object",
          "x-expandableFields": []
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "The name of the application.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedApplication",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "application_fee_amount": {
        "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. Only applicable if there are no line items with recurring prices on the quote.",
        "nullable": true,
        "type": "integer"
      },
      "application_fee_percent": {
        "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. Only applicable if there are line items with recurring prices on the quote.",
        "nullable": true,
        "type": "number"
      },
      "automatic_tax": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Automatically calculate taxes",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the most recent automated tax calculation for this quote.",
            "enum": [
              "complete",
              "failed",
              "requires_location_inputs"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "QuotesResourceAutomaticTax",
        "type": "object",
        "x-expandableFields": []
      },
      "collection_method": {
        "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or on finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions. Defaults to `charge_automatically`.",
        "enum": [
          "charge_automatically",
          "send_invoice"
        ],
        "type": "string"
      },
      "computed": {
        "description": "",
        "properties": {
          "recurring": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/quotes_resource_recurring"
              }
            ],
            "description": "The definitive totals and line items the customer will be charged on a recurring basis. Takes into account the line items with recurring prices and discounts with `duration=forever` coupons only. Defaults to `null` if no inputted line items with recurring prices.",
            "nullable": true
          },
          "upfront": {
            "$ref": "#/components/schemas/quotes_resource_upfront"
          }
        },
        "required": [
          "upfront"
        ],
        "title": "QuotesResourceComputed",
        "type": "object",
        "x-expandableFields": [
          "recurring",
          "upfront"
        ]
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "customer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address.",
              "nullable": true
            },
            "balance": {
              "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
              "type": "integer"
            },
            "cash_balance": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cash_balance"
                }
              ],
              "description": "The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the customer.\n\nIf you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "delinquent": {
              "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
              "nullable": true,
              "type": "boolean"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount active on the customer, if there is one.",
              "nullable": true
            },
            "email": {
              "description": "The customer's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_credit_balance": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "The current multi-currency balances, if any, being stored on the customer.If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency.If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices.They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
              "type": "object"
            },
            "invoice_prefix": {
              "description": "The prefix for the customer used to generate unique invoice numbers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_settings": {
              "$ref": "#/components/schemas/invoice_setting_customer_setting"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The customer's full name or business name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "next_invoice_sequence": {
              "description": "The suffix of the customer's next invoice number, e.g., 0001.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            },
            "phone": {
              "description": "The customer's phone number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "preferred_locales": {
              "description": "The customer's preferred locales (languages), ordered by preference.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
              "nullable": true
            },
            "sources": {
              "description": "The customer's payment sources, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      },
                      {
                        "$ref": "#/components/schemas/source"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "subscriptions": {
              "description": "The customer's current subscriptions, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "tax": {
              "$ref": "#/components/schemas/customer_tax"
            },
            "tax_exempt": {
              "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "tax_ids": {
              "description": "The customer's tax IDs.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this customer belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object"
          ],
          "title": "Customer",
          "type": "object",
          "x-expandableFields": [
            "address",
            "cash_balance",
            "default_source",
            "discount",
            "invoice_settings",
            "shipping",
            "sources",
            "subscriptions",
            "tax",
            "tax_ids",
            "test_clock"
          ],
          "x-resourceId": "customer"
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedCustomer",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "deleted_customer"
        }
      ],
      "default_tax_rates": {
        "description": "The tax rates applied to this quote.",
        "items": [
          {
            "maxLength": 5000,
            "type": "string"
          },
          {
            "description": "Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.\n\nRelated guide: [Tax Rates](https://stripe.com/docs/billing/taxes/tax-rates).",
            "properties": {
              "active": {
                "description": "Defaults to `true`. When set to `false`, this tax rate cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.",
                "type": "boolean"
              },
              "country": {
                "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "created": {
                "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                "format": "unix-time",
                "type": "integer"
              },
              "description": {
                "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "display_name": {
                "description": "The display name of the tax rates as it will appear to your customer on their receipt email, PDF, and the hosted invoice page.",
                "maxLength": 5000,
                "type": "string"
              },
              "id": {
                "description": "Unique identifier for the object.",
                "maxLength": 5000,
                "type": "string"
              },
              "inclusive": {
                "description": "This specifies if the tax rate is inclusive or exclusive.",
                "type": "boolean"
              },
              "jurisdiction": {
                "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customerâ€™s invoice.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "livemode": {
                "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                "type": "boolean"
              },
              "metadata": {
                "additionalProperties": {
                  "maxLength": 500,
                  "type": "string"
                },
                "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                "nullable": true,
                "type": "object"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value.",
                "enum": [
                  "tax_rate"
                ],
                "type": "string"
              },
              "percentage": {
                "description": "This represents the tax rate percent out of 100.",
                "type": "number"
              },
              "state": {
                "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "tax_type": {
                "description": "The high-level tax type, such as `vat` or `sales_tax`.",
                "enum": [
                  "gst",
                  "hst",
                  "jct",
                  "pst",
                  "qst",
                  "rst",
                  "sales_tax",
                  "vat"
                ],
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "active",
              "created",
              "display_name",
              "id",
              "inclusive",
              "livemode",
              "object",
              "percentage"
            ],
            "title": "TaxRate",
            "type": "object",
            "x-expandableFields": [],
            "x-resourceId": "tax_rate"
          }
        ],
        "type": "array"
      },
      "description": {
        "description": "A description that will be displayed on the quote PDF.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "discounts": {
        "description": "The discounts applied to this quote.",
        "items": [
          {
            "maxLength": 5000,
            "type": "string"
          },
          {
            "description": "A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).\nIt contains information about when the discount began, when it will end, and what it is applied to.\n\nRelated guide: [Applying Discounts to Subscriptions](https://stripe.com/docs/billing/subscriptions/discounts).",
            "properties": {
              "checkout_session": {
                "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "coupon": {
                "$ref": "#/components/schemas/coupon"
              },
              "customer": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ],
                "description": "The ID of the customer associated with this discount.",
                "nullable": true,
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/customer"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_customer"
                    }
                  ]
                }
              },
              "end": {
                "description": "If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.",
                "format": "unix-time",
                "nullable": true,
                "type": "integer"
              },
              "id": {
                "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
                "maxLength": 5000,
                "type": "string"
              },
              "invoice": {
                "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "invoice_item": {
                "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value.",
                "enum": [
                  "discount"
                ],
                "type": "string"
              },
              "promotion_code": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/promotion_code"
                  }
                ],
                "description": "The promotion code applied to create this discount.",
                "nullable": true,
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/promotion_code"
                    }
                  ]
                }
              },
              "start": {
                "description": "Date that the coupon was applied.",
                "format": "unix-time",
                "type": "integer"
              },
              "subscription": {
                "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "coupon",
              "id",
              "object",
              "start"
            ],
            "title": "Discount",
            "type": "object",
            "x-expandableFields": [
              "coupon",
              "customer",
              "promotion_code"
            ],
            "x-resourceId": "discount"
          }
        ],
        "type": "array"
      },
      "expires_at": {
        "description": "The date on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "footer": {
        "description": "A footer that will be displayed on the quote PDF.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "from_quote": [
        {
          "description": "",
          "properties": {
            "is_revision": {
              "description": "Whether this quote is a revision of a different quote.",
              "type": "boolean"
            },
            "quote": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/quote"
                }
              ],
              "description": "The quote that was cloned.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/quote"
                  }
                ]
              }
            }
          },
          "required": [
            "is_revision",
            "quote"
          ],
          "title": "QuotesResourceFromQuote",
          "type": "object",
          "x-expandableFields": [
            "quote"
          ]
        }
      ],
      "header": {
        "description": "A header that will be displayed on the quote PDF.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "invoice": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Invoices are statements of amounts owed by a customer, and are either\ngenerated one-off, or generated periodically from a subscription.\n\nThey contain [invoice items](https://stripe.com/docs/api#invoiceitems), and proration adjustments\nthat may be caused by subscription upgrades/downgrades (if necessary).\n\nIf your invoice is configured to be billed through automatic charges,\nStripe automatically finalizes your invoice and attempts payment. Note\nthat finalizing the invoice,\n[when automatic](https://stripe.com/docs/billing/invoices/workflow/#auto_advance), does\nnot happen immediately as the invoice is created. Stripe waits\nuntil one hour after the last webhook was successfully sent (or the last\nwebhook timed out after failing). If you (and the platforms you may have\nconnected to) have no webhooks configured, Stripe waits one hour after\ncreation to finalize the invoice.\n\nIf your invoice is configured to be billed by sending an email, then based on your\n[email settings](https://dashboard.stripe.com/account/billing/automatic),\nStripe will email the invoice to your customer and await payment. These\nemails can contain a link to a hosted page to pay the invoice.\n\nStripe applies any customer credit on the account before determining the\namount due for the invoice (i.e., the amount that will be actually\ncharged). If the amount due for the invoice is less than Stripe's [minimum allowed charge\nper currency](/docs/currencies#minimum-and-maximum-charge-amounts), the\ninvoice is automatically marked paid, and we add the amount due to the\ncustomer's credit balance which is applied to the next invoice.\n\nMore details on the customer's credit balance are\n[here](https://stripe.com/docs/billing/customer/balance).\n\nRelated guide: [Send Invoices to Customers](https://stripe.com/docs/billing/invoices/sending).",
          "properties": {
            "account_country": {
              "description": "The country of the business associated with this invoice, most often the business creating the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_name": {
              "description": "The public name of the business associated with this invoice, most often the business creating the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_tax_ids": {
              "description": "The account tax IDs associated with the invoice. Only editable when the invoice is a draft.",
              "items": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_tax_id"
                  }
                ],
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/tax_id"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_tax_id"
                    }
                  ]
                }
              },
              "nullable": true,
              "type": "array"
            },
            "amount_due": {
              "description": "Final amount due at this time for this invoice. If the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.",
              "type": "integer"
            },
            "amount_paid": {
              "description": "The amount, in %s, that was paid.",
              "type": "integer"
            },
            "amount_remaining": {
              "description": "The difference between amount_due and amount_paid, in %s.",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ],
              "description": "ID of the Connect Application that created the invoice.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_application"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The fee in %s that will be applied to the invoice and transferred to the application owner's Stripe account when the invoice is paid.",
              "nullable": true,
              "type": "integer"
            },
            "attempt_count": {
              "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule.",
              "type": "integer"
            },
            "attempted": {
              "description": "Whether an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.",
              "type": "boolean"
            },
            "auto_advance": {
              "description": "Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance) of the invoice. When `false`, the invoice's state will not automatically advance without an explicit action.",
              "type": "boolean"
            },
            "automatic_tax": {
              "$ref": "#/components/schemas/automatic_tax"
            },
            "billing_reason": {
              "description": "Indicates the reason why the invoice was created. `subscription_cycle` indicates an invoice created by a subscription advancing into a new period. `subscription_create` indicates an invoice created due to creating a subscription. `subscription_update` indicates an invoice created due to updating a subscription. `subscription` is set for all old invoices to indicate either a change to a subscription or a period advancement. `manual` is set for all invoices unrelated to a subscription (for example: created via the invoice editor). The `upcoming` value is reserved for simulated invoices per the upcoming invoice endpoint. `subscription_threshold` indicates an invoice created due to a billing threshold being reached.",
              "enum": [
                "automatic_pending_invoice_item_invoice",
                "manual",
                "quote_accept",
                "subscription",
                "subscription_create",
                "subscription_cycle",
                "subscription_threshold",
                "subscription_update",
                "upcoming"
              ],
              "nullable": true,
              "type": "string"
            },
            "charge": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/charge"
                }
              ],
              "description": "ID of the latest charge generated for this invoice, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/charge"
                  }
                ]
              }
            },
            "collection_method": {
              "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.",
              "enum": [
                "charge_automatically",
                "send_invoice"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "custom_fields": {
              "description": "Custom fields displayed on the invoice.",
              "items": {
                "$ref": "#/components/schemas/invoice_setting_custom_field"
              },
              "nullable": true,
              "type": "array"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The ID of the customer who will be billed.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "customer_address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address. Until the invoice is finalized, this field will equal `customer.address`. Once the invoice is finalized, this field will no longer be updated.",
              "nullable": true
            },
            "customer_email": {
              "description": "The customer's email. Until the invoice is finalized, this field will equal `customer.email`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_name": {
              "description": "The customer's name. Until the invoice is finalized, this field will equal `customer.name`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_phone": {
              "description": "The customer's phone number. Until the invoice is finalized, this field will equal `customer.phone`. Once the invoice is finalized, this field will no longer be updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "customer_shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "The customer's shipping information. Until the invoice is finalized, this field will equal `customer.shipping`. Once the invoice is finalized, this field will no longer be updated.",
              "nullable": true
            },
            "customer_tax_exempt": {
              "description": "The customer's tax exempt status. Until the invoice is finalized, this field will equal `customer.tax_exempt`. Once the invoice is finalized, this field will no longer be updated.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "customer_tax_ids": {
              "description": "The customer's tax IDs. Until the invoice is finalized, this field will contain the same tax IDs as `customer.tax_ids`. Once the invoice is finalized, this field will no longer be updated.",
              "items": {
                "$ref": "#/components/schemas/invoices_resource_invoice_tax_id"
              },
              "nullable": true,
              "type": "array"
            },
            "default_payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "default_tax_rates": {
              "description": "The tax rates applied to this invoice, if any.",
              "items": {
                "$ref": "#/components/schemas/tax_rate"
              },
              "type": "array"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount applied to this invoice, if there is one. Not populated if there are multiple discounts.",
              "nullable": true
            },
            "discounts": {
              "description": "The discounts applied to the invoice. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
              "items": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/discount"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_discount"
                  }
                ],
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/discount"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_discount"
                    }
                  ]
                }
              },
              "nullable": true,
              "type": "array"
            },
            "due_date": {
              "description": "The date on which payment for this invoice is due. This value will be `null` for invoices where `collection_method=charge_automatically`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "ending_balance": {
              "description": "Ending customer balance after the invoice is finalized. Invoices are finalized approximately an hour after successful webhook delivery or when payment collection is attempted for the invoice. If the invoice has not been finalized yet, this will be null.",
              "nullable": true,
              "type": "integer"
            },
            "footer": {
              "description": "Footer displayed on the invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "hosted_invoice_url": {
              "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_pdf": {
              "description": "The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "last_finalization_error": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/api_errors"
                }
              ],
              "description": "The error encountered during the previous attempt to finalize the invoice. This field is cleared when the invoice is successfully finalized.",
              "nullable": true
            },
            "lines": {
              "description": "The individual line items that make up the invoice. `lines` is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/line_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "InvoiceLinesList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "next_payment_attempt": {
              "description": "The time at which payment will next be attempted. This value will be `null` for invoices where `collection_method=send_invoice`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "number": {
              "description": "A unique, identifying string that appears on emails sent to the customer for this invoice. This starts with the customer's unique invoice_prefix if it is specified.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "invoice"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "paid": {
              "description": "Whether payment was successfully collected for this invoice. An invoice can be paid (most commonly) with a charge or with credit from the customer's account balance.",
              "type": "boolean"
            },
            "paid_out_of_band": {
              "description": "Returns true if the invoice was manually marked paid, returns false if the invoice hasn't been paid yet or was paid on Stripe.",
              "type": "boolean"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "The PaymentIntent associated with this invoice. The PaymentIntent is generated when the invoice is finalized, and can then be used to pay the invoice. Note that voiding an invoice will cancel the PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "payment_settings": {
              "$ref": "#/components/schemas/invoices_payment_settings"
            },
            "period_end": {
              "description": "End of the usage period during which invoice items were added to this invoice.",
              "format": "unix-time",
              "type": "integer"
            },
            "period_start": {
              "description": "Start of the usage period during which invoice items were added to this invoice.",
              "format": "unix-time",
              "type": "integer"
            },
            "post_payment_credit_notes_amount": {
              "description": "Total amount of all post-payment credit notes issued for this invoice.",
              "type": "integer"
            },
            "pre_payment_credit_notes_amount": {
              "description": "Total amount of all pre-payment credit notes issued for this invoice.",
              "type": "integer"
            },
            "quote": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/quote"
                }
              ],
              "description": "The quote this invoice was generated from.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/quote"
                  }
                ]
              }
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this invoice.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "rendering_options": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/invoice_setting_rendering_options"
                }
              ],
              "description": "Options for invoice PDF rendering.",
              "nullable": true
            },
            "starting_balance": {
              "description": "Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance.",
              "type": "integer"
            },
            "statement_descriptor": {
              "description": "Extra information about an invoice for the customer's credit card statement.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)",
              "enum": [
                "deleted",
                "draft",
                "open",
                "paid",
                "uncollectible",
                "void"
              ],
              "nullable": true,
              "type": "string"
            },
            "status_transitions": {
              "$ref": "#/components/schemas/invoices_status_transitions"
            },
            "subscription": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ],
              "description": "The subscription that this invoice was prepared for, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/subscription"
                  }
                ]
              }
            },
            "subscription_proration_date": {
              "description": "Only set for upcoming invoices that preview prorations. The time used to calculate prorations.",
              "type": "integer"
            },
            "subtotal": {
              "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or exclusive tax is applied. Item discounts are already incorporated",
              "type": "integer"
            },
            "subtotal_excluding_tax": {
              "description": "The integer amount in %s representing the subtotal of the invoice before any invoice level discount or tax is applied. Item discounts are already incorporated",
              "nullable": true,
              "type": "integer"
            },
            "tax": {
              "description": "The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice.",
              "nullable": true,
              "type": "integer"
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this invoice belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            },
            "threshold_reason": {
              "$ref": "#/components/schemas/invoice_threshold_reason"
            },
            "total": {
              "description": "Total after discounts and taxes.",
              "type": "integer"
            },
            "total_discount_amounts": {
              "description": "The aggregate amounts calculated per discount across all line items.",
              "items": {
                "$ref": "#/components/schemas/discounts_resource_discount_amount"
              },
              "nullable": true,
              "type": "array"
            },
            "total_excluding_tax": {
              "description": "The integer amount in %s representing the total amount of the invoice including all discounts but excluding all tax.",
              "nullable": true,
              "type": "integer"
            },
            "total_tax_amounts": {
              "description": "The aggregate amounts calculated per tax rate for all line items.",
              "items": {
                "$ref": "#/components/schemas/invoice_tax_amount"
              },
              "type": "array"
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/invoice_transfer_data"
                }
              ],
              "description": "The account (if any) the payment will be attributed to for tax reporting, and where funds from the payment will be transferred to for the invoice.",
              "nullable": true
            },
            "webhooks_delivered_at": {
              "description": "Invoices are automatically paid or sent 1 hour after webhooks are delivered, or until all webhook delivery attempts have [been exhausted](https://stripe.com/docs/billing/webhooks#understand). This field tracks the time when webhooks for this invoice were successfully delivered. If the invoice had no webhooks to deliver, this will be set while the invoice is being created.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            }
          },
          "required": [
            "amount_due",
            "amount_paid",
            "amount_remaining",
            "attempt_count",
            "attempted",
            "automatic_tax",
            "collection_method",
            "created",
            "currency",
            "default_tax_rates",
            "lines",
            "livemode",
            "object",
            "paid",
            "paid_out_of_band",
            "payment_settings",
            "period_end",
            "period_start",
            "post_payment_credit_notes_amount",
            "pre_payment_credit_notes_amount",
            "starting_balance",
            "status_transitions",
            "subtotal",
            "total",
            "total_tax_amounts"
          ],
          "title": "Invoice",
          "type": "object",
          "x-expandableFields": [
            "account_tax_ids",
            "application",
            "automatic_tax",
            "charge",
            "custom_fields",
            "customer",
            "customer_address",
            "customer_shipping",
            "customer_tax_ids",
            "default_payment_method",
            "default_source",
            "default_tax_rates",
            "discount",
            "discounts",
            "last_finalization_error",
            "lines",
            "on_behalf_of",
            "payment_intent",
            "payment_settings",
            "quote",
            "rendering_options",
            "status_transitions",
            "subscription",
            "test_clock",
            "threshold_reason",
            "total_discount_amounts",
            "total_tax_amounts",
            "transfer_data"
          ],
          "x-resourceId": "invoice"
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "invoice"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedInvoice",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "deleted_invoice"
        }
      ],
      "invoice_settings": [
        {
          "description": "",
          "properties": {
            "days_until_due": {
              "description": "Number of days within which a customer must pay invoices generated by this quote. This value will be `null` for quotes where `collection_method=charge_automatically`.",
              "nullable": true,
              "type": "integer"
            }
          },
          "title": "InvoiceSettingQuoteSetting",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "line_items": {
        "description": "A list of items the customer is being quoted for.",
        "properties": {
          "data": {
            "description": "Details about each object.",
            "items": {
              "description": "A line item.",
              "properties": {
                "amount_discount": {
                  "description": "Total discount amount applied. If no discounts were applied, defaults to 0.",
                  "type": "integer"
                },
                "amount_subtotal": {
                  "description": "Total before any discounts or taxes are applied.",
                  "type": "integer"
                },
                "amount_tax": {
                  "description": "Total tax amount applied. If no tax was applied, defaults to 0.",
                  "type": "integer"
                },
                "amount_total": {
                  "description": "Total after discounts and taxes.",
                  "type": "integer"
                },
                "currency": {
                  "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                  "type": "string"
                },
                "description": {
                  "description": "An arbitrary string attached to the object. Often useful for displaying to users. Defaults to product name.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "discounts": {
                  "description": "The discounts applied to the line item.",
                  "items": {
                    "$ref": "#/components/schemas/line_items_discount_amount"
                  },
                  "type": "array"
                },
                "id": {
                  "description": "Unique identifier for the object.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "item"
                  ],
                  "type": "string"
                },
                "price": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/price"
                    }
                  ],
                  "description": "The price used to generate the line item.",
                  "nullable": true
                },
                "product": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/product"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_product"
                    }
                  ],
                  "description": "The ID of the product for this line item.\n\nThis will always be the same as `price.product`.",
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/product"
                      },
                      {
                        "$ref": "#/components/schemas/deleted_product"
                      }
                    ]
                  }
                },
                "quantity": {
                  "description": "The quantity of products being purchased.",
                  "nullable": true,
                  "type": "integer"
                },
                "taxes": {
                  "description": "The taxes applied to the line item.",
                  "items": {
                    "$ref": "#/components/schemas/line_items_tax_amount"
                  },
                  "type": "array"
                }
              },
              "required": [
                "amount_discount",
                "amount_subtotal",
                "amount_tax",
                "amount_total",
                "currency",
                "description",
                "id",
                "object"
              ],
              "title": "LineItem",
              "type": "object",
              "x-expandableFields": [
                "discounts",
                "price",
                "product",
                "taxes"
              ],
              "x-resourceId": "item"
            },
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "QuotesResourceListLineItems",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "number": {
        "description": "A unique number that identifies this particular quote. This number is assigned once the quote is [finalized](https://stripe.com/docs/quotes/overview#finalize).",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "quote"
        ],
        "type": "string"
      },
      "on_behalf_of": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current e-mail address or if the account is\nenabled yet to make live charges.\n\nSome properties, marked below, are available only to platforms that want to\n[create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts).",
          "properties": {
            "business_profile": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_business_profile"
                }
              ],
              "description": "Business information about the account.",
              "nullable": true
            },
            "business_type": {
              "description": "The business type.",
              "enum": [
                "company",
                "government_entity",
                "individual",
                "non_profit"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "capabilities": {
              "$ref": "#/components/schemas/account_capabilities"
            },
            "charges_enabled": {
              "description": "Whether the account can create live charges.",
              "type": "boolean"
            },
            "company": {
              "$ref": "#/components/schemas/legal_entity_company"
            },
            "controller": {
              "$ref": "#/components/schemas/account_unification_account_controller"
            },
            "country": {
              "description": "The account's country.",
              "maxLength": 5000,
              "type": "string"
            },
            "created": {
              "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "default_currency": {
              "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
              "maxLength": 5000,
              "type": "string"
            },
            "details_submitted": {
              "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
              "type": "boolean"
            },
            "email": {
              "description": "An email address associated with the account. You can treat this as metadata: it is not used for authentication or messaging account holders.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "external_accounts": {
              "description": "External accounts (bank accounts and debit cards) currently attached to this account",
              "properties": {
                "data": {
                  "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ExternalAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "future_requirements": {
              "$ref": "#/components/schemas/account_future_requirements"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "individual": {
              "$ref": "#/components/schemas/person"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "account"
              ],
              "type": "string"
            },
            "payouts_enabled": {
              "description": "Whether Stripe can send payouts to this account.",
              "type": "boolean"
            },
            "requirements": {
              "$ref": "#/components/schemas/account_requirements"
            },
            "settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_settings"
                }
              ],
              "description": "Options for customizing how the account functions within Stripe.",
              "nullable": true
            },
            "tos_acceptance": {
              "$ref": "#/components/schemas/account_tos_acceptance"
            },
            "type": {
              "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
              "enum": [
                "custom",
                "express",
                "standard"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Account",
          "type": "object",
          "x-expandableFields": [
            "business_profile",
            "capabilities",
            "company",
            "controller",
            "external_accounts",
            "future_requirements",
            "individual",
            "requirements",
            "settings",
            "tos_acceptance"
          ],
          "x-resourceId": "account"
        }
      ],
      "status": {
        "description": "The status of the quote.",
        "enum": [
          "accepted",
          "canceled",
          "draft",
          "open"
        ],
        "type": "string"
      },
      "status_transitions": {
        "description": "",
        "properties": {
          "accepted_at": {
            "description": "The time that the quote was accepted. Measured in seconds since Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "canceled_at": {
            "description": "The time that the quote was canceled. Measured in seconds since Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "finalized_at": {
            "description": "The time that the quote was finalized. Measured in seconds since Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "QuotesResourceStatusTransitions",
        "type": "object",
        "x-expandableFields": []
      },
      "subscription": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Subscriptions allow you to charge a customer on a recurring basis.\n\nRelated guide: [Creating Subscriptions](https://stripe.com/docs/billing/subscriptions/creating).",
          "properties": {
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ],
              "description": "ID of the Connect Application that created the subscription.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_application"
                  }
                ]
              }
            },
            "application_fee_percent": {
              "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.",
              "nullable": true,
              "type": "number"
            },
            "automatic_tax": {
              "$ref": "#/components/schemas/subscription_automatic_tax"
            },
            "billing_cycle_anchor": {
              "description": "Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.",
              "format": "unix-time",
              "type": "integer"
            },
            "billing_thresholds": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_billing_thresholds"
                }
              ],
              "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
              "nullable": true
            },
            "cancel_at": {
              "description": "A date in the future at which the subscription will automatically get canceled",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "cancel_at_period_end": {
              "description": "If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.",
              "type": "boolean"
            },
            "canceled_at": {
              "description": "If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will reflect the time of the most recent update request, not the end of the subscription period when the subscription is automatically moved to a canceled state.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "collection_method": {
              "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions.",
              "enum": [
                "charge_automatically",
                "send_invoice"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "current_period_end": {
              "description": "End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.",
              "format": "unix-time",
              "type": "integer"
            },
            "current_period_start": {
              "description": "Start of the current period that the subscription has been invoiced for.",
              "format": "unix-time",
              "type": "integer"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the customer who owns the subscription.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "days_until_due": {
              "description": "Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`.",
              "nullable": true,
              "type": "integer"
            },
            "default_payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "default_tax_rates": {
              "description": "The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.",
              "items": {
                "$ref": "#/components/schemas/tax_rate"
              },
              "nullable": true,
              "type": "array"
            },
            "description": {
              "description": "The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces.",
              "maxLength": 500,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount applied to this subscription, if there is one. When billing, a discount applied to a subscription overrides a discount applied on a customer-wide basis.",
              "nullable": true
            },
            "ended_at": {
              "description": "If the subscription has ended, the date the subscription ended.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "items": {
              "description": "List of subscription items, each with an attached price.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionItemList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "latest_invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "The most recent invoice this subscription has generated.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "next_pending_invoice_item_invoice": {
              "description": "Specifies the approximate timestamp on which any pending invoice items will be billed according to the schedule provided at `pending_invoice_item_interval`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "subscription"
              ],
              "type": "string"
            },
            "pause_collection": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscriptions_resource_pause_collection"
                }
              ],
              "description": "If specified, payment collection for this subscription will be paused.",
              "nullable": true
            },
            "payment_settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscriptions_resource_payment_settings"
                }
              ],
              "description": "Payment settings passed on to invoices created by the subscription.",
              "nullable": true
            },
            "pending_invoice_item_interval": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_pending_invoice_item_interval"
                }
              ],
              "description": "Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.",
              "nullable": true
            },
            "pending_setup_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/setup_intent"
                }
              ],
              "description": "You can use this [SetupIntent](https://stripe.com/docs/api/setup_intents) to collect user authentication when creating a subscription without immediate payment or updating a subscription's payment method, allowing you to optimize for off-session payments. Learn more in the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/setup_intent"
                  }
                ]
              }
            },
            "pending_update": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscriptions_resource_pending_update"
                }
              ],
              "description": "If specified, [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates) that will be applied to the subscription once the `latest_invoice` has been paid.",
              "nullable": true
            },
            "schedule": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/subscription_schedule"
                }
              ],
              "description": "The schedule attached to the subscription",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/subscription_schedule"
                  }
                ]
              }
            },
            "start_date": {
              "description": "Date when the subscription was first created. The date might differ from the `created` date due to backdating.",
              "format": "unix-time",
              "type": "integer"
            },
            "status": {
              "description": "Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`, `past_due`, `canceled`, or `unpaid`. \n\nFor `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this state can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` state. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal state, the open invoice will be voided and no further invoices will be generated. \n\nA subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over. \n\nIf subscription `collection_method=charge_automatically` it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid` (depending on your subscriptions settings) when Stripe has exhausted all payment retry attempts. \n\nIf subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.",
              "enum": [
                "active",
                "canceled",
                "incomplete",
                "incomplete_expired",
                "past_due",
                "trialing",
                "unpaid"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this subscription belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_transfer_data"
                }
              ],
              "description": "The account (if any) the subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.",
              "nullable": true
            },
            "trial_end": {
              "description": "If the subscription has a trial, the end of that trial.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "trial_start": {
              "description": "If the subscription has a trial, the beginning of that trial.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            }
          },
          "required": [
            "automatic_tax",
            "billing_cycle_anchor",
            "cancel_at_period_end",
            "collection_method",
            "created",
            "currency",
            "current_period_end",
            "current_period_start",
            "customer",
            "id",
            "items",
            "livemode",
            "metadata",
            "object",
            "start_date",
            "status"
          ],
          "title": "Subscription",
          "type": "object",
          "x-expandableFields": [
            "application",
            "automatic_tax",
            "billing_thresholds",
            "customer",
            "default_payment_method",
            "default_source",
            "default_tax_rates",
            "discount",
            "items",
            "latest_invoice",
            "pause_collection",
            "payment_settings",
            "pending_invoice_item_interval",
            "pending_setup_intent",
            "pending_update",
            "schedule",
            "test_clock",
            "transfer_data"
          ],
          "x-resourceId": "subscription"
        }
      ],
      "subscription_data": {
        "description": "",
        "properties": {
          "effective_date": {
            "description": "When creating a new subscription, the date of which the subscription schedule will start after the quote is accepted. This date is ignored if it is in the past when the quote is accepted. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "trial_period_days": {
            "description": "Integer representing the number of trial period days before the customer is charged for the first time.",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "QuotesResourceSubscriptionData",
        "type": "object",
        "x-expandableFields": []
      },
      "subscription_schedule": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A subscription schedule allows you to create and manage the lifecycle of a subscription by predefining expected changes.\n\nRelated guide: [Subscription Schedules](https://stripe.com/docs/billing/subscriptions/subscription-schedules).",
          "properties": {
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ],
              "description": "ID of the Connect Application that created the schedule.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_application"
                  }
                ]
              }
            },
            "canceled_at": {
              "description": "Time at which the subscription schedule was canceled. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "completed_at": {
              "description": "Time at which the subscription schedule was completed. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "current_phase": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_schedule_current_phase"
                }
              ],
              "description": "Object representing the start and end dates for the current phase of the subscription schedule, if it is `active`.",
              "nullable": true
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the customer who owns the subscription schedule.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "default_settings": {
              "$ref": "#/components/schemas/subscription_schedules_resource_default_settings"
            },
            "end_behavior": {
              "description": "Behavior of the subscription schedule and underlying subscription when it ends. Possible values are `release` and `cancel`.",
              "enum": [
                "cancel",
                "none",
                "release",
                "renew"
              ],
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "subscription_schedule"
              ],
              "type": "string"
            },
            "phases": {
              "description": "Configuration for the subscription schedule's phases.",
              "items": {
                "$ref": "#/components/schemas/subscription_schedule_phase_configuration"
              },
              "type": "array"
            },
            "released_at": {
              "description": "Time at which the subscription schedule was released. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "released_subscription": {
              "description": "ID of the subscription once managed by the subscription schedule (if it is released).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The present status of the subscription schedule. Possible values are `not_started`, `active`, `completed`, `released`, and `canceled`. You can read more about the different states in our [behavior guide](https://stripe.com/docs/billing/subscriptions/subscription-schedules).",
              "enum": [
                "active",
                "canceled",
                "completed",
                "not_started",
                "released"
              ],
              "type": "string"
            },
            "subscription": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ],
              "description": "ID of the subscription managed by the subscription schedule.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/subscription"
                  }
                ]
              }
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this subscription schedule belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "customer",
            "default_settings",
            "end_behavior",
            "id",
            "livemode",
            "object",
            "phases",
            "status"
          ],
          "title": "SubscriptionSchedule",
          "type": "object",
          "x-expandableFields": [
            "application",
            "current_phase",
            "customer",
            "default_settings",
            "phases",
            "subscription",
            "test_clock"
          ],
          "x-resourceId": "subscription_schedule"
        }
      ],
      "test_clock": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A test clock enables deterministic control over objects in testmode. With a test clock, you can create\nobjects at a frozen time in the past or future, and advance to a specific future time to observe webhooks and state changes. After the clock advances,\nyou can either validate the current state of your scenario (and test your assumptions), change the current state of your scenario (and test more complex scenarios), or keep advancing forward in time.",
          "properties": {
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "deletes_after": {
              "description": "Time at which this clock is scheduled to auto delete.",
              "format": "unix-time",
              "type": "integer"
            },
            "frozen_time": {
              "description": "Time at which all objects belonging to this clock are frozen.",
              "format": "unix-time",
              "type": "integer"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "name": {
              "description": "The custom name supplied at creation.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "test_helpers.test_clock"
              ],
              "type": "string"
            },
            "status": {
              "description": "The status of the Test Clock.",
              "enum": [
                "advancing",
                "internal_failure",
                "ready"
              ],
              "type": "string"
            }
          },
          "required": [
            "created",
            "deletes_after",
            "frozen_time",
            "id",
            "livemode",
            "object",
            "status"
          ],
          "title": "TestClock",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "test_helpers.test_clock"
        }
      ],
      "total_details": {
        "description": "",
        "properties": {
          "amount_discount": {
            "description": "This is the sum of all the discounts.",
            "type": "integer"
          },
          "amount_shipping": {
            "description": "This is the sum of all the shipping amounts.",
            "nullable": true,
            "type": "integer"
          },
          "amount_tax": {
            "description": "This is the sum of all the tax amounts.",
            "type": "integer"
          },
          "breakdown": {
            "$ref": "#/components/schemas/quotes_resource_total_details_resource_breakdown"
          }
        },
        "required": [
          "amount_discount",
          "amount_tax"
        ],
        "title": "QuotesResourceTotalDetails",
        "type": "object",
        "x-expandableFields": [
          "breakdown"
        ]
      },
      "transfer_data": [
        {
          "description": "",
          "properties": {
            "amount": {
              "description": "The amount in %s that will be transferred to the destination account when the invoice is paid. By default, the entire amount is transferred to the destination.",
              "nullable": true,
              "type": "integer"
            },
            "amount_percent": {
              "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the destination account. By default, the entire amount will be transferred to the destination.",
              "nullable": true,
              "type": "number"
            },
            "destination": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account where funds from the payment will be transferred to upon payment success.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            }
          },
          "required": [
            "destination"
          ],
          "title": "QuotesResourceTransferData",
          "type": "object",
          "x-expandableFields": [
            "destination"
          ]
        }
      ]
    },
    "required": [
      "amount_subtotal",
      "amount_total",
      "automatic_tax",
      "collection_method",
      "computed",
      "created",
      "discounts",
      "expires_at",
      "id",
      "livemode",
      "metadata",
      "object",
      "status",
      "status_transitions",
      "subscription_data",
      "total_details"
    ],
    "title": "Quote",
    "type": "object",
    "x-expandableFields": [
      "application",
      "automatic_tax",
      "computed",
      "customer",
      "default_tax_rates",
      "discounts",
      "from_quote",
      "invoice",
      "invoice_settings",
      "line_items",
      "on_behalf_of",
      "status_transitions",
      "subscription",
      "subscription_data",
      "subscription_schedule",
      "test_clock",
      "total_details",
      "transfer_data"
    ],
    "x-resourceId": "quote"
  },
  "early_fraud_warning": {
    "description": "An early fraud warning indicates that the card issuer has notified us that a\ncharge may be fraudulent.\n\nRelated guide: [Early Fraud Warnings](https://stripe.com/docs/disputes/measuring#early-fraud-warnings).",
    "properties": {
      "actionable": {
        "description": "An EFW is actionable if it has not received a dispute and has not been fully refunded. You may wish to proactively refund a charge that receives an EFW, in order to avoid receiving a dispute later.",
        "type": "boolean"
      },
      "charge": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "To charge a credit or a debit card, you create a `Charge` object. You can\nretrieve and refund individual charges as well as list all charges. Charges\nare identified by a unique, random ID.\n\nRelated guide: [Accept a payment with the Charges API](https://stripe.com/docs/payments/accept-a-payment-charges).",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "amount_captured": {
              "description": "Amount in %s captured (can be less than the amount attribute on the charge if a partial capture was made).",
              "type": "integer"
            },
            "amount_refunded": {
              "description": "Amount in %s refunded (can be less than the amount attribute on the charge if a partial refund was issued).",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the charge.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "application_fee": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                }
              ],
              "description": "The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "type": "integer"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "billing_details": {
              "$ref": "#/components/schemas/billing_details"
            },
            "calculated_statement_descriptor": {
              "description": "The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "captured": {
              "description": "If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.",
              "type": "boolean"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the customer this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 40000,
              "nullable": true,
              "type": "string"
            },
            "disputed": {
              "description": "Whether the charge has been disputed.",
              "type": "boolean"
            },
            "failure_balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the reversal of the balance on your account due to payment failure.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "failure_code": {
              "description": "Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "failure_message": {
              "description": "Message to user further explaining reason for charge failure if available.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "fraud_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_fraud_details"
                }
              ],
              "description": "Information on fraud assessments for the charge.",
              "nullable": true
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "ID of the invoice this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "charge"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "outcome": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_outcome"
                }
              ],
              "description": "Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details.",
              "nullable": true
            },
            "paid": {
              "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
              "type": "boolean"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "ID of the PaymentIntent associated with this charge, if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "payment_method": {
              "description": "ID of the payment method used in this charge.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "payment_method_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_details"
                }
              ],
              "description": "Details about the payment method at the time of the transaction.",
              "nullable": true
            },
            "radar_options": {
              "$ref": "#/components/schemas/radar_radar_options"
            },
            "receipt_email": {
              "description": "This is the email address that the receipt for this charge was sent to.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_url": {
              "description": "This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "refunded": {
              "description": "Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.",
              "type": "boolean"
            },
            "refunds": {
              "description": "A list of refunds that have been applied to the charge.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/refund"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "RefundList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "review": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/review"
                }
              ],
              "description": "ID of the review associated with this charge if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/review"
                  }
                ]
              }
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Shipping information for the charge.",
              "nullable": true
            },
            "source_transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "statement_descriptor": {
              "description": "For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "statement_descriptor_suffix": {
              "description": "Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the payment is either `succeeded`, `pending`, or `failed`.",
              "enum": [
                "failed",
                "pending",
                "succeeded"
              ],
              "type": "string"
            },
            "transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_transfer_data"
                }
              ],
              "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true
            },
            "transfer_group": {
              "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "amount_captured",
            "amount_refunded",
            "billing_details",
            "captured",
            "created",
            "currency",
            "disputed",
            "id",
            "livemode",
            "metadata",
            "object",
            "paid",
            "refunded",
            "refunds",
            "status"
          ],
          "title": "Charge",
          "type": "object",
          "x-expandableFields": [
            "application",
            "application_fee",
            "balance_transaction",
            "billing_details",
            "customer",
            "failure_balance_transaction",
            "fraud_details",
            "invoice",
            "on_behalf_of",
            "outcome",
            "payment_intent",
            "payment_method_details",
            "radar_options",
            "refunds",
            "review",
            "shipping",
            "source_transfer",
            "transfer",
            "transfer_data"
          ],
          "x-resourceId": "charge"
        }
      ],
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "fraud_type": {
        "description": "The type of fraud labelled by the issuer. One of `card_never_received`, `fraudulent_card_application`, `made_with_counterfeit_card`, `made_with_lost_card`, `made_with_stolen_card`, `misc`, `unauthorized_use_of_card`.",
        "maxLength": 5000,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "radar.early_fraud_warning"
        ],
        "type": "string"
      },
      "payment_intent": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A PaymentIntent guides you through the process of collecting a payment from your customer.\nWe recommend that you create exactly one PaymentIntent for each order or\ncustomer session in your system. You can reference the PaymentIntent later to\nsee the history of payment attempts for a particular session.\n\nA PaymentIntent transitions through\n[multiple statuses](https://stripe.com/docs/payments/intents#intent-statuses)\nthroughout its lifetime as it interfaces with Stripe.js to perform\nauthentication flows and ultimately creates at most one successful charge.\n\nRelated guide: [Payment Intents API](https://stripe.com/docs/payments/payment-intents).",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "amount_capturable": {
              "description": "Amount that can be captured from this PaymentIntent.",
              "type": "integer"
            },
            "amount_details": {
              "$ref": "#/components/schemas/payment_flows_amount_details"
            },
            "amount_received": {
              "description": "Amount that was collected by this PaymentIntent.",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
              "nullable": true,
              "type": "integer"
            },
            "automatic_payment_methods": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_flows_automatic_payment_methods_payment_intent"
                }
              ],
              "description": "Settings to configure compatible payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods)",
              "nullable": true
            },
            "canceled_at": {
              "description": "Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "cancellation_reason": {
              "description": "Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`).",
              "enum": [
                "abandoned",
                "automatic",
                "duplicate",
                "failed_invoice",
                "fraudulent",
                "requested_by_customer",
                "void_invoice"
              ],
              "nullable": true,
              "type": "string"
            },
            "capture_method": {
              "description": "Controls when the funds will be captured from the customer's account.",
              "enum": [
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "charges": {
              "description": "Charges that were created by this PaymentIntent, if any.",
              "properties": {
                "data": {
                  "description": "This list only contains the latest charge, even if there were previously multiple unsuccessful charges. To view all previous charges for a PaymentIntent, you can filter the charges list using the `payment_intent` [parameter](https://stripe.com/docs/api/charges/list#list_charges-payment_intent).",
                  "items": {
                    "$ref": "#/components/schemas/charge"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentFlowsPaymentIntentResourceChargeList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "client_secret": {
              "description": "The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. \n\nThe client secret can be used to complete a payment from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.\n\nRefer to our docs to [accept a payment](https://stripe.com/docs/payments/accept-a-payment?ui=elements) and learn about how `client_secret` should be handled.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "confirmation_method": {
              "enum": [
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the Customer this PaymentIntent belongs to, if one exists.\n\nPayment methods attached to other Customers cannot be used with this PaymentIntent.\n\nIf present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "ID of the invoice that created this PaymentIntent, if it exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "last_payment_error": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/api_errors"
                }
              ],
              "description": "The payment error encountered in the previous PaymentIntent confirmation. It will be cleared if the PaymentIntent is later updated for any reason.",
              "nullable": true
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. For more information, see the [documentation](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).",
              "type": "object"
            },
            "next_action": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_next_action"
                }
              ],
              "description": "If present, this property tells you what actions you need to take in order for your customer to fulfill a payment using the provided source.",
              "nullable": true
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "payment_intent"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) for which the funds of the PaymentIntent are intended. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the payment method used in this PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "payment_method_options": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_payment_method_options"
                }
              ],
              "description": "Payment-method-specific configuration for this PaymentIntent.",
              "nullable": true
            },
            "payment_method_types": {
              "description": "The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "processing": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_processing"
                }
              ],
              "description": "If present, this property tells you about the processing state of the payment.",
              "nullable": true
            },
            "receipt_email": {
              "description": "Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "review": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/review"
                }
              ],
              "description": "ID of the review associated with this PaymentIntent, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/review"
                  }
                ]
              }
            },
            "setup_future_usage": {
              "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
              "enum": [
                "off_session",
                "on_session"
              ],
              "nullable": true,
              "type": "string"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Shipping information for this PaymentIntent.",
              "nullable": true
            },
            "statement_descriptor": {
              "description": "For non-card charges, you can use this value as the complete description that appears on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "statement_descriptor_suffix": {
              "description": "Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "Status of this PaymentIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `requires_capture`, `canceled`, or `succeeded`. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses).",
              "enum": [
                "canceled",
                "processing",
                "requires_action",
                "requires_capture",
                "requires_confirmation",
                "requires_payment_method",
                "succeeded"
              ],
              "type": "string"
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/transfer_data"
                }
              ],
              "description": "The data with which to automatically create a Transfer when the payment is finalized. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "nullable": true
            },
            "transfer_group": {
              "description": "A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "capture_method",
            "confirmation_method",
            "created",
            "currency",
            "id",
            "livemode",
            "object",
            "payment_method_types",
            "status"
          ],
          "title": "PaymentIntent",
          "type": "object",
          "x-expandableFields": [
            "amount_details",
            "application",
            "automatic_payment_methods",
            "charges",
            "customer",
            "invoice",
            "last_payment_error",
            "next_action",
            "on_behalf_of",
            "payment_method",
            "payment_method_options",
            "processing",
            "review",
            "shipping",
            "transfer_data"
          ],
          "x-resourceId": "payment_intent"
        }
      ]
    },
    "required": [
      "actionable",
      "charge",
      "created",
      "fraud_type",
      "id",
      "livemode",
      "object"
    ],
    "title": "RadarEarlyFraudWarning",
    "type": "object",
    "x-expandableFields": [
      "charge",
      "payment_intent"
    ],
    "x-resourceId": "radar.early_fraud_warning"
  },
  "recipient": {
    "description": "With `Recipient` objects, you can transfer money from your Stripe account to a\nthird-party bank account or debit card. The API allows you to create, delete,\nand update your recipients. You can retrieve individual recipients as well as\na list of all your recipients.\n\n**`Recipient` objects have been deprecated in favor of\n[Connect](https://stripe.com/docs/connect), specifically Connect's much more powerful\n[Account objects](https://stripe.com/docs/api#account). Stripe accounts that don't already use\nrecipients can no longer begin doing so. Please use `Account` objects\ninstead.**",
    "properties": {
      "active_account": [
        {
          "description": "These bank accounts are payment methods on `Customer` objects.\n\nOn the other hand [External Accounts](https://stripe.com/docs/api#external_accounts) are transfer\ndestinations on `Account` objects for [Custom accounts](https://stripe.com/docs/connect/custom-accounts).\nThey can be bank accounts or debit cards as well, and are documented in the links above.\n\nRelated guide: [Bank Debits and Transfers](https://stripe.com/docs/payments/bank-debits-transfers).",
          "properties": {
            "account": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The ID of the account that the bank account is associated with.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "account_holder_name": {
              "description": "The name of the person or business that owns the bank account.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_holder_type": {
              "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "account_type": {
              "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "available_payout_methods": {
              "description": "A set of available payout methods for this bank account. Only values from this set should be passed as the `method` when creating a payout.",
              "items": {
                "enum": [
                  "instant",
                  "standard"
                ],
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "bank_name": {
              "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "country": {
              "description": "Two-letter ISO code representing the country the bank account is located in.",
              "maxLength": 5000,
              "type": "string"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The ID of the customer that the bank account is associated with.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "default_for_currency": {
              "description": "Whether this bank account is the default external account for its currency.",
              "nullable": true,
              "type": "boolean"
            },
            "fingerprint": {
              "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "last4": {
              "description": "The last four digits of the bank account number.",
              "maxLength": 5000,
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "bank_account"
              ],
              "type": "string"
            },
            "routing_number": {
              "description": "The routing transit number for the bank account.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Stripe can determine that the bank account exists, its status will be `validated`. Note that there often isnâ€™t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a transfer sent to this bank account fails, we'll set the status to `errored` and will not continue to send transfers until the bank details are updated.\n\nFor external accounts, possible values are `new` and `errored`. Validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "country",
            "currency",
            "id",
            "last4",
            "object",
            "status"
          ],
          "title": "BankAccount",
          "type": "object",
          "x-expandableFields": [
            "account",
            "customer"
          ],
          "x-resourceId": "bank_account"
        }
      ],
      "cards": {
        "description": "",
        "nullable": true,
        "properties": {
          "data": {
            "items": {
              "description": "You can store multiple cards on a customer in order to charge the customer\nlater. You can also store multiple debit cards on a recipient in order to\ntransfer to those cards later.\n\nRelated guide: [Card Payments with Sources](https://stripe.com/docs/sources/cards).",
              "properties": {
                "account": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/account"
                    }
                  ],
                  "description": "The account this card belongs to. This attribute will not be in the card object if the card belongs to a customer or recipient instead.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/account"
                      }
                    ]
                  }
                },
                "address_city": {
                  "description": "City/District/Suburb/Town/Village.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "address_country": {
                  "description": "Billing address country, if provided when creating card.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "address_line1": {
                  "description": "Address line 1 (Street address/PO Box/Company name).",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "address_line1_check": {
                  "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "address_line2": {
                  "description": "Address line 2 (Apartment/Suite/Unit/Building).",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "address_state": {
                  "description": "State/County/Province/Region.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "address_zip": {
                  "description": "ZIP or postal code.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "address_zip_check": {
                  "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "available_payout_methods": {
                  "description": "A set of available payout methods for this card. Only values from this set should be passed as the `method` when creating a payout.",
                  "items": {
                    "enum": [
                      "instant",
                      "standard"
                    ],
                    "type": "string"
                  },
                  "nullable": true,
                  "type": "array"
                },
                "brand": {
                  "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "country": {
                  "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "currency": {
                  "description": "Three-letter [ISO code for currency](https://stripe.com/docs/payouts). Only applicable on accounts (not customers or recipients). The card can be used as a transfer destination for funds in this currency.",
                  "nullable": true,
                  "type": "string"
                },
                "customer": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/customer"
                    },
                    {
                      "$ref": "#/components/schemas/deleted_customer"
                    }
                  ],
                  "description": "The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/customer"
                      },
                      {
                        "$ref": "#/components/schemas/deleted_customer"
                      }
                    ]
                  }
                },
                "cvc_check": {
                  "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. A result of unchecked indicates that CVC was provided but hasn't been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https://support.stripe.com/questions/check-if-a-card-is-valid-without-a-charge).",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "default_for_currency": {
                  "description": "Whether this card is the default external account for its currency.",
                  "nullable": true,
                  "type": "boolean"
                },
                "dynamic_last4": {
                  "description": "(For tokenized numbers only.) The last four digits of the device account number.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "exp_month": {
                  "description": "Two-digit number representing the card's expiration month.",
                  "type": "integer"
                },
                "exp_year": {
                  "description": "Four-digit number representing the card's expiration year.",
                  "type": "integer"
                },
                "fingerprint": {
                  "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers whoâ€™ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "funding": {
                  "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "id": {
                  "description": "Unique identifier for the object.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "last4": {
                  "description": "The last four digits of the card.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "metadata": {
                  "additionalProperties": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                  "nullable": true,
                  "type": "object"
                },
                "name": {
                  "description": "Cardholder name.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "card"
                  ],
                  "type": "string"
                },
                "recipient": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/recipient"
                    }
                  ],
                  "description": "The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/recipient"
                      }
                    ]
                  }
                },
                "status": {
                  "description": "For external accounts, possible values are `new` and `errored`. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                },
                "tokenization_method": {
                  "description": "If the card number is tokenized, this is the method that was used. Can be `android_pay` (includes Google Pay), `apple_pay`, `masterpass`, `visa_checkout`, or null.",
                  "maxLength": 5000,
                  "nullable": true,
                  "type": "string"
                }
              },
              "required": [
                "brand",
                "exp_month",
                "exp_year",
                "funding",
                "id",
                "last4",
                "object"
              ],
              "title": "Card",
              "type": "object",
              "x-expandableFields": [
                "account",
                "customer",
                "recipient"
              ],
              "x-resourceId": "card"
            },
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "CardList",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "default_card": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "You can store multiple cards on a customer in order to charge the customer\nlater. You can also store multiple debit cards on a recipient in order to\ntransfer to those cards later.\n\nRelated guide: [Card Payments with Sources](https://stripe.com/docs/sources/cards).",
          "properties": {
            "account": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account this card belongs to. This attribute will not be in the card object if the card belongs to a customer or recipient instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "address_city": {
              "description": "City/District/Suburb/Town/Village.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_country": {
              "description": "Billing address country, if provided when creating card.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_line1": {
              "description": "Address line 1 (Street address/PO Box/Company name).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_line1_check": {
              "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_line2": {
              "description": "Address line 2 (Apartment/Suite/Unit/Building).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_state": {
              "description": "State/County/Province/Region.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_zip": {
              "description": "ZIP or postal code.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "address_zip_check": {
              "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "available_payout_methods": {
              "description": "A set of available payout methods for this card. Only values from this set should be passed as the `method` when creating a payout.",
              "items": {
                "enum": [
                  "instant",
                  "standard"
                ],
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "brand": {
              "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
              "maxLength": 5000,
              "type": "string"
            },
            "country": {
              "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "currency": {
              "description": "Three-letter [ISO code for currency](https://stripe.com/docs/payouts). Only applicable on accounts (not customers or recipients). The card can be used as a transfer destination for funds in this currency.",
              "nullable": true,
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "cvc_check": {
              "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. A result of unchecked indicates that CVC was provided but hasn't been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https://support.stripe.com/questions/check-if-a-card-is-valid-without-a-charge).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_for_currency": {
              "description": "Whether this card is the default external account for its currency.",
              "nullable": true,
              "type": "boolean"
            },
            "dynamic_last4": {
              "description": "(For tokenized numbers only.) The last four digits of the device account number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exp_month": {
              "description": "Two-digit number representing the card's expiration month.",
              "type": "integer"
            },
            "exp_year": {
              "description": "Four-digit number representing the card's expiration year.",
              "type": "integer"
            },
            "fingerprint": {
              "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers whoâ€™ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "funding": {
              "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
              "maxLength": 5000,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "last4": {
              "description": "The last four digits of the card.",
              "maxLength": 5000,
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "name": {
              "description": "Cardholder name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "card"
              ],
              "type": "string"
            },
            "recipient": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/recipient"
                }
              ],
              "description": "The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/recipient"
                  }
                ]
              }
            },
            "status": {
              "description": "For external accounts, possible values are `new` and `errored`. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tokenization_method": {
              "description": "If the card number is tokenized, this is the method that was used. Can be `android_pay` (includes Google Pay), `apple_pay`, `masterpass`, `visa_checkout`, or null.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "brand",
            "exp_month",
            "exp_year",
            "funding",
            "id",
            "last4",
            "object"
          ],
          "title": "Card",
          "type": "object",
          "x-expandableFields": [
            "account",
            "customer",
            "recipient"
          ],
          "x-resourceId": "card"
        }
      ],
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "email": {
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "migrated_to": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current e-mail address or if the account is\nenabled yet to make live charges.\n\nSome properties, marked below, are available only to platforms that want to\n[create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts).",
          "properties": {
            "business_profile": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_business_profile"
                }
              ],
              "description": "Business information about the account.",
              "nullable": true
            },
            "business_type": {
              "description": "The business type.",
              "enum": [
                "company",
                "government_entity",
                "individual",
                "non_profit"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "capabilities": {
              "$ref": "#/components/schemas/account_capabilities"
            },
            "charges_enabled": {
              "description": "Whether the account can create live charges.",
              "type": "boolean"
            },
            "company": {
              "$ref": "#/components/schemas/legal_entity_company"
            },
            "controller": {
              "$ref": "#/components/schemas/account_unification_account_controller"
            },
            "country": {
              "description": "The account's country.",
              "maxLength": 5000,
              "type": "string"
            },
            "created": {
              "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "default_currency": {
              "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
              "maxLength": 5000,
              "type": "string"
            },
            "details_submitted": {
              "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
              "type": "boolean"
            },
            "email": {
              "description": "An email address associated with the account. You can treat this as metadata: it is not used for authentication or messaging account holders.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "external_accounts": {
              "description": "External accounts (bank accounts and debit cards) currently attached to this account",
              "properties": {
                "data": {
                  "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ExternalAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "future_requirements": {
              "$ref": "#/components/schemas/account_future_requirements"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "individual": {
              "$ref": "#/components/schemas/person"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "account"
              ],
              "type": "string"
            },
            "payouts_enabled": {
              "description": "Whether Stripe can send payouts to this account.",
              "type": "boolean"
            },
            "requirements": {
              "$ref": "#/components/schemas/account_requirements"
            },
            "settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_settings"
                }
              ],
              "description": "Options for customizing how the account functions within Stripe.",
              "nullable": true
            },
            "tos_acceptance": {
              "$ref": "#/components/schemas/account_tos_acceptance"
            },
            "type": {
              "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
              "enum": [
                "custom",
                "express",
                "standard"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Account",
          "type": "object",
          "x-expandableFields": [
            "business_profile",
            "capabilities",
            "company",
            "controller",
            "external_accounts",
            "future_requirements",
            "individual",
            "requirements",
            "settings",
            "tos_acceptance"
          ],
          "x-resourceId": "account"
        }
      ],
      "name": {
        "description": "Full, legal name of the recipient.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "recipient"
        ],
        "type": "string"
      },
      "rolled_back_from": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current e-mail address or if the account is\nenabled yet to make live charges.\n\nSome properties, marked below, are available only to platforms that want to\n[create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts).",
          "properties": {
            "business_profile": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_business_profile"
                }
              ],
              "description": "Business information about the account.",
              "nullable": true
            },
            "business_type": {
              "description": "The business type.",
              "enum": [
                "company",
                "government_entity",
                "individual",
                "non_profit"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "capabilities": {
              "$ref": "#/components/schemas/account_capabilities"
            },
            "charges_enabled": {
              "description": "Whether the account can create live charges.",
              "type": "boolean"
            },
            "company": {
              "$ref": "#/components/schemas/legal_entity_company"
            },
            "controller": {
              "$ref": "#/components/schemas/account_unification_account_controller"
            },
            "country": {
              "description": "The account's country.",
              "maxLength": 5000,
              "type": "string"
            },
            "created": {
              "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "default_currency": {
              "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
              "maxLength": 5000,
              "type": "string"
            },
            "details_submitted": {
              "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
              "type": "boolean"
            },
            "email": {
              "description": "An email address associated with the account. You can treat this as metadata: it is not used for authentication or messaging account holders.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "external_accounts": {
              "description": "External accounts (bank accounts and debit cards) currently attached to this account",
              "properties": {
                "data": {
                  "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ExternalAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "future_requirements": {
              "$ref": "#/components/schemas/account_future_requirements"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "individual": {
              "$ref": "#/components/schemas/person"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "account"
              ],
              "type": "string"
            },
            "payouts_enabled": {
              "description": "Whether Stripe can send payouts to this account.",
              "type": "boolean"
            },
            "requirements": {
              "$ref": "#/components/schemas/account_requirements"
            },
            "settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_settings"
                }
              ],
              "description": "Options for customizing how the account functions within Stripe.",
              "nullable": true
            },
            "tos_acceptance": {
              "$ref": "#/components/schemas/account_tos_acceptance"
            },
            "type": {
              "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
              "enum": [
                "custom",
                "express",
                "standard"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Account",
          "type": "object",
          "x-expandableFields": [
            "business_profile",
            "capabilities",
            "company",
            "controller",
            "external_accounts",
            "future_requirements",
            "individual",
            "requirements",
            "settings",
            "tos_acceptance"
          ],
          "x-resourceId": "account"
        }
      ],
      "type": {
        "description": "Type of the recipient, one of `individual` or `corporation`.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "created",
      "id",
      "livemode",
      "metadata",
      "object",
      "type"
    ],
    "title": "TransferRecipient",
    "type": "object",
    "x-expandableFields": [
      "active_account",
      "cards",
      "default_card",
      "migrated_to",
      "rolled_back_from"
    ]
  },
  "report_run": {
    "description": "The Report Run object represents an instance of a report type generated with\nspecific run parameters. Once the object is created, Stripe begins processing the report.\nWhen the report has finished running, it will give you a reference to a file\nwhere you can retrieve your results. For an overview, see\n[API Access to Reports](https://stripe.com/docs/reporting/statements/api).\n\nNote that certain report types can only be run based on your live-mode data (not test-mode\ndata), and will error when queried without a [live-mode API key](https://stripe.com/docs/keys#test-live-modes).",
    "properties": {
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "error": {
        "description": "If something should go wrong during the run, a message about the failure (populated when\n `status=failed`).",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "`true` if the report is run on live mode data and `false` if it is run on test mode data.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "reporting.report_run"
        ],
        "type": "string"
      },
      "parameters": {
        "description": "",
        "properties": {
          "columns": {
            "description": "The set of output columns requested for inclusion in the report run.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "connected_account": {
            "description": "Connected account ID by which to filter the report run.",
            "maxLength": 5000,
            "type": "string"
          },
          "currency": {
            "description": "Currency of objects to be included in the report run.",
            "type": "string"
          },
          "interval_end": {
            "description": "Ending timestamp of data to be included in the report run (exclusive).",
            "format": "unix-time",
            "type": "integer"
          },
          "interval_start": {
            "description": "Starting timestamp of data to be included in the report run.",
            "format": "unix-time",
            "type": "integer"
          },
          "payout": {
            "description": "Payout ID by which to filter the report run.",
            "maxLength": 5000,
            "type": "string"
          },
          "reporting_category": {
            "description": "Category of balance transactions to be included in the report run.",
            "maxLength": 5000,
            "type": "string"
          },
          "timezone": {
            "description": "Defaults to `Etc/UTC`. The output timezone for all timestamps in the report. A list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones). Has no effect on `interval_start` or `interval_end`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "FinancialReportingFinanceReportRunRunParameters",
        "type": "object",
        "x-expandableFields": []
      },
      "report_type": {
        "description": "The ID of the [report type](https://stripe.com/docs/reports/report-types) to run, such as `\"balance.summary.1\"`.",
        "maxLength": 5000,
        "type": "string"
      },
      "result": [
        {
          "description": "This is an object representing a file hosted on Stripe's servers. The\nfile may have been uploaded by yourself using the [create file](https://stripe.com/docs/api#create_file)\nrequest (for example, when uploading dispute evidence) or it may have\nbeen created by Stripe (for example, the results of a [Sigma scheduled\nquery](#scheduled_queries)).\n\nRelated guide: [File Upload Guide](https://stripe.com/docs/file-upload).",
          "properties": {
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "expires_at": {
              "description": "The time at which the file expires and is no longer available in epoch seconds.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "filename": {
              "description": "A filename for the file, suitable for saving to a filesystem.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "links": {
              "description": "A list of [file links](https://stripe.com/docs/api#file_links) that point at this file.",
              "nullable": true,
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/file_link"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/file_links",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "FileFileLinkList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "file"
              ],
              "type": "string"
            },
            "purpose": {
              "description": "The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the uploaded file.",
              "enum": [
                "account_requirement",
                "additional_verification",
                "business_icon",
                "business_logo",
                "customer_signature",
                "dispute_evidence",
                "document_provider_identity_document",
                "finance_report_run",
                "identity_document",
                "identity_document_downloadable",
                "pci_document",
                "selfie",
                "sigma_scheduled_query",
                "tax_document_user_upload"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "size": {
              "description": "The size in bytes of the file object.",
              "type": "integer"
            },
            "title": {
              "description": "A user friendly title for the document.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "The type of the file returned (e.g., `csv`, `pdf`, `jpg`, or `png`).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "url": {
              "description": "The URL from which the file can be downloaded using your live secret API key.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "created",
            "id",
            "object",
            "purpose",
            "size"
          ],
          "title": "File",
          "type": "object",
          "x-expandableFields": [
            "links"
          ],
          "x-resourceId": "file"
        }
      ],
      "status": {
        "description": "Status of this report run. This will be `pending` when the run is initially created.\n When the run finishes, this will be set to `succeeded` and the `result` field will be populated.\n Rarely, we may encounter an error, at which point this will be set to `failed` and the `error` field will be populated.",
        "maxLength": 5000,
        "type": "string"
      },
      "succeeded_at": {
        "description": "Timestamp at which this run successfully finished (populated when\n `status=succeeded`). Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      }
    },
    "required": [
      "created",
      "id",
      "livemode",
      "object",
      "parameters",
      "report_type",
      "status"
    ],
    "title": "reporting_report_run",
    "type": "object",
    "x-expandableFields": [
      "parameters",
      "result"
    ],
    "x-resourceId": "reporting.report_run"
  },
  "report_type": {
    "description": "The Report Type resource corresponds to a particular type of report, such as\nthe \"Activity summary\" or \"Itemized payouts\" reports. These objects are\nidentified by an ID belonging to a set of enumerated values. See\n[API Access to Reports documentation](https://stripe.com/docs/reporting/statements/api)\nfor those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode\ndata), and will error when queried without a [live-mode API key](https://stripe.com/docs/keys#test-live-modes).",
    "properties": {
      "data_available_end": {
        "description": "Most recent time for which this Report Type is available. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "data_available_start": {
        "description": "Earliest time for which this Report Type is available. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "default_columns": {
        "description": "List of column names that are included by default when this Report Type gets run. (If the Report Type doesn't support the `columns` parameter, this will be null.)",
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "id": {
        "description": "The [ID of the Report Type](https://stripe.com/docs/reporting/statements/api#available-report-types), such as `balance.summary.1`.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "name": {
        "description": "Human-readable name of the Report Type",
        "maxLength": 5000,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "reporting.report_type"
        ],
        "type": "string"
      },
      "updated": {
        "description": "When this Report Type was latest updated. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "version": {
        "description": "Version of the Report Type. Different versions report with the same ID will have the same purpose, but may take different run parameters or have different result schemas.",
        "type": "integer"
      }
    },
    "required": [
      "data_available_end",
      "data_available_start",
      "id",
      "livemode",
      "name",
      "object",
      "updated",
      "version"
    ],
    "title": "reporting_report_type",
    "type": "object",
    "x-expandableFields": [],
    "x-resourceId": "reporting.report_type"
  },
  "review": {
    "description": "Reviews can be used to supplement automated fraud detection with human expertise.\n\nLearn more about [Radar](/radar) and reviewing payments\n[here](https://stripe.com/docs/radar/reviews).",
    "properties": {
      "billing_zip": {
        "description": "The ZIP or postal code of the card used, if applicable.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "charge": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "To charge a credit or a debit card, you create a `Charge` object. You can\nretrieve and refund individual charges as well as list all charges. Charges\nare identified by a unique, random ID.\n\nRelated guide: [Accept a payment with the Charges API](https://stripe.com/docs/payments/accept-a-payment-charges).",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "amount_captured": {
              "description": "Amount in %s captured (can be less than the amount attribute on the charge if a partial capture was made).",
              "type": "integer"
            },
            "amount_refunded": {
              "description": "Amount in %s refunded (can be less than the amount attribute on the charge if a partial refund was issued).",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the charge.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "application_fee": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                }
              ],
              "description": "The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "type": "integer"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "billing_details": {
              "$ref": "#/components/schemas/billing_details"
            },
            "calculated_statement_descriptor": {
              "description": "The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "captured": {
              "description": "If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.",
              "type": "boolean"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the customer this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 40000,
              "nullable": true,
              "type": "string"
            },
            "disputed": {
              "description": "Whether the charge has been disputed.",
              "type": "boolean"
            },
            "failure_balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the reversal of the balance on your account due to payment failure.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "failure_code": {
              "description": "Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "failure_message": {
              "description": "Message to user further explaining reason for charge failure if available.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "fraud_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_fraud_details"
                }
              ],
              "description": "Information on fraud assessments for the charge.",
              "nullable": true
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "ID of the invoice this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "charge"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "outcome": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_outcome"
                }
              ],
              "description": "Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details.",
              "nullable": true
            },
            "paid": {
              "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
              "type": "boolean"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "ID of the PaymentIntent associated with this charge, if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "payment_method": {
              "description": "ID of the payment method used in this charge.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "payment_method_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_details"
                }
              ],
              "description": "Details about the payment method at the time of the transaction.",
              "nullable": true
            },
            "radar_options": {
              "$ref": "#/components/schemas/radar_radar_options"
            },
            "receipt_email": {
              "description": "This is the email address that the receipt for this charge was sent to.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_url": {
              "description": "This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "refunded": {
              "description": "Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.",
              "type": "boolean"
            },
            "refunds": {
              "description": "A list of refunds that have been applied to the charge.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/refund"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "RefundList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "review": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/review"
                }
              ],
              "description": "ID of the review associated with this charge if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/review"
                  }
                ]
              }
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Shipping information for the charge.",
              "nullable": true
            },
            "source_transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "statement_descriptor": {
              "description": "For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "statement_descriptor_suffix": {
              "description": "Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the payment is either `succeeded`, `pending`, or `failed`.",
              "enum": [
                "failed",
                "pending",
                "succeeded"
              ],
              "type": "string"
            },
            "transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_transfer_data"
                }
              ],
              "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true
            },
            "transfer_group": {
              "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "amount_captured",
            "amount_refunded",
            "billing_details",
            "captured",
            "created",
            "currency",
            "disputed",
            "id",
            "livemode",
            "metadata",
            "object",
            "paid",
            "refunded",
            "refunds",
            "status"
          ],
          "title": "Charge",
          "type": "object",
          "x-expandableFields": [
            "application",
            "application_fee",
            "balance_transaction",
            "billing_details",
            "customer",
            "failure_balance_transaction",
            "fraud_details",
            "invoice",
            "on_behalf_of",
            "outcome",
            "payment_intent",
            "payment_method_details",
            "radar_options",
            "refunds",
            "review",
            "shipping",
            "source_transfer",
            "transfer",
            "transfer_data"
          ],
          "x-resourceId": "charge"
        }
      ],
      "closed_reason": {
        "description": "The reason the review was closed, or null if it has not yet been closed. One of `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.",
        "enum": [
          "approved",
          "disputed",
          "redacted",
          "refunded",
          "refunded_as_fraud"
        ],
        "nullable": true,
        "type": "string"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "ip_address": {
        "description": "The IP address where the payment originated.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "ip_address_location": [
        {
          "description": "",
          "properties": {
            "city": {
              "description": "The city where the payment originated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "country": {
              "description": "Two-letter ISO code representing the country where the payment originated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "latitude": {
              "description": "The geographic latitude where the payment originated.",
              "nullable": true,
              "type": "number"
            },
            "longitude": {
              "description": "The geographic longitude where the payment originated.",
              "nullable": true,
              "type": "number"
            },
            "region": {
              "description": "The state/county/province/region where the payment originated.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "RadarReviewResourceLocation",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "review"
        ],
        "type": "string"
      },
      "open": {
        "description": "If `true`, the review needs action.",
        "type": "boolean"
      },
      "opened_reason": {
        "description": "The reason the review was opened. One of `rule` or `manual`.",
        "enum": [
          "manual",
          "rule"
        ],
        "type": "string"
      },
      "payment_intent": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A PaymentIntent guides you through the process of collecting a payment from your customer.\nWe recommend that you create exactly one PaymentIntent for each order or\ncustomer session in your system. You can reference the PaymentIntent later to\nsee the history of payment attempts for a particular session.\n\nA PaymentIntent transitions through\n[multiple statuses](https://stripe.com/docs/payments/intents#intent-statuses)\nthroughout its lifetime as it interfaces with Stripe.js to perform\nauthentication flows and ultimately creates at most one successful charge.\n\nRelated guide: [Payment Intents API](https://stripe.com/docs/payments/payment-intents).",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "amount_capturable": {
              "description": "Amount that can be captured from this PaymentIntent.",
              "type": "integer"
            },
            "amount_details": {
              "$ref": "#/components/schemas/payment_flows_amount_details"
            },
            "amount_received": {
              "description": "Amount that was collected by this PaymentIntent.",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
              "nullable": true,
              "type": "integer"
            },
            "automatic_payment_methods": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_flows_automatic_payment_methods_payment_intent"
                }
              ],
              "description": "Settings to configure compatible payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods)",
              "nullable": true
            },
            "canceled_at": {
              "description": "Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "cancellation_reason": {
              "description": "Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`).",
              "enum": [
                "abandoned",
                "automatic",
                "duplicate",
                "failed_invoice",
                "fraudulent",
                "requested_by_customer",
                "void_invoice"
              ],
              "nullable": true,
              "type": "string"
            },
            "capture_method": {
              "description": "Controls when the funds will be captured from the customer's account.",
              "enum": [
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "charges": {
              "description": "Charges that were created by this PaymentIntent, if any.",
              "properties": {
                "data": {
                  "description": "This list only contains the latest charge, even if there were previously multiple unsuccessful charges. To view all previous charges for a PaymentIntent, you can filter the charges list using the `payment_intent` [parameter](https://stripe.com/docs/api/charges/list#list_charges-payment_intent).",
                  "items": {
                    "$ref": "#/components/schemas/charge"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "PaymentFlowsPaymentIntentResourceChargeList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "client_secret": {
              "description": "The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. \n\nThe client secret can be used to complete a payment from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.\n\nRefer to our docs to [accept a payment](https://stripe.com/docs/payments/accept-a-payment?ui=elements) and learn about how `client_secret` should be handled.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "confirmation_method": {
              "enum": [
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the Customer this PaymentIntent belongs to, if one exists.\n\nPayment methods attached to other Customers cannot be used with this PaymentIntent.\n\nIf present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "ID of the invoice that created this PaymentIntent, if it exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "last_payment_error": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/api_errors"
                }
              ],
              "description": "The payment error encountered in the previous PaymentIntent confirmation. It will be cleared if the PaymentIntent is later updated for any reason.",
              "nullable": true
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. For more information, see the [documentation](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).",
              "type": "object"
            },
            "next_action": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_next_action"
                }
              ],
              "description": "If present, this property tells you what actions you need to take in order for your customer to fulfill a payment using the provided source.",
              "nullable": true
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "payment_intent"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) for which the funds of the PaymentIntent are intended. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the payment method used in this PaymentIntent.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "payment_method_options": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_payment_method_options"
                }
              ],
              "description": "Payment-method-specific configuration for this PaymentIntent.",
              "nullable": true
            },
            "payment_method_types": {
              "description": "The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "processing": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_intent_processing"
                }
              ],
              "description": "If present, this property tells you about the processing state of the payment.",
              "nullable": true
            },
            "receipt_email": {
              "description": "Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "review": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/review"
                }
              ],
              "description": "ID of the review associated with this PaymentIntent, if any.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/review"
                  }
                ]
              }
            },
            "setup_future_usage": {
              "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
              "enum": [
                "off_session",
                "on_session"
              ],
              "nullable": true,
              "type": "string"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Shipping information for this PaymentIntent.",
              "nullable": true
            },
            "statement_descriptor": {
              "description": "For non-card charges, you can use this value as the complete description that appears on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "statement_descriptor_suffix": {
              "description": "Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "Status of this PaymentIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `requires_capture`, `canceled`, or `succeeded`. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses).",
              "enum": [
                "canceled",
                "processing",
                "requires_action",
                "requires_capture",
                "requires_confirmation",
                "requires_payment_method",
                "succeeded"
              ],
              "type": "string"
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/transfer_data"
                }
              ],
              "description": "The data with which to automatically create a Transfer when the payment is finalized. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "nullable": true
            },
            "transfer_group": {
              "description": "A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "capture_method",
            "confirmation_method",
            "created",
            "currency",
            "id",
            "livemode",
            "object",
            "payment_method_types",
            "status"
          ],
          "title": "PaymentIntent",
          "type": "object",
          "x-expandableFields": [
            "amount_details",
            "application",
            "automatic_payment_methods",
            "charges",
            "customer",
            "invoice",
            "last_payment_error",
            "next_action",
            "on_behalf_of",
            "payment_method",
            "payment_method_options",
            "processing",
            "review",
            "shipping",
            "transfer_data"
          ],
          "x-resourceId": "payment_intent"
        }
      ],
      "reason": {
        "description": "The reason the review is currently open or closed. One of `rule`, `manual`, `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.",
        "maxLength": 5000,
        "type": "string"
      },
      "session": [
        {
          "description": "",
          "properties": {
            "browser": {
              "description": "The browser used in this browser session (e.g., `Chrome`).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "device": {
              "description": "Information about the device used for the browser session (e.g., `Samsung SM-G930T`).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "platform": {
              "description": "The platform for the browser session (e.g., `Macintosh`).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "version": {
              "description": "The version for the browser session (e.g., `61.0.3163.100`).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "RadarReviewResourceSession",
          "type": "object",
          "x-expandableFields": []
        }
      ]
    },
    "required": [
      "created",
      "id",
      "livemode",
      "object",
      "open",
      "opened_reason",
      "reason"
    ],
    "title": "RadarReview",
    "type": "object",
    "x-expandableFields": [
      "charge",
      "ip_address_location",
      "payment_intent",
      "session"
    ],
    "x-resourceId": "review"
  },
  "setup_intent": {
    "description": "A SetupIntent guides you through the process of setting up and saving a customer's payment credentials for future payments.\nFor example, you could use a SetupIntent to set up and save your customer's card without immediately collecting a payment.\nLater, you can use [PaymentIntents](https://stripe.com/docs/api#payment_intents) to drive the payment flow.\n\nCreate a SetupIntent as soon as you're ready to collect your customer's payment credentials.\nDo not maintain long-lived, unconfirmed SetupIntents as they may no longer be valid.\nThe SetupIntent then transitions through multiple [statuses](https://stripe.com/docs/payments/intents#intent-statuses) as it guides\nyou through the setup process.\n\nSuccessful SetupIntents result in payment credentials that are optimized for future payments.\nFor example, cardholders in [certain regions](/guides/strong-customer-authentication) may need to be run through\n[Strong Customer Authentication](https://stripe.com/docs/strong-customer-authentication) at the time of payment method collection\nin order to streamline later [off-session payments](https://stripe.com/docs/payments/setup-intents).\nIf the SetupIntent is used with a [Customer](https://stripe.com/docs/api#setup_intent_object-customer), upon success,\nit will automatically attach the resulting payment method to that Customer.\nWe recommend using SetupIntents or [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage) on\nPaymentIntents to save payment methods in order to prevent saving invalid or unoptimized payment methods.\n\nBy using SetupIntents, you ensure that your customers experience the minimum set of required friction,\neven as regulations change over time.\n\nRelated guide: [Setup Intents API](https://stripe.com/docs/payments/setup-intents).",
    "properties": {
      "application": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "",
          "properties": {
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "The name of the application.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Application",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "attach_to_self": {
        "description": "If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n\nIt can only be used for this Stripe Accountâ€™s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.",
        "type": "boolean"
      },
      "cancellation_reason": {
        "description": "Reason for cancellation of this SetupIntent, one of `abandoned`, `requested_by_customer`, or `duplicate`.",
        "enum": [
          "abandoned",
          "duplicate",
          "requested_by_customer"
        ],
        "nullable": true,
        "type": "string"
      },
      "client_secret": {
        "description": "The client secret of this SetupIntent. Used for client-side retrieval using a publishable key.\n\nThe client secret can be used to complete payment setup from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "customer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address.",
              "nullable": true
            },
            "balance": {
              "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
              "type": "integer"
            },
            "cash_balance": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cash_balance"
                }
              ],
              "description": "The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the customer.\n\nIf you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "delinquent": {
              "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
              "nullable": true,
              "type": "boolean"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount active on the customer, if there is one.",
              "nullable": true
            },
            "email": {
              "description": "The customer's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_credit_balance": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "The current multi-currency balances, if any, being stored on the customer.If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency.If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices.They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
              "type": "object"
            },
            "invoice_prefix": {
              "description": "The prefix for the customer used to generate unique invoice numbers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_settings": {
              "$ref": "#/components/schemas/invoice_setting_customer_setting"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The customer's full name or business name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "next_invoice_sequence": {
              "description": "The suffix of the customer's next invoice number, e.g., 0001.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            },
            "phone": {
              "description": "The customer's phone number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "preferred_locales": {
              "description": "The customer's preferred locales (languages), ordered by preference.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
              "nullable": true
            },
            "sources": {
              "description": "The customer's payment sources, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      },
                      {
                        "$ref": "#/components/schemas/source"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "subscriptions": {
              "description": "The customer's current subscriptions, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "tax": {
              "$ref": "#/components/schemas/customer_tax"
            },
            "tax_exempt": {
              "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "tax_ids": {
              "description": "The customer's tax IDs.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this customer belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object"
          ],
          "title": "Customer",
          "type": "object",
          "x-expandableFields": [
            "address",
            "cash_balance",
            "default_source",
            "discount",
            "invoice_settings",
            "shipping",
            "sources",
            "subscriptions",
            "tax",
            "tax_ids",
            "test_clock"
          ],
          "x-resourceId": "customer"
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedCustomer",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "deleted_customer"
        }
      ],
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "flow_directions": {
        "description": "Indicates the directions of money movement for which this payment method is intended to be used.\n\nInclude `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.",
        "items": {
          "enum": [
            "inbound",
            "outbound"
          ],
          "type": "string"
        },
        "nullable": true,
        "type": "array"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "last_setup_error": [
        {
          "description": "",
          "properties": {
            "charge": {
              "description": "For card errors, the ID of the failed charge.",
              "maxLength": 5000,
              "type": "string"
            },
            "code": {
              "description": "For some errors that could be handled programmatically, a short string indicating the [error code](https://stripe.com/docs/error-codes) reported.",
              "maxLength": 5000,
              "type": "string"
            },
            "decline_code": {
              "description": "For card errors resulting from a card issuer decline, a short string indicating the [card issuer's reason for the decline](https://stripe.com/docs/declines#issuer-declines) if they provide one.",
              "maxLength": 5000,
              "type": "string"
            },
            "doc_url": {
              "description": "A URL to more information about the [error code](https://stripe.com/docs/error-codes) reported.",
              "maxLength": 5000,
              "type": "string"
            },
            "message": {
              "description": "A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.",
              "maxLength": 40000,
              "type": "string"
            },
            "param": {
              "description": "If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.",
              "maxLength": 5000,
              "type": "string"
            },
            "payment_intent": {
              "$ref": "#/components/schemas/payment_intent"
            },
            "payment_method": {
              "$ref": "#/components/schemas/payment_method"
            },
            "payment_method_type": {
              "description": "If the error is specific to the type of payment method, the payment method type that had a problem. This field is only populated for invoice-related errors.",
              "maxLength": 5000,
              "type": "string"
            },
            "setup_intent": {
              "$ref": "#/components/schemas/setup_intent"
            },
            "source": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "The source object for errors returned on a request involving a source."
            },
            "type": {
              "description": "The type of error returned. One of `api_error`, `card_error`, `idempotency_error`, or `invalid_request_error`",
              "enum": [
                "api_error",
                "card_error",
                "idempotency_error",
                "invalid_request_error"
              ],
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "APIErrors",
          "type": "object",
          "x-expandableFields": [
            "payment_intent",
            "payment_method",
            "setup_intent",
            "source"
          ]
        }
      ],
      "latest_attempt": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A SetupAttempt describes one attempted confirmation of a SetupIntent,\nwhether that confirmation was successful or unsuccessful. You can use\nSetupAttempts to inspect details of a specific attempt at setting up a\npayment method using a SetupIntent.",
          "properties": {
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "The value of [application](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-application) on the SetupIntent at the time of this confirmation.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "attach_to_self": {
              "description": "If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n\nIt can only be used for this Stripe Accountâ€™s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.",
              "type": "boolean"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "The value of [customer](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-customer) on the SetupIntent at the time of this confirmation.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "flow_directions": {
              "description": "Indicates the directions of money movement for which this payment method is intended to be used.\n\nInclude `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.",
              "items": {
                "enum": [
                  "inbound",
                  "outbound"
                ],
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "setup_attempt"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The value of [on_behalf_of](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-on_behalf_of) on the SetupIntent at the time of this confirmation.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the payment method used with this SetupAttempt.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "payment_method_details": {
              "$ref": "#/components/schemas/setup_attempt_payment_method_details"
            },
            "setup_error": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/api_errors"
                }
              ],
              "description": "The error encountered during this attempt to confirm the SetupIntent, if any.",
              "nullable": true
            },
            "setup_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/setup_intent"
                }
              ],
              "description": "ID of the SetupIntent that this attempt belongs to.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/setup_intent"
                  }
                ]
              }
            },
            "status": {
              "description": "Status of this SetupAttempt, one of `requires_confirmation`, `requires_action`, `processing`, `succeeded`, `failed`, or `abandoned`.",
              "maxLength": 5000,
              "type": "string"
            },
            "usage": {
              "description": "The value of [usage](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-usage) on the SetupIntent at the time of this confirmation, one of `off_session` or `on_session`.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object",
            "payment_method",
            "payment_method_details",
            "setup_intent",
            "status",
            "usage"
          ],
          "title": "PaymentFlowsSetupIntentSetupAttempt",
          "type": "object",
          "x-expandableFields": [
            "application",
            "customer",
            "on_behalf_of",
            "payment_method",
            "payment_method_details",
            "setup_error",
            "setup_intent"
          ],
          "x-resourceId": "setup_attempt"
        }
      ],
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "mandate": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A Mandate is a record of the permission a customer has given you to debit their payment method.",
          "properties": {
            "customer_acceptance": {
              "$ref": "#/components/schemas/customer_acceptance"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "multi_use": {
              "$ref": "#/components/schemas/mandate_multi_use"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "mandate"
              ],
              "type": "string"
            },
            "payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the payment method associated with this mandate.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "payment_method_details": {
              "$ref": "#/components/schemas/mandate_payment_method_details"
            },
            "single_use": {
              "$ref": "#/components/schemas/mandate_single_use"
            },
            "status": {
              "description": "The status of the mandate, which indicates whether it can be used to initiate a payment.",
              "enum": [
                "active",
                "inactive",
                "pending"
              ],
              "type": "string"
            },
            "type": {
              "description": "The type of the mandate.",
              "enum": [
                "multi_use",
                "single_use"
              ],
              "type": "string"
            }
          },
          "required": [
            "customer_acceptance",
            "id",
            "livemode",
            "object",
            "payment_method",
            "payment_method_details",
            "status",
            "type"
          ],
          "title": "Mandate",
          "type": "object",
          "x-expandableFields": [
            "customer_acceptance",
            "multi_use",
            "payment_method",
            "payment_method_details",
            "single_use"
          ],
          "x-resourceId": "mandate"
        }
      ],
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "next_action": [
        {
          "description": "",
          "properties": {
            "redirect_to_url": {
              "$ref": "#/components/schemas/setup_intent_next_action_redirect_to_url"
            },
            "type": {
              "description": "Type of the next action to perform, one of `redirect_to_url`, `use_stripe_sdk`, `alipay_handle_redirect`, `oxxo_display_details`, or `verify_with_microdeposits`.",
              "maxLength": 5000,
              "type": "string"
            },
            "use_stripe_sdk": {
              "description": "When confirming a SetupIntent with Stripe.js, Stripe.js depends on the contents of this dictionary to invoke authentication flows. The shape of the contents is subject to change and is only intended to be used by Stripe.js.",
              "type": "object"
            },
            "verify_with_microdeposits": {
              "$ref": "#/components/schemas/setup_intent_next_action_verify_with_microdeposits"
            }
          },
          "required": [
            "type"
          ],
          "title": "SetupIntentNextAction",
          "type": "object",
          "x-expandableFields": [
            "redirect_to_url",
            "verify_with_microdeposits"
          ]
        }
      ],
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "setup_intent"
        ],
        "type": "string"
      },
      "on_behalf_of": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current e-mail address or if the account is\nenabled yet to make live charges.\n\nSome properties, marked below, are available only to platforms that want to\n[create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts).",
          "properties": {
            "business_profile": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_business_profile"
                }
              ],
              "description": "Business information about the account.",
              "nullable": true
            },
            "business_type": {
              "description": "The business type.",
              "enum": [
                "company",
                "government_entity",
                "individual",
                "non_profit"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "capabilities": {
              "$ref": "#/components/schemas/account_capabilities"
            },
            "charges_enabled": {
              "description": "Whether the account can create live charges.",
              "type": "boolean"
            },
            "company": {
              "$ref": "#/components/schemas/legal_entity_company"
            },
            "controller": {
              "$ref": "#/components/schemas/account_unification_account_controller"
            },
            "country": {
              "description": "The account's country.",
              "maxLength": 5000,
              "type": "string"
            },
            "created": {
              "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "default_currency": {
              "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
              "maxLength": 5000,
              "type": "string"
            },
            "details_submitted": {
              "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
              "type": "boolean"
            },
            "email": {
              "description": "An email address associated with the account. You can treat this as metadata: it is not used for authentication or messaging account holders.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "external_accounts": {
              "description": "External accounts (bank accounts and debit cards) currently attached to this account",
              "properties": {
                "data": {
                  "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ExternalAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "future_requirements": {
              "$ref": "#/components/schemas/account_future_requirements"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "individual": {
              "$ref": "#/components/schemas/person"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "account"
              ],
              "type": "string"
            },
            "payouts_enabled": {
              "description": "Whether Stripe can send payouts to this account.",
              "type": "boolean"
            },
            "requirements": {
              "$ref": "#/components/schemas/account_requirements"
            },
            "settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_settings"
                }
              ],
              "description": "Options for customizing how the account functions within Stripe.",
              "nullable": true
            },
            "tos_acceptance": {
              "$ref": "#/components/schemas/account_tos_acceptance"
            },
            "type": {
              "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
              "enum": [
                "custom",
                "express",
                "standard"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Account",
          "type": "object",
          "x-expandableFields": [
            "business_profile",
            "capabilities",
            "company",
            "controller",
            "external_accounts",
            "future_requirements",
            "individual",
            "requirements",
            "settings",
            "tos_acceptance"
          ],
          "x-resourceId": "account"
        }
      ],
      "payment_method": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "PaymentMethod objects represent your customer's payment instruments.\nYou can use them with [PaymentIntents](https://stripe.com/docs/payments/payment-intents) to collect payments or save them to\nCustomer objects to store instrument details for future payments.\n\nRelated guides: [Payment Methods](https://stripe.com/docs/payments/payment-methods) and [More Payment Scenarios](https://stripe.com/docs/payments/more-payment-scenarios).",
          "properties": {
            "acss_debit": {
              "$ref": "#/components/schemas/payment_method_acss_debit"
            },
            "affirm": {
              "$ref": "#/components/schemas/payment_method_affirm"
            },
            "afterpay_clearpay": {
              "$ref": "#/components/schemas/payment_method_afterpay_clearpay"
            },
            "alipay": {
              "$ref": "#/components/schemas/payment_flows_private_payment_methods_alipay"
            },
            "au_becs_debit": {
              "$ref": "#/components/schemas/payment_method_au_becs_debit"
            },
            "bacs_debit": {
              "$ref": "#/components/schemas/payment_method_bacs_debit"
            },
            "bancontact": {
              "$ref": "#/components/schemas/payment_method_bancontact"
            },
            "billing_details": {
              "$ref": "#/components/schemas/billing_details"
            },
            "blik": {
              "$ref": "#/components/schemas/payment_method_blik"
            },
            "boleto": {
              "$ref": "#/components/schemas/payment_method_boleto"
            },
            "card": {
              "$ref": "#/components/schemas/payment_method_card"
            },
            "card_present": {
              "$ref": "#/components/schemas/payment_method_card_present"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                }
              ],
              "description": "The ID of the Customer to which this PaymentMethod is saved. This will not be set when the PaymentMethod has not been saved to a Customer.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  }
                ]
              }
            },
            "customer_balance": {
              "$ref": "#/components/schemas/payment_method_customer_balance"
            },
            "eps": {
              "$ref": "#/components/schemas/payment_method_eps"
            },
            "fpx": {
              "$ref": "#/components/schemas/payment_method_fpx"
            },
            "giropay": {
              "$ref": "#/components/schemas/payment_method_giropay"
            },
            "grabpay": {
              "$ref": "#/components/schemas/payment_method_grabpay"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "ideal": {
              "$ref": "#/components/schemas/payment_method_ideal"
            },
            "interac_present": {
              "$ref": "#/components/schemas/payment_method_interac_present"
            },
            "klarna": {
              "$ref": "#/components/schemas/payment_method_klarna"
            },
            "konbini": {
              "$ref": "#/components/schemas/payment_method_konbini"
            },
            "link": {
              "$ref": "#/components/schemas/payment_method_link"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "payment_method"
              ],
              "type": "string"
            },
            "oxxo": {
              "$ref": "#/components/schemas/payment_method_oxxo"
            },
            "p24": {
              "$ref": "#/components/schemas/payment_method_p24"
            },
            "paynow": {
              "$ref": "#/components/schemas/payment_method_paynow"
            },
            "promptpay": {
              "$ref": "#/components/schemas/payment_method_promptpay"
            },
            "radar_options": {
              "$ref": "#/components/schemas/radar_radar_options"
            },
            "sepa_debit": {
              "$ref": "#/components/schemas/payment_method_sepa_debit"
            },
            "sofort": {
              "$ref": "#/components/schemas/payment_method_sofort"
            },
            "type": {
              "description": "The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.",
              "enum": [
                "acss_debit",
                "affirm",
                "afterpay_clearpay",
                "alipay",
                "au_becs_debit",
                "bacs_debit",
                "bancontact",
                "blik",
                "boleto",
                "card",
                "card_present",
                "customer_balance",
                "eps",
                "fpx",
                "giropay",
                "grabpay",
                "ideal",
                "interac_present",
                "klarna",
                "konbini",
                "link",
                "oxxo",
                "p24",
                "paynow",
                "promptpay",
                "sepa_debit",
                "sofort",
                "us_bank_account",
                "wechat_pay"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "us_bank_account": {
              "$ref": "#/components/schemas/payment_method_us_bank_account"
            },
            "wechat_pay": {
              "$ref": "#/components/schemas/payment_method_wechat_pay"
            }
          },
          "required": [
            "billing_details",
            "created",
            "id",
            "livemode",
            "object",
            "type"
          ],
          "title": "PaymentMethod",
          "type": "object",
          "x-expandableFields": [
            "acss_debit",
            "affirm",
            "afterpay_clearpay",
            "alipay",
            "au_becs_debit",
            "bacs_debit",
            "bancontact",
            "billing_details",
            "blik",
            "boleto",
            "card",
            "card_present",
            "customer",
            "customer_balance",
            "eps",
            "fpx",
            "giropay",
            "grabpay",
            "ideal",
            "interac_present",
            "klarna",
            "konbini",
            "link",
            "oxxo",
            "p24",
            "paynow",
            "promptpay",
            "radar_options",
            "sepa_debit",
            "sofort",
            "us_bank_account",
            "wechat_pay"
          ],
          "x-resourceId": "payment_method"
        }
      ],
      "payment_method_options": [
        {
          "description": "",
          "properties": {
            "acss_debit": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/setup_intent_payment_method_options_acss_debit"
                },
                {
                  "$ref": "#/components/schemas/setup_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "blik": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/setup_intent_payment_method_options_blik"
                },
                {
                  "$ref": "#/components/schemas/setup_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "card": {
              "$ref": "#/components/schemas/setup_intent_payment_method_options_card"
            },
            "link": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/setup_intent_payment_method_options_link"
                },
                {
                  "$ref": "#/components/schemas/setup_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "sepa_debit": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/setup_intent_payment_method_options_sepa_debit"
                },
                {
                  "$ref": "#/components/schemas/setup_intent_type_specific_payment_method_options_client"
                }
              ]
            },
            "us_bank_account": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/setup_intent_payment_method_options_us_bank_account"
                },
                {
                  "$ref": "#/components/schemas/setup_intent_type_specific_payment_method_options_client"
                }
              ]
            }
          },
          "title": "SetupIntentPaymentMethodOptions",
          "type": "object",
          "x-expandableFields": [
            "acss_debit",
            "blik",
            "card",
            "link",
            "sepa_debit",
            "us_bank_account"
          ]
        }
      ],
      "payment_method_types": {
        "description": "The list of payment method types (e.g. card) that this SetupIntent is allowed to set up.",
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "single_use_mandate": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A Mandate is a record of the permission a customer has given you to debit their payment method.",
          "properties": {
            "customer_acceptance": {
              "$ref": "#/components/schemas/customer_acceptance"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "multi_use": {
              "$ref": "#/components/schemas/mandate_multi_use"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "mandate"
              ],
              "type": "string"
            },
            "payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the payment method associated with this mandate.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "payment_method_details": {
              "$ref": "#/components/schemas/mandate_payment_method_details"
            },
            "single_use": {
              "$ref": "#/components/schemas/mandate_single_use"
            },
            "status": {
              "description": "The status of the mandate, which indicates whether it can be used to initiate a payment.",
              "enum": [
                "active",
                "inactive",
                "pending"
              ],
              "type": "string"
            },
            "type": {
              "description": "The type of the mandate.",
              "enum": [
                "multi_use",
                "single_use"
              ],
              "type": "string"
            }
          },
          "required": [
            "customer_acceptance",
            "id",
            "livemode",
            "object",
            "payment_method",
            "payment_method_details",
            "status",
            "type"
          ],
          "title": "Mandate",
          "type": "object",
          "x-expandableFields": [
            "customer_acceptance",
            "multi_use",
            "payment_method",
            "payment_method_details",
            "single_use"
          ],
          "x-resourceId": "mandate"
        }
      ],
      "status": {
        "description": "[Status](https://stripe.com/docs/payments/intents#intent-statuses) of this SetupIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `canceled`, or `succeeded`.",
        "enum": [
          "canceled",
          "processing",
          "requires_action",
          "requires_confirmation",
          "requires_payment_method",
          "succeeded"
        ],
        "type": "string"
      },
      "usage": {
        "description": "Indicates how the payment method is intended to be used in the future.\n\nUse `on_session` if you intend to only reuse the payment method when the customer is in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. If not provided, this value defaults to `off_session`.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "created",
      "id",
      "livemode",
      "object",
      "payment_method_types",
      "status",
      "usage"
    ],
    "title": "SetupIntent",
    "type": "object",
    "x-expandableFields": [
      "application",
      "customer",
      "last_setup_error",
      "latest_attempt",
      "mandate",
      "next_action",
      "on_behalf_of",
      "payment_method",
      "payment_method_options",
      "single_use_mandate"
    ],
    "x-resourceId": "setup_intent"
  },
  "scheduled_query_run": {
    "description": "If you have [scheduled a Sigma query](https://stripe.com/docs/sigma/scheduled-queries), you'll\nreceive a `sigma.scheduled_query_run.created` webhook each time the query\nruns. The webhook contains a `ScheduledQueryRun` object, which you can use to\nretrieve the query results.",
    "properties": {
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "data_load_time": {
        "description": "When the query was run, Sigma contained a snapshot of your Stripe data at this time.",
        "format": "unix-time",
        "type": "integer"
      },
      "error": {
        "description": "",
        "properties": {
          "message": {
            "description": "Information about the run failure.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "title": "SigmaScheduledQueryRunError",
        "type": "object",
        "x-expandableFields": []
      },
      "file": [
        {
          "description": "This is an object representing a file hosted on Stripe's servers. The\nfile may have been uploaded by yourself using the [create file](https://stripe.com/docs/api#create_file)\nrequest (for example, when uploading dispute evidence) or it may have\nbeen created by Stripe (for example, the results of a [Sigma scheduled\nquery](#scheduled_queries)).\n\nRelated guide: [File Upload Guide](https://stripe.com/docs/file-upload).",
          "properties": {
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "expires_at": {
              "description": "The time at which the file expires and is no longer available in epoch seconds.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "filename": {
              "description": "A filename for the file, suitable for saving to a filesystem.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "links": {
              "description": "A list of [file links](https://stripe.com/docs/api#file_links) that point at this file.",
              "nullable": true,
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/file_link"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/file_links",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "FileFileLinkList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "file"
              ],
              "type": "string"
            },
            "purpose": {
              "description": "The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the uploaded file.",
              "enum": [
                "account_requirement",
                "additional_verification",
                "business_icon",
                "business_logo",
                "customer_signature",
                "dispute_evidence",
                "document_provider_identity_document",
                "finance_report_run",
                "identity_document",
                "identity_document_downloadable",
                "pci_document",
                "selfie",
                "sigma_scheduled_query",
                "tax_document_user_upload"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "size": {
              "description": "The size in bytes of the file object.",
              "type": "integer"
            },
            "title": {
              "description": "A user friendly title for the document.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "type": {
              "description": "The type of the file returned (e.g., `csv`, `pdf`, `jpg`, or `png`).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "url": {
              "description": "The URL from which the file can be downloaded using your live secret API key.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "created",
            "id",
            "object",
            "purpose",
            "size"
          ],
          "title": "File",
          "type": "object",
          "x-expandableFields": [
            "links"
          ],
          "x-resourceId": "file"
        }
      ],
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "scheduled_query_run"
        ],
        "type": "string"
      },
      "result_available_until": {
        "description": "Time at which the result expires and is no longer available for download.",
        "format": "unix-time",
        "type": "integer"
      },
      "sql": {
        "description": "SQL for the query.",
        "maxLength": 100000,
        "type": "string"
      },
      "status": {
        "description": "The query's execution status, which will be `completed` for successful runs, and `canceled`, `failed`, or `timed_out` otherwise.",
        "maxLength": 5000,
        "type": "string"
      },
      "title": {
        "description": "Title of the query.",
        "maxLength": 5000,
        "type": "string"
      }
    },
    "required": [
      "created",
      "data_load_time",
      "id",
      "livemode",
      "object",
      "result_available_until",
      "sql",
      "status",
      "title"
    ],
    "title": "ScheduledQueryRun",
    "type": "object",
    "x-expandableFields": [
      "error",
      "file"
    ],
    "x-resourceId": "scheduled_query_run"
  },
  "sku": {
    "description": "Stores representations of [stock keeping units](http://en.wikipedia.org/wiki/Stock_keeping_unit).\nSKUs describe specific product variations, taking into account any combination of: attributes,\ncurrency, and cost. For example, a product may be a T-shirt, whereas a specific SKU represents\nthe `size: large`, `color: red` version of that shirt.\n\nCan also be used to manage inventory.",
    "properties": {
      "active": {
        "description": "Whether the SKU is available for purchase.",
        "type": "boolean"
      },
      "attributes": {
        "additionalProperties": {
          "maxLength": 5000,
          "type": "string"
        },
        "description": "A dictionary of attributes and values for the attributes defined by the product. If, for example, a product's attributes are `[\"size\", \"gender\"]`, a valid SKU has the following dictionary of attributes: `{\"size\": \"Medium\", \"gender\": \"Unisex\"}`.",
        "type": "object"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "image": {
        "description": "The URL of an image for this SKU, meant to be displayable to the customer.",
        "maxLength": 2048,
        "nullable": true,
        "type": "string"
      },
      "inventory": {
        "description": "",
        "properties": {
          "quantity": {
            "description": "The count of inventory available. Will be present if and only if `type` is `finite`.",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "Inventory type. Possible values are `finite`, `bucket` (not quantified), and `infinite`.",
            "maxLength": 5000,
            "type": "string"
          },
          "value": {
            "description": "An indicator of the inventory available. Possible values are `in_stock`, `limited`, and `out_of_stock`. Will be present if and only if `type` is `bucket`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "SKUInventory",
        "type": "object",
        "x-expandableFields": []
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "sku"
        ],
        "type": "string"
      },
      "package_dimensions": [
        {
          "description": "",
          "properties": {
            "height": {
              "description": "Height, in inches.",
              "type": "number"
            },
            "length": {
              "description": "Length, in inches.",
              "type": "number"
            },
            "weight": {
              "description": "Weight, in ounces.",
              "type": "number"
            },
            "width": {
              "description": "Width, in inches.",
              "type": "number"
            }
          },
          "required": [
            "height",
            "length",
            "weight",
            "width"
          ],
          "title": "PackageDimensions",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "price": {
        "description": "The cost of the item as a positive integer in the smallest currency unit (that is, 100 cents to charge $1.00, or 100 to charge Â¥100, Japanese Yen being a zero-decimal currency).",
        "type": "integer"
      },
      "product": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Products describe the specific goods or services you offer to your customers.\nFor example, you might offer a Standard and Premium version of your goods or service; each version would be a separate Product.\nThey can be used in conjunction with [Prices](https://stripe.com/docs/api#prices) to configure pricing in Payment Links, Checkout, and Subscriptions.\n\nRelated guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription),\n[share a Payment Link](https://stripe.com/docs/payments/payment-links/overview),\n[accept payments with Checkout](https://stripe.com/docs/payments/accept-a-payment#create-product-prices-upfront),\nand more about [Products and Prices](https://stripe.com/docs/products-prices/overview)",
          "properties": {
            "active": {
              "description": "Whether the product is currently available for purchase.",
              "type": "boolean"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "default_price": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/price"
                }
              ],
              "description": "The ID of the [Price](https://stripe.com/docs/api/prices) object that is the default price for this product.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/price"
                  }
                ]
              }
            },
            "description": {
              "description": "The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "images": {
              "description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The product's name, meant to be displayable to the customer.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "product"
              ],
              "type": "string"
            },
            "package_dimensions": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/package_dimensions"
                }
              ],
              "description": "The dimensions of this product for shipping purposes.",
              "nullable": true
            },
            "shippable": {
              "description": "Whether this product is shipped (i.e., physical goods).",
              "nullable": true,
              "type": "boolean"
            },
            "statement_descriptor": {
              "description": "Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "tax_code": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/tax_code"
                }
              ],
              "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/tax_code"
                  }
                ]
              }
            },
            "unit_label": {
              "description": "A label that represents units of this product in Stripe and on customersâ€™ receipts and invoices. When set, this will be included in associated invoice line item descriptions.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "updated": {
              "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "url": {
              "description": "A URL of a publicly-accessible webpage for this product.",
              "maxLength": 2048,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "active",
            "created",
            "id",
            "images",
            "livemode",
            "metadata",
            "name",
            "object",
            "updated"
          ],
          "title": "Product",
          "type": "object",
          "x-expandableFields": [
            "default_price",
            "package_dimensions",
            "tax_code"
          ],
          "x-resourceId": "product"
        }
      ],
      "updated": {
        "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      }
    },
    "required": [
      "active",
      "attributes",
      "created",
      "currency",
      "id",
      "inventory",
      "livemode",
      "metadata",
      "object",
      "price",
      "product",
      "updated"
    ],
    "title": "Sku",
    "type": "object",
    "x-expandableFields": [
      "inventory",
      "package_dimensions",
      "product"
    ],
    "x-resourceId": "sku"
  },
  "transaction": {
    "description": "Some payment methods have no required amount that a customer must send.\nCustomers can be instructed to send any amount, and it can be made up of\nmultiple transactions. As such, sources can have multiple associated\ntransactions.",
    "properties": {
      "ach_credit_transfer": {
        "description": "",
        "properties": {
          "customer_data": {
            "description": "Customer data associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "fingerprint": {
            "description": "Bank account fingerprint associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "last4": {
            "description": "Last 4 digits of the account number associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "routing_number": {
            "description": "Routing number associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "SourceTransactionAchCreditTransferData",
        "type": "object",
        "x-expandableFields": []
      },
      "amount": {
        "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for Â¥1, Japanese Yen being a zero-decimal currency) representing the amount your customer has pushed to the receiver.",
        "type": "integer"
      },
      "chf_credit_transfer": {
        "description": "",
        "properties": {
          "reference": {
            "description": "Reference associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_address_country": {
            "description": "Sender's country address.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_address_line1": {
            "description": "Sender's line 1 address.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_iban": {
            "description": "Sender's bank account IBAN.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_name": {
            "description": "Sender's name.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "SourceTransactionChfCreditTransferData",
        "type": "object",
        "x-expandableFields": []
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "gbp_credit_transfer": {
        "description": "",
        "properties": {
          "fingerprint": {
            "description": "Bank account fingerprint associated with the Stripe owned bank account receiving the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "funding_method": {
            "description": "The credit transfer rails the sender used to push this transfer. The possible rails are: Faster Payments, BACS, CHAPS, and wire transfers. Currently only Faster Payments is supported.",
            "maxLength": 5000,
            "type": "string"
          },
          "last4": {
            "description": "Last 4 digits of sender account number associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "reference": {
            "description": "Sender entered arbitrary information about the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_account_number": {
            "description": "Sender account number associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_name": {
            "description": "Sender name associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_sort_code": {
            "description": "Sender sort code associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "SourceTransactionGbpCreditTransferData",
        "type": "object",
        "x-expandableFields": []
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "source_transaction"
        ],
        "type": "string"
      },
      "paper_check": {
        "description": "",
        "properties": {
          "available_at": {
            "description": "Time at which the deposited funds will be available for use. Measured in seconds since the Unix epoch.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoices": {
            "description": "Comma-separated list of invoice IDs associated with the paper check.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "SourceTransactionPaperCheckData",
        "type": "object",
        "x-expandableFields": []
      },
      "sepa_credit_transfer": {
        "description": "",
        "properties": {
          "reference": {
            "description": "Reference associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_iban": {
            "description": "Sender's bank account IBAN.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_name": {
            "description": "Sender's name.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "SourceTransactionSepaCreditTransferData",
        "type": "object",
        "x-expandableFields": []
      },
      "source": {
        "description": "The ID of the source this transaction is attached to.",
        "maxLength": 5000,
        "type": "string"
      },
      "status": {
        "description": "The status of the transaction, one of `succeeded`, `pending`, or `failed`.",
        "maxLength": 5000,
        "type": "string"
      },
      "type": {
        "description": "The type of source this transaction is attached to.",
        "enum": [
          "ach_credit_transfer",
          "ach_debit",
          "alipay",
          "bancontact",
          "card",
          "card_present",
          "eps",
          "giropay",
          "ideal",
          "klarna",
          "multibanco",
          "p24",
          "sepa_debit",
          "sofort",
          "three_d_secure",
          "wechat"
        ],
        "type": "string"
      }
    },
    "required": [
      "amount",
      "created",
      "currency",
      "id",
      "livemode",
      "object",
      "source",
      "status",
      "type"
    ],
    "title": "SourceTransaction",
    "type": "object",
    "x-expandableFields": [
      "ach_credit_transfer",
      "chf_credit_transfer",
      "gbp_credit_transfer",
      "paper_check",
      "sepa_credit_transfer"
    ],
    "x-resourceId": "source_transaction"
  },
  "subscription_schedule": {
    "description": "A subscription schedule allows you to create and manage the lifecycle of a subscription by predefining expected changes.\n\nRelated guide: [Subscription Schedules](https://stripe.com/docs/billing/subscriptions/subscription-schedules).",
    "properties": {
      "application": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "",
          "properties": {
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "The name of the application.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Application",
          "type": "object",
          "x-expandableFields": []
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "name": {
              "description": "The name of the application.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "application"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedApplication",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "canceled_at": {
        "description": "Time at which the subscription schedule was canceled. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "completed_at": {
        "description": "Time at which the subscription schedule was completed. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "current_phase": [
        {
          "description": "",
          "properties": {
            "end_date": {
              "description": "The end of this phase of the subscription schedule.",
              "format": "unix-time",
              "type": "integer"
            },
            "start_date": {
              "description": "The start of this phase of the subscription schedule.",
              "format": "unix-time",
              "type": "integer"
            }
          },
          "required": [
            "end_date",
            "start_date"
          ],
          "title": "SubscriptionScheduleCurrentPhase",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "customer": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
          "properties": {
            "address": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/address"
                }
              ],
              "description": "The customer's address.",
              "nullable": true
            },
            "balance": {
              "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
              "type": "integer"
            },
            "cash_balance": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cash_balance"
                }
              ],
              "description": "The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.",
              "nullable": true
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the customer.\n\nIf you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "delinquent": {
              "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
              "nullable": true,
              "type": "boolean"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount active on the customer, if there is one.",
              "nullable": true
            },
            "email": {
              "description": "The customer's email address.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_credit_balance": {
              "additionalProperties": {
                "type": "integer"
              },
              "description": "The current multi-currency balances, if any, being stored on the customer.If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency.If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices.They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
              "type": "object"
            },
            "invoice_prefix": {
              "description": "The prefix for the customer used to generate unique invoice numbers.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "invoice_settings": {
              "$ref": "#/components/schemas/invoice_setting_customer_setting"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "name": {
              "description": "The customer's full name or business name.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "next_invoice_sequence": {
              "description": "The suffix of the customer's next invoice number, e.g., 0001.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            },
            "phone": {
              "description": "The customer's phone number.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "preferred_locales": {
              "description": "The customer's preferred locales (languages), ordered by preference.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "nullable": true,
              "type": "array"
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
              "nullable": true
            },
            "sources": {
              "description": "The customer's payment sources, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      },
                      {
                        "$ref": "#/components/schemas/source"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ApmsSourcesSourceList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "subscriptions": {
              "description": "The customer's current subscriptions, if any.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "tax": {
              "$ref": "#/components/schemas/customer_tax"
            },
            "tax_exempt": {
              "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
              "enum": [
                "exempt",
                "none",
                "reverse"
              ],
              "nullable": true,
              "type": "string"
            },
            "tax_ids": {
              "description": "The customer's tax IDs.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TaxIDsList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this customer belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            }
          },
          "required": [
            "created",
            "id",
            "livemode",
            "object"
          ],
          "title": "Customer",
          "type": "object",
          "x-expandableFields": [
            "address",
            "cash_balance",
            "default_source",
            "discount",
            "invoice_settings",
            "shipping",
            "sources",
            "subscriptions",
            "tax",
            "tax_ids",
            "test_clock"
          ],
          "x-resourceId": "customer"
        },
        {
          "description": "",
          "properties": {
            "deleted": {
              "description": "Always true for a deleted object",
              "enum": [
                true
              ],
              "type": "boolean"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          "required": [
            "deleted",
            "id",
            "object"
          ],
          "title": "DeletedCustomer",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "deleted_customer"
        }
      ],
      "default_settings": {
        "description": "",
        "properties": {
          "application_fee_percent": {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account during this phase of the schedule.",
            "nullable": true,
            "type": "number"
          },
          "automatic_tax": {
            "$ref": "#/components/schemas/subscription_schedules_resource_default_settings_automatic_tax"
          },
          "billing_cycle_anchor": {
            "description": "Possible values are `phase_start` or `automatic`. If `phase_start` then billing cycle anchor of the subscription is set to the start of the phase when entering the phase. If `automatic` then the billing cycle anchor is automatically modified as needed when entering the phase. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).",
            "enum": [
              "automatic",
              "phase_start"
            ],
            "type": "string"
          },
          "billing_thresholds": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_billing_thresholds"
              }
            ],
            "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
            "nullable": true
          },
          "collection_method": {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay the underlying subscription at the end of each billing cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "nullable": true,
            "type": "string"
          },
          "default_payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of the default payment method for the subscription schedule. If not set, invoices will use the default payment method in the customer's invoice settings.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "invoice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_setting_subscription_schedule_setting"
              }
            ],
            "description": "The subscription schedule's default invoice settings.",
            "nullable": true
          },
          "transfer_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_transfer_data"
              }
            ],
            "description": "The account (if any) the associated subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.",
            "nullable": true
          }
        },
        "required": [
          "billing_cycle_anchor"
        ],
        "title": "SubscriptionSchedulesResourceDefaultSettings",
        "type": "object",
        "x-expandableFields": [
          "automatic_tax",
          "billing_thresholds",
          "default_payment_method",
          "invoice_settings",
          "transfer_data"
        ]
      },
      "end_behavior": {
        "description": "Behavior of the subscription schedule and underlying subscription when it ends. Possible values are `release` and `cancel`.",
        "enum": [
          "cancel",
          "none",
          "release",
          "renew"
        ],
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "subscription_schedule"
        ],
        "type": "string"
      },
      "phases": {
        "description": "Configuration for the subscription schedule's phases.",
        "items": {
          "description": "A phase describes the plans, coupon, and trialing status of a subscription for a predefined time period.",
          "properties": {
            "add_invoice_items": {
              "description": "A list of prices and quantities that will generate invoice items appended to the next invoice for this phase.",
              "items": {
                "$ref": "#/components/schemas/subscription_schedule_add_invoice_item"
              },
              "type": "array"
            },
            "application_fee_percent": {
              "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account during this phase of the schedule.",
              "nullable": true,
              "type": "number"
            },
            "automatic_tax": {
              "$ref": "#/components/schemas/schedules_phase_automatic_tax"
            },
            "billing_cycle_anchor": {
              "description": "Possible values are `phase_start` or `automatic`. If `phase_start` then billing cycle anchor of the subscription is set to the start of the phase when entering the phase. If `automatic` then the billing cycle anchor is automatically modified as needed when entering the phase. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).",
              "enum": [
                "automatic",
                "phase_start"
              ],
              "nullable": true,
              "type": "string"
            },
            "billing_thresholds": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_billing_thresholds"
                }
              ],
              "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
              "nullable": true
            },
            "collection_method": {
              "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay the underlying subscription at the end of each billing cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions.",
              "enum": [
                "charge_automatically",
                "send_invoice"
              ],
              "nullable": true,
              "type": "string"
            },
            "coupon": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/coupon"
                },
                {
                  "$ref": "#/components/schemas/deleted_coupon"
                }
              ],
              "description": "ID of the coupon to use during this phase of the subscription schedule.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/coupon"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_coupon"
                  }
                ]
              }
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "default_payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the default payment method for the subscription schedule. It must belong to the customer associated with the subscription schedule. If not set, invoices will use the default payment method in the customer's invoice settings.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "default_tax_rates": {
              "description": "The default tax rates to apply to the subscription during this phase of the subscription schedule.",
              "items": {
                "$ref": "#/components/schemas/tax_rate"
              },
              "nullable": true,
              "type": "array"
            },
            "end_date": {
              "description": "The end of this phase of the subscription schedule.",
              "format": "unix-time",
              "type": "integer"
            },
            "invoice_settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/invoice_setting_subscription_schedule_setting"
                }
              ],
              "description": "The invoice settings applicable during this phase.",
              "nullable": true
            },
            "items": {
              "description": "Subscription items to configure the subscription to during this phase of the subscription schedule.",
              "items": {
                "$ref": "#/components/schemas/subscription_schedule_configuration_item"
              },
              "type": "array"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to a phase. Metadata on a schedule's phase will update the underlying subscription's `metadata` when the phase is entered. Updating the underlying subscription's `metadata` directly will not affect the current phase's `metadata`.",
              "nullable": true,
              "type": "object"
            },
            "proration_behavior": {
              "description": "If the subscription schedule will prorate when transitioning to this phase. Possible values are `create_prorations` and `none`.",
              "enum": [
                "always_invoice",
                "create_prorations",
                "none"
              ],
              "type": "string"
            },
            "start_date": {
              "description": "The start of this phase of the subscription schedule.",
              "format": "unix-time",
              "type": "integer"
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_transfer_data"
                }
              ],
              "description": "The account (if any) the associated subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.",
              "nullable": true
            },
            "trial_end": {
              "description": "When the trial ends within the phase.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            }
          },
          "required": [
            "add_invoice_items",
            "end_date",
            "items",
            "proration_behavior",
            "start_date"
          ],
          "title": "SubscriptionSchedulePhaseConfiguration",
          "type": "object",
          "x-expandableFields": [
            "add_invoice_items",
            "automatic_tax",
            "billing_thresholds",
            "coupon",
            "default_payment_method",
            "default_tax_rates",
            "invoice_settings",
            "items",
            "transfer_data"
          ]
        },
        "type": "array"
      },
      "released_at": {
        "description": "Time at which the subscription schedule was released. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "nullable": true,
        "type": "integer"
      },
      "released_subscription": {
        "description": "ID of the subscription once managed by the subscription schedule (if it is released).",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "status": {
        "description": "The present status of the subscription schedule. Possible values are `not_started`, `active`, `completed`, `released`, and `canceled`. You can read more about the different states in our [behavior guide](https://stripe.com/docs/billing/subscriptions/subscription-schedules).",
        "enum": [
          "active",
          "canceled",
          "completed",
          "not_started",
          "released"
        ],
        "type": "string"
      },
      "subscription": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Subscriptions allow you to charge a customer on a recurring basis.\n\nRelated guide: [Creating Subscriptions](https://stripe.com/docs/billing/subscriptions/creating).",
          "properties": {
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ],
              "description": "ID of the Connect Application that created the subscription.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_application"
                  }
                ]
              }
            },
            "application_fee_percent": {
              "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.",
              "nullable": true,
              "type": "number"
            },
            "automatic_tax": {
              "$ref": "#/components/schemas/subscription_automatic_tax"
            },
            "billing_cycle_anchor": {
              "description": "Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.",
              "format": "unix-time",
              "type": "integer"
            },
            "billing_thresholds": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_billing_thresholds"
                }
              ],
              "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
              "nullable": true
            },
            "cancel_at": {
              "description": "A date in the future at which the subscription will automatically get canceled",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "cancel_at_period_end": {
              "description": "If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.",
              "type": "boolean"
            },
            "canceled_at": {
              "description": "If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will reflect the time of the most recent update request, not the end of the subscription period when the subscription is automatically moved to a canceled state.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "collection_method": {
              "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions.",
              "enum": [
                "charge_automatically",
                "send_invoice"
              ],
              "type": "string"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "current_period_end": {
              "description": "End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.",
              "format": "unix-time",
              "type": "integer"
            },
            "current_period_start": {
              "description": "Start of the current period that the subscription has been invoiced for.",
              "format": "unix-time",
              "type": "integer"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the customer who owns the subscription.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "days_until_due": {
              "description": "Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`.",
              "nullable": true,
              "type": "integer"
            },
            "default_payment_method": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ],
              "description": "ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_method"
                  }
                ]
              }
            },
            "default_source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ],
              "description": "ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "default_tax_rates": {
              "description": "The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.",
              "items": {
                "$ref": "#/components/schemas/tax_rate"
              },
              "nullable": true,
              "type": "array"
            },
            "description": {
              "description": "The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces.",
              "maxLength": 500,
              "nullable": true,
              "type": "string"
            },
            "discount": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "description": "Describes the current discount applied to this subscription, if there is one. When billing, a discount applied to a subscription overrides a discount applied on a customer-wide basis.",
              "nullable": true
            },
            "ended_at": {
              "description": "If the subscription has ended, the date the subscription ended.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "items": {
              "description": "List of subscription items, each with an attached price.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/subscription_item"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "SubscriptionItemList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "latest_invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "The most recent invoice this subscription has generated.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "next_pending_invoice_item_invoice": {
              "description": "Specifies the approximate timestamp on which any pending invoice items will be billed according to the schedule provided at `pending_invoice_item_interval`.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "subscription"
              ],
              "type": "string"
            },
            "pause_collection": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscriptions_resource_pause_collection"
                }
              ],
              "description": "If specified, payment collection for this subscription will be paused.",
              "nullable": true
            },
            "payment_settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscriptions_resource_payment_settings"
                }
              ],
              "description": "Payment settings passed on to invoices created by the subscription.",
              "nullable": true
            },
            "pending_invoice_item_interval": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_pending_invoice_item_interval"
                }
              ],
              "description": "Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.",
              "nullable": true
            },
            "pending_setup_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/setup_intent"
                }
              ],
              "description": "You can use this [SetupIntent](https://stripe.com/docs/api/setup_intents) to collect user authentication when creating a subscription without immediate payment or updating a subscription's payment method, allowing you to optimize for off-session payments. Learn more in the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/setup_intent"
                  }
                ]
              }
            },
            "pending_update": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscriptions_resource_pending_update"
                }
              ],
              "description": "If specified, [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates) that will be applied to the subscription once the `latest_invoice` has been paid.",
              "nullable": true
            },
            "schedule": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/subscription_schedule"
                }
              ],
              "description": "The schedule attached to the subscription",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/subscription_schedule"
                  }
                ]
              }
            },
            "start_date": {
              "description": "Date when the subscription was first created. The date might differ from the `created` date due to backdating.",
              "format": "unix-time",
              "type": "integer"
            },
            "status": {
              "description": "Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`, `past_due`, `canceled`, or `unpaid`. \n\nFor `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this state can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` state. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal state, the open invoice will be voided and no further invoices will be generated. \n\nA subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over. \n\nIf subscription `collection_method=charge_automatically` it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid` (depending on your subscriptions settings) when Stripe has exhausted all payment retry attempts. \n\nIf subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.",
              "enum": [
                "active",
                "canceled",
                "incomplete",
                "incomplete_expired",
                "past_due",
                "trialing",
                "unpaid"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "test_clock": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ],
              "description": "ID of the test clock this subscription belongs to.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ]
              }
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_transfer_data"
                }
              ],
              "description": "The account (if any) the subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.",
              "nullable": true
            },
            "trial_end": {
              "description": "If the subscription has a trial, the end of that trial.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "trial_start": {
              "description": "If the subscription has a trial, the beginning of that trial.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            }
          },
          "required": [
            "automatic_tax",
            "billing_cycle_anchor",
            "cancel_at_period_end",
            "collection_method",
            "created",
            "currency",
            "current_period_end",
            "current_period_start",
            "customer",
            "id",
            "items",
            "livemode",
            "metadata",
            "object",
            "start_date",
            "status"
          ],
          "title": "Subscription",
          "type": "object",
          "x-expandableFields": [
            "application",
            "automatic_tax",
            "billing_thresholds",
            "customer",
            "default_payment_method",
            "default_source",
            "default_tax_rates",
            "discount",
            "items",
            "latest_invoice",
            "pause_collection",
            "payment_settings",
            "pending_invoice_item_interval",
            "pending_setup_intent",
            "pending_update",
            "schedule",
            "test_clock",
            "transfer_data"
          ],
          "x-resourceId": "subscription"
        }
      ],
      "test_clock": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A test clock enables deterministic control over objects in testmode. With a test clock, you can create\nobjects at a frozen time in the past or future, and advance to a specific future time to observe webhooks and state changes. After the clock advances,\nyou can either validate the current state of your scenario (and test your assumptions), change the current state of your scenario (and test more complex scenarios), or keep advancing forward in time.",
          "properties": {
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "deletes_after": {
              "description": "Time at which this clock is scheduled to auto delete.",
              "format": "unix-time",
              "type": "integer"
            },
            "frozen_time": {
              "description": "Time at which all objects belonging to this clock are frozen.",
              "format": "unix-time",
              "type": "integer"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "name": {
              "description": "The custom name supplied at creation.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "test_helpers.test_clock"
              ],
              "type": "string"
            },
            "status": {
              "description": "The status of the Test Clock.",
              "enum": [
                "advancing",
                "internal_failure",
                "ready"
              ],
              "type": "string"
            }
          },
          "required": [
            "created",
            "deletes_after",
            "frozen_time",
            "id",
            "livemode",
            "object",
            "status"
          ],
          "title": "TestClock",
          "type": "object",
          "x-expandableFields": [],
          "x-resourceId": "test_helpers.test_clock"
        }
      ]
    },
    "required": [
      "created",
      "customer",
      "default_settings",
      "end_behavior",
      "id",
      "livemode",
      "object",
      "phases",
      "status"
    ],
    "title": "SubscriptionSchedule",
    "type": "object",
    "x-expandableFields": [
      "application",
      "current_phase",
      "customer",
      "default_settings",
      "phases",
      "subscription",
      "test_clock"
    ],
    "x-resourceId": "subscription_schedule"
  },
  "tax_rate": {
    "description": "Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.\n\nRelated guide: [Tax Rates](https://stripe.com/docs/billing/taxes/tax-rates).",
    "properties": {
      "active": {
        "description": "Defaults to `true`. When set to `false`, this tax rate cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.",
        "type": "boolean"
      },
      "country": {
        "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "description": {
        "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "display_name": {
        "description": "The display name of the tax rates as it will appear to your customer on their receipt email, PDF, and the hosted invoice page.",
        "maxLength": 5000,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "inclusive": {
        "description": "This specifies if the tax rate is inclusive or exclusive.",
        "type": "boolean"
      },
      "jurisdiction": {
        "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customerâ€™s invoice.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "tax_rate"
        ],
        "type": "string"
      },
      "percentage": {
        "description": "This represents the tax rate percent out of 100.",
        "type": "number"
      },
      "state": {
        "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "tax_type": {
        "description": "The high-level tax type, such as `vat` or `sales_tax`.",
        "enum": [
          "gst",
          "hst",
          "jct",
          "pst",
          "qst",
          "rst",
          "sales_tax",
          "vat"
        ],
        "nullable": true,
        "type": "string"
      }
    },
    "required": [
      "active",
      "created",
      "display_name",
      "id",
      "inclusive",
      "livemode",
      "object",
      "percentage"
    ],
    "title": "TaxRate",
    "type": "object",
    "x-expandableFields": [],
    "x-resourceId": "tax_rate"
  },
  "reader": {
    "description": "A Reader represents a physical device for accepting payment details.\n\nRelated guide: [Connecting to a Reader](https://stripe.com/docs/terminal/payments/connect-reader).",
    "properties": {
      "action": [
        {
          "description": "Represents an action performed by the reader",
          "properties": {
            "failure_code": {
              "description": "Failure code, only set if status is `failed`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "failure_message": {
              "description": "Detailed failure message, only set if status is `failed`.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "process_payment_intent": {
              "$ref": "#/components/schemas/terminal_reader_reader_resource_process_payment_intent_action"
            },
            "process_setup_intent": {
              "$ref": "#/components/schemas/terminal_reader_reader_resource_process_setup_intent_action"
            },
            "set_reader_display": {
              "$ref": "#/components/schemas/terminal_reader_reader_resource_set_reader_display_action"
            },
            "status": {
              "description": "Status of the action performed by the reader.",
              "enum": [
                "failed",
                "in_progress",
                "succeeded"
              ],
              "type": "string"
            },
            "type": {
              "description": "Type of action performed by the reader.",
              "enum": [
                "process_payment_intent",
                "process_setup_intent",
                "set_reader_display"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            }
          },
          "required": [
            "status",
            "type"
          ],
          "title": "TerminalReaderReaderResourceReaderAction",
          "type": "object",
          "x-expandableFields": [
            "process_payment_intent",
            "process_setup_intent",
            "set_reader_display"
          ]
        }
      ],
      "device_sw_version": {
        "description": "The current software version of the reader.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "device_type": {
        "description": "Type of reader, one of `bbpos_wisepad3`, `stripe_m2`, `bbpos_chipper2x`, `bbpos_wisepos_e`, `verifone_P400`, or `simulated_wisepos_e`.",
        "enum": [
          "bbpos_chipper2x",
          "bbpos_wisepad3",
          "bbpos_wisepos_e",
          "simulated_wisepos_e",
          "stripe_m2",
          "verifone_P400"
        ],
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "ip_address": {
        "description": "The local IP address of the reader.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "label": {
        "description": "Custom label given to the reader for easier identification.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "location": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "A Location represents a grouping of readers.\n\nRelated guide: [Fleet Management](https://stripe.com/docs/terminal/fleet/locations).",
          "properties": {
            "address": {
              "$ref": "#/components/schemas/address"
            },
            "configuration_overrides": {
              "description": "The ID of a configuration that will be used to customize all readers in this location.",
              "maxLength": 5000,
              "type": "string"
            },
            "display_name": {
              "description": "The display name of the location.",
              "maxLength": 5000,
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "terminal.location"
              ],
              "type": "string"
            }
          },
          "required": [
            "address",
            "display_name",
            "id",
            "livemode",
            "metadata",
            "object"
          ],
          "title": "TerminalLocationLocation",
          "type": "object",
          "x-expandableFields": [
            "address"
          ],
          "x-resourceId": "terminal.location"
        }
      ],
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "terminal.reader"
        ],
        "type": "string"
      },
      "serial_number": {
        "description": "Serial number of the reader.",
        "maxLength": 5000,
        "type": "string"
      },
      "status": {
        "description": "The networking status of the reader.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      }
    },
    "required": [
      "device_type",
      "id",
      "label",
      "livemode",
      "metadata",
      "object",
      "serial_number"
    ],
    "title": "TerminalReaderReader",
    "type": "object",
    "x-expandableFields": [
      "action",
      "location"
    ],
    "x-resourceId": "terminal.reader"
  },
  "test_clock": {
    "description": "A test clock enables deterministic control over objects in testmode. With a test clock, you can create\nobjects at a frozen time in the past or future, and advance to a specific future time to observe webhooks and state changes. After the clock advances,\nyou can either validate the current state of your scenario (and test your assumptions), change the current state of your scenario (and test more complex scenarios), or keep advancing forward in time.",
    "properties": {
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "deletes_after": {
        "description": "Time at which this clock is scheduled to auto delete.",
        "format": "unix-time",
        "type": "integer"
      },
      "frozen_time": {
        "description": "Time at which all objects belonging to this clock are frozen.",
        "format": "unix-time",
        "type": "integer"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "name": {
        "description": "The custom name supplied at creation.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "test_helpers.test_clock"
        ],
        "type": "string"
      },
      "status": {
        "description": "The status of the Test Clock.",
        "enum": [
          "advancing",
          "internal_failure",
          "ready"
        ],
        "type": "string"
      }
    },
    "required": [
      "created",
      "deletes_after",
      "frozen_time",
      "id",
      "livemode",
      "object",
      "status"
    ],
    "title": "TestClock",
    "type": "object",
    "x-expandableFields": [],
    "x-resourceId": "test_helpers.test_clock"
  },
  "topup": {
    "description": "To top up your Stripe balance, you create a top-up object. You can retrieve\nindividual top-ups, as well as list all top-ups. Top-ups are identified by a\nunique, random ID.\n\nRelated guide: [Topping Up your Platform Account](https://stripe.com/docs/connect/top-ups).",
    "properties": {
      "amount": {
        "description": "Amount transferred.",
        "type": "integer"
      },
      "balance_transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Balance transactions represent funds moving through your Stripe account.\nThey're created for every type of transaction that comes into or flows out of your Stripe account balance.\n\nRelated guide: [Balance Transaction Types](https://stripe.com/docs/reports/balance-transaction-types).",
          "properties": {
            "amount": {
              "description": "Gross amount of the transaction, in %s.",
              "type": "integer"
            },
            "available_on": {
              "description": "The date the transaction's net funds will become available in the Stripe balance.",
              "format": "unix-time",
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exchange_rate": {
              "description": "The exchange rate used, if applicable, for this transaction. Specifically, if money was converted from currency A to currency B, then the `amount` in currency A, times `exchange_rate`, would be the `amount` in currency B. For example, suppose you charged a customer 10.00 EUR. Then the PaymentIntent's `amount` would be `1000` and `currency` would be `eur`. Suppose this was converted into 12.34 USD in your Stripe account. Then the BalanceTransaction's `amount` would be `1234`, `currency` would be `usd`, and `exchange_rate` would be `1.234`.",
              "nullable": true,
              "type": "number"
            },
            "fee": {
              "description": "Fees (in %s) paid for this transaction.",
              "type": "integer"
            },
            "fee_details": {
              "description": "Detailed breakdown of fees (in %s) paid for this transaction.",
              "items": {
                "$ref": "#/components/schemas/fee"
              },
              "type": "array"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "net": {
              "description": "Net amount of the transaction, in %s.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "balance_transaction"
              ],
              "type": "string"
            },
            "reporting_category": {
              "description": "[Learn more](https://stripe.com/docs/reports/reporting-categories) about how reporting categories can help you understand balance transactions from an accounting perspective.",
              "maxLength": 5000,
              "type": "string"
            },
            "source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                },
                {
                  "$ref": "#/components/schemas/charge"
                },
                {
                  "$ref": "#/components/schemas/connect_collection_transfer"
                },
                {
                  "$ref": "#/components/schemas/dispute"
                },
                {
                  "$ref": "#/components/schemas/fee_refund"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                },
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                },
                {
                  "$ref": "#/components/schemas/payout"
                },
                {
                  "$ref": "#/components/schemas/platform_tax_fee"
                },
                {
                  "$ref": "#/components/schemas/refund"
                },
                {
                  "$ref": "#/components/schemas/reserve_transaction"
                },
                {
                  "$ref": "#/components/schemas/tax_deducted_at_source"
                },
                {
                  "$ref": "#/components/schemas/topup"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ],
              "description": "The Stripe object to which this transaction is related.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  },
                  {
                    "$ref": "#/components/schemas/charge"
                  },
                  {
                    "$ref": "#/components/schemas/connect_collection_transfer"
                  },
                  {
                    "$ref": "#/components/schemas/dispute"
                  },
                  {
                    "$ref": "#/components/schemas/fee_refund"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.authorization"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.dispute"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.transaction"
                  },
                  {
                    "$ref": "#/components/schemas/payout"
                  },
                  {
                    "$ref": "#/components/schemas/platform_tax_fee"
                  },
                  {
                    "$ref": "#/components/schemas/refund"
                  },
                  {
                    "$ref": "#/components/schemas/reserve_transaction"
                  },
                  {
                    "$ref": "#/components/schemas/tax_deducted_at_source"
                  },
                  {
                    "$ref": "#/components/schemas/topup"
                  },
                  {
                    "$ref": "#/components/schemas/transfer"
                  },
                  {
                    "$ref": "#/components/schemas/transfer_reversal"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "status": {
              "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
              "maxLength": 5000,
              "type": "string"
            },
            "type": {
              "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. If you are looking to classify transactions for accounting purposes, you might want to consider `reporting_category` instead.",
              "enum": [
                "adjustment",
                "advance",
                "advance_funding",
                "anticipation_repayment",
                "application_fee",
                "application_fee_refund",
                "charge",
                "connect_collection_transfer",
                "contribution",
                "issuing_authorization_hold",
                "issuing_authorization_release",
                "issuing_dispute",
                "issuing_transaction",
                "payment",
                "payment_failure_refund",
                "payment_refund",
                "payout",
                "payout_cancel",
                "payout_failure",
                "refund",
                "refund_failure",
                "reserve_transaction",
                "reserved_funds",
                "stripe_fee",
                "stripe_fx_fee",
                "tax_fee",
                "topup",
                "topup_reversal",
                "transfer",
                "transfer_cancel",
                "transfer_failure",
                "transfer_refund"
              ],
              "type": "string"
            }
          },
          "required": [
            "amount",
            "available_on",
            "created",
            "currency",
            "fee",
            "fee_details",
            "id",
            "net",
            "object",
            "reporting_category",
            "status",
            "type"
          ],
          "title": "BalanceTransaction",
          "type": "object",
          "x-expandableFields": [
            "fee_details",
            "source"
          ],
          "x-resourceId": "balance_transaction"
        }
      ],
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "maxLength": 5000,
        "type": "string"
      },
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "expected_availability_date": {
        "description": "Date the funds are expected to arrive in your Stripe account for payouts. This factors in delays like weekends or bank holidays. May not be specified depending on status of top-up.",
        "nullable": true,
        "type": "integer"
      },
      "failure_code": {
        "description": "Error code explaining reason for top-up failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "failure_message": {
        "description": "Message to user further explaining reason for top-up failure if available.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "topup"
        ],
        "type": "string"
      },
      "source": [
        {
          "description": "`Source` objects allow you to accept a variety of payment methods. They\nrepresent a customer's payment instrument, and can be used with the Stripe API\njust like a `Card` object: once chargeable, they can be charged, or can be\nattached to customers.\n\nRelated guides: [Sources API](https://stripe.com/docs/sources) and [Sources & Customers](https://stripe.com/docs/sources/customers).",
          "properties": {
            "ach_credit_transfer": {
              "$ref": "#/components/schemas/source_type_ach_credit_transfer"
            },
            "ach_debit": {
              "$ref": "#/components/schemas/source_type_ach_debit"
            },
            "acss_debit": {
              "$ref": "#/components/schemas/source_type_acss_debit"
            },
            "alipay": {
              "$ref": "#/components/schemas/source_type_alipay"
            },
            "amount": {
              "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for Â¥1, Japanese Yen being a zero-decimal currency) representing the total amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources.",
              "nullable": true,
              "type": "integer"
            },
            "au_becs_debit": {
              "$ref": "#/components/schemas/source_type_au_becs_debit"
            },
            "bancontact": {
              "$ref": "#/components/schemas/source_type_bancontact"
            },
            "card": {
              "$ref": "#/components/schemas/source_type_card"
            },
            "card_present": {
              "$ref": "#/components/schemas/source_type_card_present"
            },
            "client_secret": {
              "description": "The client secret of the source. Used for client-side retrieval using a publishable key.",
              "maxLength": 5000,
              "type": "string"
            },
            "code_verification": {
              "$ref": "#/components/schemas/source_code_verification_flow"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready. Required for `single_use` sources.",
              "nullable": true,
              "type": "string"
            },
            "customer": {
              "description": "The ID of the customer to which this source is attached. This will not be present when the source has not been attached to a customer.",
              "maxLength": 5000,
              "type": "string"
            },
            "eps": {
              "$ref": "#/components/schemas/source_type_eps"
            },
            "flow": {
              "description": "The authentication `flow` of the source. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`.",
              "maxLength": 5000,
              "type": "string"
            },
            "giropay": {
              "$ref": "#/components/schemas/source_type_giropay"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "ideal": {
              "$ref": "#/components/schemas/source_type_ideal"
            },
            "klarna": {
              "$ref": "#/components/schemas/source_type_klarna"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "nullable": true,
              "type": "object"
            },
            "multibanco": {
              "$ref": "#/components/schemas/source_type_multibanco"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "source"
              ],
              "type": "string"
            },
            "owner": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/source_owner"
                }
              ],
              "description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
              "nullable": true
            },
            "p24": {
              "$ref": "#/components/schemas/source_type_p24"
            },
            "receiver": {
              "$ref": "#/components/schemas/source_receiver_flow"
            },
            "redirect": {
              "$ref": "#/components/schemas/source_redirect_flow"
            },
            "sepa_debit": {
              "$ref": "#/components/schemas/source_type_sepa_debit"
            },
            "sofort": {
              "$ref": "#/components/schemas/source_type_sofort"
            },
            "source_order": {
              "$ref": "#/components/schemas/source_order"
            },
            "statement_descriptor": {
              "description": "Extra information about a source. This will appear on your customer's statement every time you charge the source.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the source, one of `canceled`, `chargeable`, `consumed`, `failed`, or `pending`. Only `chargeable` sources can be used to create a charge.",
              "maxLength": 5000,
              "type": "string"
            },
            "three_d_secure": {
              "$ref": "#/components/schemas/source_type_three_d_secure"
            },
            "type": {
              "description": "The `type` of the source. The `type` is a payment method, one of `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `klarna`, `p24`, `sepa_debit`, `sofort`, `three_d_secure`, or `wechat`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https://stripe.com/docs/sources) used.",
              "enum": [
                "ach_credit_transfer",
                "ach_debit",
                "acss_debit",
                "alipay",
                "au_becs_debit",
                "bancontact",
                "card",
                "card_present",
                "eps",
                "giropay",
                "ideal",
                "klarna",
                "multibanco",
                "p24",
                "sepa_debit",
                "sofort",
                "three_d_secure",
                "wechat"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "usage": {
              "description": "Either `reusable` or `single_use`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "wechat": {
              "$ref": "#/components/schemas/source_type_wechat"
            }
          },
          "required": [
            "client_secret",
            "created",
            "flow",
            "id",
            "livemode",
            "object",
            "status",
            "type"
          ],
          "title": "Source",
          "type": "object",
          "x-expandableFields": [
            "code_verification",
            "owner",
            "receiver",
            "redirect",
            "source_order"
          ],
          "x-resourceId": "source"
        }
      ],
      "statement_descriptor": {
        "description": "Extra information about a top-up. This will appear on your source's bank statement. It must contain at least one letter.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "status": {
        "description": "The status of the top-up is either `canceled`, `failed`, `pending`, `reversed`, or `succeeded`.",
        "enum": [
          "canceled",
          "failed",
          "pending",
          "reversed",
          "succeeded"
        ],
        "type": "string"
      },
      "transfer_group": {
        "description": "A string that identifies this top-up as part of a group.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      }
    },
    "required": [
      "amount",
      "created",
      "currency",
      "id",
      "livemode",
      "metadata",
      "object",
      "status"
    ],
    "title": "Topup",
    "type": "object",
    "x-expandableFields": [
      "balance_transaction",
      "source"
    ],
    "x-resourceId": "topup"
  },
  "transfer": {
    "description": "A `Transfer` object is created when you move funds between Stripe accounts as\npart of Connect.\n\nBefore April 6, 2017, transfers also represented movement of funds from a\nStripe account to a card or bank account. This behavior has since been split\nout into a [Payout](https://stripe.com/docs/api#payout_object) object, with corresponding payout endpoints. For more\ninformation, read about the\n[transfer/payout split](https://stripe.com/docs/transfer-payout-split).\n\nRelated guide: [Creating Separate Charges and Transfers](https://stripe.com/docs/connect/charges-transfers).",
    "properties": {
      "amount": {
        "description": "Amount in %s to be transferred.",
        "type": "integer"
      },
      "amount_reversed": {
        "description": "Amount in %s reversed (can be less than the amount attribute on the transfer if a partial reversal was issued).",
        "type": "integer"
      },
      "balance_transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Balance transactions represent funds moving through your Stripe account.\nThey're created for every type of transaction that comes into or flows out of your Stripe account balance.\n\nRelated guide: [Balance Transaction Types](https://stripe.com/docs/reports/balance-transaction-types).",
          "properties": {
            "amount": {
              "description": "Gross amount of the transaction, in %s.",
              "type": "integer"
            },
            "available_on": {
              "description": "The date the transaction's net funds will become available in the Stripe balance.",
              "format": "unix-time",
              "type": "integer"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "exchange_rate": {
              "description": "The exchange rate used, if applicable, for this transaction. Specifically, if money was converted from currency A to currency B, then the `amount` in currency A, times `exchange_rate`, would be the `amount` in currency B. For example, suppose you charged a customer 10.00 EUR. Then the PaymentIntent's `amount` would be `1000` and `currency` would be `eur`. Suppose this was converted into 12.34 USD in your Stripe account. Then the BalanceTransaction's `amount` would be `1234`, `currency` would be `usd`, and `exchange_rate` would be `1.234`.",
              "nullable": true,
              "type": "number"
            },
            "fee": {
              "description": "Fees (in %s) paid for this transaction.",
              "type": "integer"
            },
            "fee_details": {
              "description": "Detailed breakdown of fees (in %s) paid for this transaction.",
              "items": {
                "$ref": "#/components/schemas/fee"
              },
              "type": "array"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "net": {
              "description": "Net amount of the transaction, in %s.",
              "type": "integer"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "balance_transaction"
              ],
              "type": "string"
            },
            "reporting_category": {
              "description": "[Learn more](https://stripe.com/docs/reports/reporting-categories) about how reporting categories can help you understand balance transactions from an accounting perspective.",
              "maxLength": 5000,
              "type": "string"
            },
            "source": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                },
                {
                  "$ref": "#/components/schemas/charge"
                },
                {
                  "$ref": "#/components/schemas/connect_collection_transfer"
                },
                {
                  "$ref": "#/components/schemas/dispute"
                },
                {
                  "$ref": "#/components/schemas/fee_refund"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                },
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                },
                {
                  "$ref": "#/components/schemas/payout"
                },
                {
                  "$ref": "#/components/schemas/platform_tax_fee"
                },
                {
                  "$ref": "#/components/schemas/refund"
                },
                {
                  "$ref": "#/components/schemas/reserve_transaction"
                },
                {
                  "$ref": "#/components/schemas/tax_deducted_at_source"
                },
                {
                  "$ref": "#/components/schemas/topup"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ],
              "description": "The Stripe object to which this transaction is related.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  },
                  {
                    "$ref": "#/components/schemas/charge"
                  },
                  {
                    "$ref": "#/components/schemas/connect_collection_transfer"
                  },
                  {
                    "$ref": "#/components/schemas/dispute"
                  },
                  {
                    "$ref": "#/components/schemas/fee_refund"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.authorization"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.dispute"
                  },
                  {
                    "$ref": "#/components/schemas/issuing.transaction"
                  },
                  {
                    "$ref": "#/components/schemas/payout"
                  },
                  {
                    "$ref": "#/components/schemas/platform_tax_fee"
                  },
                  {
                    "$ref": "#/components/schemas/refund"
                  },
                  {
                    "$ref": "#/components/schemas/reserve_transaction"
                  },
                  {
                    "$ref": "#/components/schemas/tax_deducted_at_source"
                  },
                  {
                    "$ref": "#/components/schemas/topup"
                  },
                  {
                    "$ref": "#/components/schemas/transfer"
                  },
                  {
                    "$ref": "#/components/schemas/transfer_reversal"
                  }
                ]
              },
              "x-stripeBypassValidation": true
            },
            "status": {
              "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
              "maxLength": 5000,
              "type": "string"
            },
            "type": {
              "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. If you are looking to classify transactions for accounting purposes, you might want to consider `reporting_category` instead.",
              "enum": [
                "adjustment",
                "advance",
                "advance_funding",
                "anticipation_repayment",
                "application_fee",
                "application_fee_refund",
                "charge",
                "connect_collection_transfer",
                "contribution",
                "issuing_authorization_hold",
                "issuing_authorization_release",
                "issuing_dispute",
                "issuing_transaction",
                "payment",
                "payment_failure_refund",
                "payment_refund",
                "payout",
                "payout_cancel",
                "payout_failure",
                "refund",
                "refund_failure",
                "reserve_transaction",
                "reserved_funds",
                "stripe_fee",
                "stripe_fx_fee",
                "tax_fee",
                "topup",
                "topup_reversal",
                "transfer",
                "transfer_cancel",
                "transfer_failure",
                "transfer_refund"
              ],
              "type": "string"
            }
          },
          "required": [
            "amount",
            "available_on",
            "created",
            "currency",
            "fee",
            "fee_details",
            "id",
            "net",
            "object",
            "reporting_category",
            "status",
            "type"
          ],
          "title": "BalanceTransaction",
          "type": "object",
          "x-expandableFields": [
            "fee_details",
            "source"
          ],
          "x-resourceId": "balance_transaction"
        }
      ],
      "created": {
        "description": "Time that this record of the transfer was first created.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "destination": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current e-mail address or if the account is\nenabled yet to make live charges.\n\nSome properties, marked below, are available only to platforms that want to\n[create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts).",
          "properties": {
            "business_profile": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_business_profile"
                }
              ],
              "description": "Business information about the account.",
              "nullable": true
            },
            "business_type": {
              "description": "The business type.",
              "enum": [
                "company",
                "government_entity",
                "individual",
                "non_profit"
              ],
              "nullable": true,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "capabilities": {
              "$ref": "#/components/schemas/account_capabilities"
            },
            "charges_enabled": {
              "description": "Whether the account can create live charges.",
              "type": "boolean"
            },
            "company": {
              "$ref": "#/components/schemas/legal_entity_company"
            },
            "controller": {
              "$ref": "#/components/schemas/account_unification_account_controller"
            },
            "country": {
              "description": "The account's country.",
              "maxLength": 5000,
              "type": "string"
            },
            "created": {
              "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "default_currency": {
              "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
              "maxLength": 5000,
              "type": "string"
            },
            "details_submitted": {
              "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
              "type": "boolean"
            },
            "email": {
              "description": "An email address associated with the account. You can treat this as metadata: it is not used for authentication or messaging account holders.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "external_accounts": {
              "description": "External accounts (bank accounts and debit cards) currently attached to this account",
              "properties": {
                "data": {
                  "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/bank_account"
                      },
                      {
                        "$ref": "#/components/schemas/card"
                      }
                    ],
                    "title": "Polymorphic",
                    "x-stripeBypassValidation": true
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "ExternalAccountList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "future_requirements": {
              "$ref": "#/components/schemas/account_future_requirements"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "individual": {
              "$ref": "#/components/schemas/person"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "account"
              ],
              "type": "string"
            },
            "payouts_enabled": {
              "description": "Whether Stripe can send payouts to this account.",
              "type": "boolean"
            },
            "requirements": {
              "$ref": "#/components/schemas/account_requirements"
            },
            "settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_settings"
                }
              ],
              "description": "Options for customizing how the account functions within Stripe.",
              "nullable": true
            },
            "tos_acceptance": {
              "$ref": "#/components/schemas/account_tos_acceptance"
            },
            "type": {
              "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
              "enum": [
                "custom",
                "express",
                "standard"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "object"
          ],
          "title": "Account",
          "type": "object",
          "x-expandableFields": [
            "business_profile",
            "capabilities",
            "company",
            "controller",
            "external_accounts",
            "future_requirements",
            "individual",
            "requirements",
            "settings",
            "tos_acceptance"
          ],
          "x-resourceId": "account"
        }
      ],
      "destination_payment": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "To charge a credit or a debit card, you create a `Charge` object. You can\nretrieve and refund individual charges as well as list all charges. Charges\nare identified by a unique, random ID.\n\nRelated guide: [Accept a payment with the Charges API](https://stripe.com/docs/payments/accept-a-payment-charges).",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "amount_captured": {
              "description": "Amount in %s captured (can be less than the amount attribute on the charge if a partial capture was made).",
              "type": "integer"
            },
            "amount_refunded": {
              "description": "Amount in %s refunded (can be less than the amount attribute on the charge if a partial refund was issued).",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the charge.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "application_fee": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                }
              ],
              "description": "The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "type": "integer"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "billing_details": {
              "$ref": "#/components/schemas/billing_details"
            },
            "calculated_statement_descriptor": {
              "description": "The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "captured": {
              "description": "If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.",
              "type": "boolean"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the customer this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 40000,
              "nullable": true,
              "type": "string"
            },
            "disputed": {
              "description": "Whether the charge has been disputed.",
              "type": "boolean"
            },
            "failure_balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the reversal of the balance on your account due to payment failure.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "failure_code": {
              "description": "Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "failure_message": {
              "description": "Message to user further explaining reason for charge failure if available.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "fraud_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_fraud_details"
                }
              ],
              "description": "Information on fraud assessments for the charge.",
              "nullable": true
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "ID of the invoice this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "charge"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "outcome": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_outcome"
                }
              ],
              "description": "Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details.",
              "nullable": true
            },
            "paid": {
              "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
              "type": "boolean"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "ID of the PaymentIntent associated with this charge, if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "payment_method": {
              "description": "ID of the payment method used in this charge.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "payment_method_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_details"
                }
              ],
              "description": "Details about the payment method at the time of the transaction.",
              "nullable": true
            },
            "radar_options": {
              "$ref": "#/components/schemas/radar_radar_options"
            },
            "receipt_email": {
              "description": "This is the email address that the receipt for this charge was sent to.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_url": {
              "description": "This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "refunded": {
              "description": "Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.",
              "type": "boolean"
            },
            "refunds": {
              "description": "A list of refunds that have been applied to the charge.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/refund"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "RefundList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "review": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/review"
                }
              ],
              "description": "ID of the review associated with this charge if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/review"
                  }
                ]
              }
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Shipping information for the charge.",
              "nullable": true
            },
            "source_transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "statement_descriptor": {
              "description": "For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "statement_descriptor_suffix": {
              "description": "Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the payment is either `succeeded`, `pending`, or `failed`.",
              "enum": [
                "failed",
                "pending",
                "succeeded"
              ],
              "type": "string"
            },
            "transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_transfer_data"
                }
              ],
              "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true
            },
            "transfer_group": {
              "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "amount_captured",
            "amount_refunded",
            "billing_details",
            "captured",
            "created",
            "currency",
            "disputed",
            "id",
            "livemode",
            "metadata",
            "object",
            "paid",
            "refunded",
            "refunds",
            "status"
          ],
          "title": "Charge",
          "type": "object",
          "x-expandableFields": [
            "application",
            "application_fee",
            "balance_transaction",
            "billing_details",
            "customer",
            "failure_balance_transaction",
            "fraud_details",
            "invoice",
            "on_behalf_of",
            "outcome",
            "payment_intent",
            "payment_method_details",
            "radar_options",
            "refunds",
            "review",
            "shipping",
            "source_transfer",
            "transfer",
            "transfer_data"
          ],
          "x-resourceId": "charge"
        }
      ],
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "transfer"
        ],
        "type": "string"
      },
      "reversals": {
        "description": "A list of reversals that have been applied to the transfer.",
        "properties": {
          "data": {
            "description": "Details about each object.",
            "items": {
              "description": "[Stripe Connect](https://stripe.com/docs/connect) platforms can reverse transfers made to a\nconnected account, either entirely or partially, and can also specify whether\nto refund any related application fees. Transfer reversals add to the\nplatform's balance and subtract from the destination account's balance.\n\nReversing a transfer that was made for a [destination\ncharge](/docs/connect/destination-charges) is allowed only up to the amount of\nthe charge. It is possible to reverse a\n[transfer_group](https://stripe.com/docs/connect/charges-transfers#transfer-options)\ntransfer only if the destination account has enough balance to cover the\nreversal.\n\nRelated guide: [Reversing Transfers](https://stripe.com/docs/connect/charges-transfers#reversing-transfers).",
              "properties": {
                "amount": {
                  "description": "Amount, in %s.",
                  "type": "integer"
                },
                "balance_transaction": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/balance_transaction"
                    }
                  ],
                  "description": "Balance transaction that describes the impact on your account balance.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/balance_transaction"
                      }
                    ]
                  }
                },
                "created": {
                  "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                  "format": "unix-time",
                  "type": "integer"
                },
                "currency": {
                  "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                  "type": "string"
                },
                "destination_payment_refund": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/refund"
                    }
                  ],
                  "description": "Linked payment refund for the transfer reversal.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/refund"
                      }
                    ]
                  }
                },
                "id": {
                  "description": "Unique identifier for the object.",
                  "maxLength": 5000,
                  "type": "string"
                },
                "metadata": {
                  "additionalProperties": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                  "nullable": true,
                  "type": "object"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value.",
                  "enum": [
                    "transfer_reversal"
                  ],
                  "type": "string"
                },
                "source_refund": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/refund"
                    }
                  ],
                  "description": "ID of the refund responsible for the transfer reversal.",
                  "nullable": true,
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/refund"
                      }
                    ]
                  }
                },
                "transfer": {
                  "anyOf": [
                    {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/transfer"
                    }
                  ],
                  "description": "ID of the transfer that was reversed.",
                  "x-expansionResources": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/transfer"
                      }
                    ]
                  }
                }
              },
              "required": [
                "amount",
                "created",
                "currency",
                "id",
                "object",
                "transfer"
              ],
              "title": "TransferReversal",
              "type": "object",
              "x-expandableFields": [
                "balance_transaction",
                "destination_payment_refund",
                "source_refund",
                "transfer"
              ],
              "x-resourceId": "transfer_reversal"
            },
            "type": "array"
          },
          "has_more": {
            "description": "True if this list has another page of items after this one that can be fetched.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
            "enum": [
              "list"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL where this list can be accessed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "has_more",
          "object",
          "url"
        ],
        "title": "TransferReversalList",
        "type": "object",
        "x-expandableFields": [
          "data"
        ]
      },
      "reversed": {
        "description": "Whether the transfer has been fully reversed. If the transfer is only partially reversed, this attribute will still be false.",
        "type": "boolean"
      },
      "source_transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "To charge a credit or a debit card, you create a `Charge` object. You can\nretrieve and refund individual charges as well as list all charges. Charges\nare identified by a unique, random ID.\n\nRelated guide: [Accept a payment with the Charges API](https://stripe.com/docs/payments/accept-a-payment-charges).",
          "properties": {
            "amount": {
              "description": "Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
              "type": "integer"
            },
            "amount_captured": {
              "description": "Amount in %s captured (can be less than the amount attribute on the charge if a partial capture was made).",
              "type": "integer"
            },
            "amount_refunded": {
              "description": "Amount in %s refunded (can be less than the amount attribute on the charge if a partial refund was issued).",
              "type": "integer"
            },
            "application": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application"
                }
              ],
              "description": "ID of the Connect application that created the charge.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application"
                  }
                ]
              }
            },
            "application_fee": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/application_fee"
                }
              ],
              "description": "The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application_fee"
                  }
                ]
              }
            },
            "application_fee_amount": {
              "description": "The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
              "nullable": true,
              "type": "integer"
            },
            "balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "billing_details": {
              "$ref": "#/components/schemas/billing_details"
            },
            "calculated_statement_descriptor": {
              "description": "The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "captured": {
              "description": "If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.",
              "type": "boolean"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "customer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ],
              "description": "ID of the customer this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/customer"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_customer"
                  }
                ]
              }
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 40000,
              "nullable": true,
              "type": "string"
            },
            "disputed": {
              "description": "Whether the charge has been disputed.",
              "type": "boolean"
            },
            "failure_balance_transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ],
              "description": "ID of the balance transaction that describes the reversal of the balance on your account due to payment failure.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/balance_transaction"
                  }
                ]
              }
            },
            "failure_code": {
              "description": "Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "failure_message": {
              "description": "Message to user further explaining reason for charge failure if available.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "fraud_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_fraud_details"
                }
              ],
              "description": "Information on fraud assessments for the charge.",
              "nullable": true
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ],
              "description": "ID of the invoice this charge is for if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/invoice"
                  }
                ]
              }
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "metadata": {
              "additionalProperties": {
                "maxLength": 500,
                "type": "string"
              },
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
              "type": "object"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "charge"
              ],
              "type": "string"
            },
            "on_behalf_of": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/account"
                }
              ],
              "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account"
                  }
                ]
              }
            },
            "outcome": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_outcome"
                }
              ],
              "description": "Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details.",
              "nullable": true
            },
            "paid": {
              "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
              "type": "boolean"
            },
            "payment_intent": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ],
              "description": "ID of the PaymentIntent associated with this charge, if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/payment_intent"
                  }
                ]
              }
            },
            "payment_method": {
              "description": "ID of the payment method used in this charge.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "payment_method_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/payment_method_details"
                }
              ],
              "description": "Details about the payment method at the time of the transaction.",
              "nullable": true
            },
            "radar_options": {
              "$ref": "#/components/schemas/radar_radar_options"
            },
            "receipt_email": {
              "description": "This is the email address that the receipt for this charge was sent to.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_number": {
              "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "receipt_url": {
              "description": "This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "refunded": {
              "description": "Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.",
              "type": "boolean"
            },
            "refunds": {
              "description": "A list of refunds that have been applied to the charge.",
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/refund"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "RefundList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "review": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/review"
                }
              ],
              "description": "ID of the review associated with this charge if one exists.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/review"
                  }
                ]
              }
            },
            "shipping": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/shipping"
                }
              ],
              "description": "Shipping information for the charge.",
              "nullable": true
            },
            "source_transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true,
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "statement_descriptor": {
              "description": "For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customersâ€™ statements. Must contain at least one letter, maximum 22 characters.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "statement_descriptor_suffix": {
              "description": "Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor thatâ€™s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "The status of the payment is either `succeeded`, `pending`, or `failed`.",
              "enum": [
                "failed",
                "pending",
                "succeeded"
              ],
              "type": "string"
            },
            "transfer": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ],
              "description": "ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/transfer"
                  }
                ]
              }
            },
            "transfer_data": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/charge_transfer_data"
                }
              ],
              "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
              "nullable": true
            },
            "transfer_group": {
              "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "amount",
            "amount_captured",
            "amount_refunded",
            "billing_details",
            "captured",
            "created",
            "currency",
            "disputed",
            "id",
            "livemode",
            "metadata",
            "object",
            "paid",
            "refunded",
            "refunds",
            "status"
          ],
          "title": "Charge",
          "type": "object",
          "x-expandableFields": [
            "application",
            "application_fee",
            "balance_transaction",
            "billing_details",
            "customer",
            "failure_balance_transaction",
            "fraud_details",
            "invoice",
            "on_behalf_of",
            "outcome",
            "payment_intent",
            "payment_method_details",
            "radar_options",
            "refunds",
            "review",
            "shipping",
            "source_transfer",
            "transfer",
            "transfer_data"
          ],
          "x-resourceId": "charge"
        }
      ],
      "source_type": {
        "description": "The source balance this transfer came from. One of `card`, `fpx`, or `bank_account`.",
        "maxLength": 5000,
        "type": "string"
      },
      "transfer_group": {
        "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      }
    },
    "required": [
      "amount",
      "amount_reversed",
      "created",
      "currency",
      "id",
      "livemode",
      "metadata",
      "object",
      "reversals",
      "reversed"
    ],
    "title": "Transfer",
    "type": "object",
    "x-expandableFields": [
      "balance_transaction",
      "destination",
      "destination_payment",
      "reversals",
      "source_transaction"
    ],
    "x-resourceId": "transfer"
  },
  "credit_reversal": {
    "description": "You can reverse some [ReceivedCredits](https://stripe.com/docs/api#received_credits) depending on their network and source flow. Reversing a ReceivedCredit leads to the creation of a new object known as a CreditReversal.",
    "properties": {
      "amount": {
        "description": "Amount (in cents) transferred.",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "financial_account": {
        "description": "The FinancialAccount to reverse funds from.",
        "maxLength": 5000,
        "type": "string"
      },
      "hosted_regulatory_receipt_url": {
        "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "network": {
        "description": "The rails used to reverse the funds.",
        "enum": [
          "ach",
          "stripe"
        ],
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "treasury.credit_reversal"
        ],
        "type": "string"
      },
      "received_credit": {
        "description": "The ReceivedCredit being reversed.",
        "maxLength": 5000,
        "type": "string"
      },
      "status": {
        "description": "Status of the CreditReversal",
        "enum": [
          "canceled",
          "posted",
          "processing"
        ],
        "type": "string"
      },
      "status_transitions": {
        "description": "",
        "properties": {
          "posted_at": {
            "description": "Timestamp describing when the CreditReversal changed status to `posted`",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "TreasuryReceivedCreditsResourceStatusTransitions",
        "type": "object",
        "x-expandableFields": []
      },
      "transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Transactions represent changes to a [FinancialAccount's](https://stripe.com/docs/api#financial_accounts) balance.",
          "properties": {
            "amount": {
              "description": "Amount (in cents) transferred.",
              "type": "integer"
            },
            "balance_impact": {
              "$ref": "#/components/schemas/treasury_transactions_resource_balance_impact"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "type": "string"
            },
            "entries": {
              "description": "A list of TransactionEntries that are part of this Transaction. This cannot be expanded in any list endpoints.",
              "nullable": true,
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/treasury.transaction_entry"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/treasury/transaction_entries",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryTransactionsResourceTransactionEntryList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "financial_account": {
              "description": "The FinancialAccount associated with this object.",
              "maxLength": 5000,
              "type": "string"
            },
            "flow": {
              "description": "ID of the flow that created the Transaction.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "flow_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/treasury_transactions_resource_flow_details"
                }
              ],
              "description": "Details of the flow that created the Transaction.",
              "nullable": true
            },
            "flow_type": {
              "description": "Type of the flow that created the Transaction.",
              "enum": [
                "credit_reversal",
                "debit_reversal",
                "inbound_transfer",
                "issuing_authorization",
                "other",
                "outbound_payment",
                "outbound_transfer",
                "received_credit",
                "received_debit"
              ],
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "treasury.transaction"
              ],
              "type": "string"
            },
            "status": {
              "description": "Status of the Transaction.",
              "enum": [
                "open",
                "posted",
                "void"
              ],
              "type": "string"
            },
            "status_transitions": {
              "$ref": "#/components/schemas/treasury_transactions_resource_abstract_transaction_resource_status_transitions"
            }
          },
          "required": [
            "amount",
            "balance_impact",
            "created",
            "currency",
            "description",
            "financial_account",
            "flow_type",
            "id",
            "livemode",
            "object",
            "status",
            "status_transitions"
          ],
          "title": "TreasuryTransactionsResourceTransaction",
          "type": "object",
          "x-expandableFields": [
            "balance_impact",
            "entries",
            "flow_details",
            "status_transitions"
          ],
          "x-resourceId": "treasury.transaction"
        }
      ]
    },
    "required": [
      "amount",
      "currency",
      "financial_account",
      "id",
      "livemode",
      "metadata",
      "network",
      "object",
      "received_credit",
      "status",
      "status_transitions"
    ],
    "title": "TreasuryReceivedCreditsResourceCreditReversal",
    "type": "object",
    "x-expandableFields": [
      "status_transitions",
      "transaction"
    ],
    "x-resourceId": "treasury.credit_reversal"
  },
  "debit_reversal": {
    "description": "You can reverse some [ReceivedDebits](https://stripe.com/docs/api#received_debits) depending on their network and source flow. Reversing a ReceivedDebit leads to the creation of a new object known as a DebitReversal.",
    "properties": {
      "amount": {
        "description": "Amount (in cents) transferred.",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "financial_account": {
        "description": "The FinancialAccount to reverse funds from.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "hosted_regulatory_receipt_url": {
        "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "linked_flows": [
        {
          "description": "",
          "properties": {
            "issuing_dispute": {
              "description": "Set if there is an Issuing dispute associated with the DebitReversal.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            }
          },
          "title": "TreasuryReceivedDebitsResourceDebitReversalLinkedFlows",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "network": {
        "description": "The rails used to reverse the funds.",
        "enum": [
          "ach",
          "card"
        ],
        "type": "string"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "treasury.debit_reversal"
        ],
        "type": "string"
      },
      "received_debit": {
        "description": "The ReceivedDebit being reversed.",
        "maxLength": 5000,
        "type": "string"
      },
      "status": {
        "description": "Status of the DebitReversal",
        "enum": [
          "failed",
          "processing",
          "succeeded"
        ],
        "type": "string"
      },
      "status_transitions": {
        "description": "",
        "properties": {
          "completed_at": {
            "description": "Timestamp describing when the DebitReversal changed status to `completed`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "TreasuryReceivedDebitsResourceStatusTransitions",
        "type": "object",
        "x-expandableFields": []
      },
      "transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Transactions represent changes to a [FinancialAccount's](https://stripe.com/docs/api#financial_accounts) balance.",
          "properties": {
            "amount": {
              "description": "Amount (in cents) transferred.",
              "type": "integer"
            },
            "balance_impact": {
              "$ref": "#/components/schemas/treasury_transactions_resource_balance_impact"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "type": "string"
            },
            "entries": {
              "description": "A list of TransactionEntries that are part of this Transaction. This cannot be expanded in any list endpoints.",
              "nullable": true,
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/treasury.transaction_entry"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/treasury/transaction_entries",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryTransactionsResourceTransactionEntryList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "financial_account": {
              "description": "The FinancialAccount associated with this object.",
              "maxLength": 5000,
              "type": "string"
            },
            "flow": {
              "description": "ID of the flow that created the Transaction.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "flow_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/treasury_transactions_resource_flow_details"
                }
              ],
              "description": "Details of the flow that created the Transaction.",
              "nullable": true
            },
            "flow_type": {
              "description": "Type of the flow that created the Transaction.",
              "enum": [
                "credit_reversal",
                "debit_reversal",
                "inbound_transfer",
                "issuing_authorization",
                "other",
                "outbound_payment",
                "outbound_transfer",
                "received_credit",
                "received_debit"
              ],
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "treasury.transaction"
              ],
              "type": "string"
            },
            "status": {
              "description": "Status of the Transaction.",
              "enum": [
                "open",
                "posted",
                "void"
              ],
              "type": "string"
            },
            "status_transitions": {
              "$ref": "#/components/schemas/treasury_transactions_resource_abstract_transaction_resource_status_transitions"
            }
          },
          "required": [
            "amount",
            "balance_impact",
            "created",
            "currency",
            "description",
            "financial_account",
            "flow_type",
            "id",
            "livemode",
            "object",
            "status",
            "status_transitions"
          ],
          "title": "TreasuryTransactionsResourceTransaction",
          "type": "object",
          "x-expandableFields": [
            "balance_impact",
            "entries",
            "flow_details",
            "status_transitions"
          ],
          "x-resourceId": "treasury.transaction"
        }
      ]
    },
    "required": [
      "amount",
      "currency",
      "id",
      "livemode",
      "metadata",
      "network",
      "object",
      "received_debit",
      "status",
      "status_transitions"
    ],
    "title": "TreasuryReceivedDebitsResourceDebitReversal",
    "type": "object",
    "x-expandableFields": [
      "linked_flows",
      "status_transitions",
      "transaction"
    ],
    "x-resourceId": "treasury.debit_reversal"
  },
  "financial_account": {
    "description": "Stripe Treasury provides users with a container for money called a FinancialAccount that is separate from their Payments balance.\nFinancialAccounts serve as the source and destination of Treasuryâ€™s money movement APIs.",
    "properties": {
      "active_features": {
        "description": "The array of paths to active Features in the Features hash.",
        "items": {
          "enum": [
            "card_issuing",
            "deposit_insurance",
            "financial_addresses.aba",
            "inbound_transfers.ach",
            "intra_stripe_flows",
            "outbound_payments.ach",
            "outbound_payments.us_domestic_wire",
            "outbound_transfers.ach",
            "outbound_transfers.us_domestic_wire",
            "remote_deposit_capture"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "type": "array"
      },
      "balance": {
        "description": "Balance information for the FinancialAccount",
        "properties": {
          "cash": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "Funds the user can spend right now.",
            "type": "object"
          },
          "inbound_pending": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "Funds not spendable yet, but will become available at a later time.",
            "type": "object"
          },
          "outbound_pending": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "Funds in the account, but not spendable because they are being held for pending outbound flows.",
            "type": "object"
          }
        },
        "required": [
          "cash",
          "inbound_pending",
          "outbound_pending"
        ],
        "title": "TreasuryFinancialAccountsResourceBalance",
        "type": "object",
        "x-expandableFields": []
      },
      "country": {
        "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
        "maxLength": 5000,
        "type": "string"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "features": {
        "description": "Encodes whether a FinancialAccount has access to a particular Feature, with a `status` enum and associated `status_details`.\nStripe or the platform can control Features via the requested field.",
        "properties": {
          "card_issuing": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_toggle_settings"
          },
          "deposit_insurance": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_toggle_settings"
          },
          "financial_addresses": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_financial_addresses_features"
          },
          "inbound_transfers": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_inbound_transfers"
          },
          "intra_stripe_flows": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_toggle_settings"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "treasury.financial_account_features"
            ],
            "type": "string"
          },
          "outbound_payments": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_outbound_payments"
          },
          "outbound_transfers": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_outbound_transfers"
          }
        },
        "required": [
          "object"
        ],
        "title": "TreasuryFinancialAccountsResourceFinancialAccountFeatures",
        "type": "object",
        "x-expandableFields": [
          "card_issuing",
          "deposit_insurance",
          "financial_addresses",
          "inbound_transfers",
          "intra_stripe_flows",
          "outbound_payments",
          "outbound_transfers"
        ],
        "x-resourceId": "treasury.financial_account_features"
      },
      "financial_addresses": {
        "description": "The set of credentials that resolve to a FinancialAccount.",
        "items": {
          "description": "FinancialAddresses contain identifying information that resolves to a FinancialAccount.",
          "properties": {
            "aba": {
              "$ref": "#/components/schemas/treasury_financial_accounts_resource_aba_record"
            },
            "supported_networks": {
              "description": "The list of networks that the address supports",
              "items": {
                "enum": [
                  "ach",
                  "us_domestic_wire"
                ],
                "type": "string",
                "x-stripeBypassValidation": true
              },
              "type": "array"
            },
            "type": {
              "description": "The type of financial address",
              "enum": [
                "aba"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            }
          },
          "required": [
            "type"
          ],
          "title": "TreasuryFinancialAccountsResourceFinancialAddress",
          "type": "object",
          "x-expandableFields": [
            "aba"
          ]
        },
        "type": "array"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "nullable": true,
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "treasury.financial_account"
        ],
        "type": "string"
      },
      "pending_features": {
        "description": "The array of paths to pending Features in the Features hash.",
        "items": {
          "enum": [
            "card_issuing",
            "deposit_insurance",
            "financial_addresses.aba",
            "inbound_transfers.ach",
            "intra_stripe_flows",
            "outbound_payments.ach",
            "outbound_payments.us_domestic_wire",
            "outbound_transfers.ach",
            "outbound_transfers.us_domestic_wire",
            "remote_deposit_capture"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "type": "array"
      },
      "platform_restrictions": [
        {
          "description": "Restrictions that a Connect Platform has placed on this FinancialAccount.",
          "properties": {
            "inbound_flows": {
              "description": "Restricts all inbound money movement.",
              "enum": [
                "restricted",
                "unrestricted"
              ],
              "nullable": true,
              "type": "string"
            },
            "outbound_flows": {
              "description": "Restricts all outbound money movement.",
              "enum": [
                "restricted",
                "unrestricted"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          "title": "TreasuryFinancialAccountsResourcePlatformRestrictions",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "restricted_features": {
        "description": "The array of paths to restricted Features in the Features hash.",
        "items": {
          "enum": [
            "card_issuing",
            "deposit_insurance",
            "financial_addresses.aba",
            "inbound_transfers.ach",
            "intra_stripe_flows",
            "outbound_payments.ach",
            "outbound_payments.us_domestic_wire",
            "outbound_transfers.ach",
            "outbound_transfers.us_domestic_wire",
            "remote_deposit_capture"
          ],
          "type": "string",
          "x-stripeBypassValidation": true
        },
        "type": "array"
      },
      "status": {
        "description": "The enum specifying what state the account is in.",
        "enum": [
          "closed",
          "open"
        ],
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "status_details": {
        "description": "",
        "properties": {
          "closed": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/treasury_financial_accounts_resource_closed_status_details"
              }
            ],
            "description": "Details related to the closure of this FinancialAccount",
            "nullable": true
          }
        },
        "title": "TreasuryFinancialAccountsResourceStatusDetails",
        "type": "object",
        "x-expandableFields": [
          "closed"
        ]
      },
      "supported_currencies": {
        "description": "The currencies the FinancialAccount can hold a balance in. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.",
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    "required": [
      "active_features",
      "balance",
      "country",
      "created",
      "financial_addresses",
      "id",
      "livemode",
      "object",
      "pending_features",
      "restricted_features",
      "status",
      "status_details",
      "supported_currencies"
    ],
    "title": "TreasuryFinancialAccountsResourceFinancialAccount",
    "type": "object",
    "x-expandableFields": [
      "balance",
      "features",
      "financial_addresses",
      "platform_restrictions",
      "status_details"
    ],
    "x-resourceId": "treasury.financial_account"
  },
  "inbound_transfer": {
    "description": "Use [InboundTransfers](https://stripe.com/docs/treasury/moving-money/financial-accounts/into/inbound-transfers) to add funds to your [FinancialAccount](https://stripe.com/docs/api#financial_accounts) via a PaymentMethod that is owned by you. The funds will be transferred via an ACH debit.",
    "properties": {
      "amount": {
        "description": "Amount (in cents) transferred.",
        "type": "integer"
      },
      "cancelable": {
        "description": "Returns `true` if the InboundTransfer is able to be canceled.",
        "type": "boolean"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "failure_details": [
        {
          "description": "",
          "properties": {
            "code": {
              "description": "Reason for the failure.",
              "enum": [
                "account_closed",
                "account_frozen",
                "bank_account_restricted",
                "bank_ownership_changed",
                "debit_not_authorized",
                "incorrect_account_holder_address",
                "incorrect_account_holder_name",
                "incorrect_account_holder_tax_id",
                "insufficient_funds",
                "invalid_account_number",
                "invalid_currency",
                "no_account",
                "other"
              ],
              "type": "string"
            }
          },
          "required": [
            "code"
          ],
          "title": "TreasuryInboundTransfersResourceFailureDetails",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "financial_account": {
        "description": "The FinancialAccount that received the funds.",
        "maxLength": 5000,
        "type": "string"
      },
      "hosted_regulatory_receipt_url": {
        "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "linked_flows": {
        "description": "",
        "properties": {
          "received_debit": {
            "description": "If funds for this flow were returned after the flow went to the `succeeded` state, this field contains a reference to the ReceivedDebit return.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "TreasuryInboundTransfersResourceInboundTransferResourceLinkedFlows",
        "type": "object",
        "x-expandableFields": []
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "treasury.inbound_transfer"
        ],
        "type": "string"
      },
      "origin_payment_method": {
        "description": "The origin payment method to be debited for an InboundTransfer.",
        "maxLength": 5000,
        "type": "string"
      },
      "origin_payment_method_details": [
        {
          "description": "",
          "properties": {
            "billing_details": {
              "$ref": "#/components/schemas/treasury_shared_resource_billing_details"
            },
            "type": {
              "description": "The type of the payment method used in the InboundTransfer.",
              "enum": [
                "us_bank_account"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "us_bank_account": {
              "$ref": "#/components/schemas/inbound_transfers_payment_method_details_us_bank_account"
            }
          },
          "required": [
            "billing_details",
            "type"
          ],
          "title": "InboundTransfers",
          "type": "object",
          "x-expandableFields": [
            "billing_details",
            "us_bank_account"
          ]
        }
      ],
      "returned": {
        "description": "Returns `true` if the funds for an InboundTransfer were returned after the InboundTransfer went to the `succeeded` state.",
        "nullable": true,
        "type": "boolean"
      },
      "statement_descriptor": {
        "description": "Statement descriptor shown when funds are debited from the source. Not all payment networks support `statement_descriptor`.",
        "maxLength": 5000,
        "type": "string"
      },
      "status": {
        "description": "Status of the InboundTransfer: `processing`, `succeeded`, `failed`, and `canceled`. An InboundTransfer is `processing` if it is created and pending. The status changes to `succeeded` once the funds have been \"confirmed\" and a `transaction` is created and posted. The status changes to `failed` if the transfer fails.",
        "enum": [
          "canceled",
          "failed",
          "processing",
          "succeeded"
        ],
        "type": "string"
      },
      "status_transitions": {
        "description": "",
        "properties": {
          "canceled_at": {
            "description": "Timestamp describing when an InboundTransfer changed status to `canceled`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "failed_at": {
            "description": "Timestamp describing when an InboundTransfer changed status to `failed`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "succeeded_at": {
            "description": "Timestamp describing when an InboundTransfer changed status to `succeeded`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "TreasuryInboundTransfersResourceInboundTransferResourceStatusTransitions",
        "type": "object",
        "x-expandableFields": []
      },
      "transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Transactions represent changes to a [FinancialAccount's](https://stripe.com/docs/api#financial_accounts) balance.",
          "properties": {
            "amount": {
              "description": "Amount (in cents) transferred.",
              "type": "integer"
            },
            "balance_impact": {
              "$ref": "#/components/schemas/treasury_transactions_resource_balance_impact"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "type": "string"
            },
            "entries": {
              "description": "A list of TransactionEntries that are part of this Transaction. This cannot be expanded in any list endpoints.",
              "nullable": true,
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/treasury.transaction_entry"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/treasury/transaction_entries",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryTransactionsResourceTransactionEntryList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "financial_account": {
              "description": "The FinancialAccount associated with this object.",
              "maxLength": 5000,
              "type": "string"
            },
            "flow": {
              "description": "ID of the flow that created the Transaction.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "flow_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/treasury_transactions_resource_flow_details"
                }
              ],
              "description": "Details of the flow that created the Transaction.",
              "nullable": true
            },
            "flow_type": {
              "description": "Type of the flow that created the Transaction.",
              "enum": [
                "credit_reversal",
                "debit_reversal",
                "inbound_transfer",
                "issuing_authorization",
                "other",
                "outbound_payment",
                "outbound_transfer",
                "received_credit",
                "received_debit"
              ],
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "treasury.transaction"
              ],
              "type": "string"
            },
            "status": {
              "description": "Status of the Transaction.",
              "enum": [
                "open",
                "posted",
                "void"
              ],
              "type": "string"
            },
            "status_transitions": {
              "$ref": "#/components/schemas/treasury_transactions_resource_abstract_transaction_resource_status_transitions"
            }
          },
          "required": [
            "amount",
            "balance_impact",
            "created",
            "currency",
            "description",
            "financial_account",
            "flow_type",
            "id",
            "livemode",
            "object",
            "status",
            "status_transitions"
          ],
          "title": "TreasuryTransactionsResourceTransaction",
          "type": "object",
          "x-expandableFields": [
            "balance_impact",
            "entries",
            "flow_details",
            "status_transitions"
          ],
          "x-resourceId": "treasury.transaction"
        }
      ]
    },
    "required": [
      "amount",
      "cancelable",
      "created",
      "currency",
      "financial_account",
      "id",
      "linked_flows",
      "livemode",
      "metadata",
      "object",
      "origin_payment_method",
      "statement_descriptor",
      "status",
      "status_transitions"
    ],
    "title": "TreasuryInboundTransfersResourceInboundTransfer",
    "type": "object",
    "x-expandableFields": [
      "failure_details",
      "linked_flows",
      "origin_payment_method_details",
      "status_transitions",
      "transaction"
    ],
    "x-resourceId": "treasury.inbound_transfer"
  },
  "outbound_payment": {
    "description": "Use OutboundPayments to send funds to another party's external bank account or [FinancialAccount](https://stripe.com/docs/api#financial_accounts). To send money to an account belonging to the same user, use an [OutboundTransfer](https://stripe.com/docs/api#outbound_transfers).\n\nSimulate OutboundPayment state changes with the `/v1/test_helpers/treasury/outbound_payments` endpoints. These methods can only be called on test mode objects.",
    "properties": {
      "amount": {
        "description": "Amount (in cents) transferred.",
        "type": "integer"
      },
      "cancelable": {
        "description": "Returns `true` if the object can be canceled, and `false` otherwise.",
        "type": "boolean"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "customer": {
        "description": "ID of the [customer](https://stripe.com/docs/api/customers) to whom an OutboundPayment is sent.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "destination_payment_method": {
        "description": "The PaymentMethod via which an OutboundPayment is sent. This field can be empty if the OutboundPayment was created using `destination_payment_method_data`.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "destination_payment_method_details": [
        {
          "description": "",
          "properties": {
            "billing_details": {
              "$ref": "#/components/schemas/treasury_shared_resource_billing_details"
            },
            "financial_account": {
              "$ref": "#/components/schemas/outbound_payments_payment_method_details_financial_account"
            },
            "type": {
              "description": "The type of the payment method used in the OutboundPayment.",
              "enum": [
                "financial_account",
                "us_bank_account"
              ],
              "type": "string"
            },
            "us_bank_account": {
              "$ref": "#/components/schemas/outbound_payments_payment_method_details_us_bank_account"
            }
          },
          "required": [
            "billing_details",
            "type"
          ],
          "title": "OutboundPaymentsPaymentMethodDetails",
          "type": "object",
          "x-expandableFields": [
            "billing_details",
            "financial_account",
            "us_bank_account"
          ]
        }
      ],
      "end_user_details": [
        {
          "description": "",
          "properties": {
            "ip_address": {
              "description": "IP address of the user initiating the OutboundPayment. Set if `present` is set to `true`. IP address collection is required for risk and compliance reasons. This will be used to help determine if the OutboundPayment is authorized or should be blocked.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "present": {
              "description": "`true`` if the OutboundPayment creation request is being made on behalf of an end user by a platform. Otherwise, `false`.",
              "type": "boolean"
            }
          },
          "required": [
            "present"
          ],
          "title": "TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "expected_arrival_date": {
        "description": "The date when funds are expected to arrive in the destination account.",
        "format": "unix-time",
        "type": "integer"
      },
      "financial_account": {
        "description": "The FinancialAccount that funds were pulled from.",
        "maxLength": 5000,
        "type": "string"
      },
      "hosted_regulatory_receipt_url": {
        "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "treasury.outbound_payment"
        ],
        "type": "string"
      },
      "returned_details": [
        {
          "description": "",
          "properties": {
            "code": {
              "description": "Reason for the return.",
              "enum": [
                "account_closed",
                "account_frozen",
                "bank_account_restricted",
                "bank_ownership_changed",
                "declined",
                "incorrect_account_holder_name",
                "invalid_account_number",
                "invalid_currency",
                "no_account",
                "other"
              ],
              "type": "string"
            },
            "transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/treasury.transaction"
                }
              ],
              "description": "The Transaction associated with this object.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/treasury.transaction"
                  }
                ]
              }
            }
          },
          "required": [
            "code",
            "transaction"
          ],
          "title": "TreasuryOutboundPaymentsResourceReturnedStatus",
          "type": "object",
          "x-expandableFields": [
            "transaction"
          ]
        }
      ],
      "statement_descriptor": {
        "description": "The description that appears on the receiving end for an OutboundPayment (for example, bank statement for external bank transfer).",
        "maxLength": 5000,
        "type": "string"
      },
      "status": {
        "description": "Current status of the OutboundPayment: `processing`, `failed`, `posted`, `returned`, `canceled`. An OutboundPayment is `processing` if it has been created and is pending. The status changes to `posted` once the OutboundPayment has been \"confirmed\" and funds have left the account, or to `failed` or `canceled`. If an OutboundPayment fails to arrive at its destination, its status will change to `returned`.",
        "enum": [
          "canceled",
          "failed",
          "posted",
          "processing",
          "returned"
        ],
        "type": "string"
      },
      "status_transitions": {
        "description": "",
        "properties": {
          "canceled_at": {
            "description": "Timestamp describing when an OutboundPayment changed status to `canceled`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "failed_at": {
            "description": "Timestamp describing when an OutboundPayment changed status to `failed`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "posted_at": {
            "description": "Timestamp describing when an OutboundPayment changed status to `posted`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "returned_at": {
            "description": "Timestamp describing when an OutboundPayment changed status to `returned`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "TreasuryOutboundPaymentsResourceOutboundPaymentResourceStatusTransitions",
        "type": "object",
        "x-expandableFields": []
      },
      "transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Transactions represent changes to a [FinancialAccount's](https://stripe.com/docs/api#financial_accounts) balance.",
          "properties": {
            "amount": {
              "description": "Amount (in cents) transferred.",
              "type": "integer"
            },
            "balance_impact": {
              "$ref": "#/components/schemas/treasury_transactions_resource_balance_impact"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "type": "string"
            },
            "entries": {
              "description": "A list of TransactionEntries that are part of this Transaction. This cannot be expanded in any list endpoints.",
              "nullable": true,
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/treasury.transaction_entry"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/treasury/transaction_entries",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryTransactionsResourceTransactionEntryList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "financial_account": {
              "description": "The FinancialAccount associated with this object.",
              "maxLength": 5000,
              "type": "string"
            },
            "flow": {
              "description": "ID of the flow that created the Transaction.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "flow_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/treasury_transactions_resource_flow_details"
                }
              ],
              "description": "Details of the flow that created the Transaction.",
              "nullable": true
            },
            "flow_type": {
              "description": "Type of the flow that created the Transaction.",
              "enum": [
                "credit_reversal",
                "debit_reversal",
                "inbound_transfer",
                "issuing_authorization",
                "other",
                "outbound_payment",
                "outbound_transfer",
                "received_credit",
                "received_debit"
              ],
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "treasury.transaction"
              ],
              "type": "string"
            },
            "status": {
              "description": "Status of the Transaction.",
              "enum": [
                "open",
                "posted",
                "void"
              ],
              "type": "string"
            },
            "status_transitions": {
              "$ref": "#/components/schemas/treasury_transactions_resource_abstract_transaction_resource_status_transitions"
            }
          },
          "required": [
            "amount",
            "balance_impact",
            "created",
            "currency",
            "description",
            "financial_account",
            "flow_type",
            "id",
            "livemode",
            "object",
            "status",
            "status_transitions"
          ],
          "title": "TreasuryTransactionsResourceTransaction",
          "type": "object",
          "x-expandableFields": [
            "balance_impact",
            "entries",
            "flow_details",
            "status_transitions"
          ],
          "x-resourceId": "treasury.transaction"
        }
      ]
    },
    "required": [
      "amount",
      "cancelable",
      "created",
      "currency",
      "expected_arrival_date",
      "financial_account",
      "id",
      "livemode",
      "metadata",
      "object",
      "statement_descriptor",
      "status",
      "status_transitions",
      "transaction"
    ],
    "title": "TreasuryOutboundPaymentsResourceOutboundPayment",
    "type": "object",
    "x-expandableFields": [
      "destination_payment_method_details",
      "end_user_details",
      "returned_details",
      "status_transitions",
      "transaction"
    ],
    "x-resourceId": "treasury.outbound_payment"
  },
  "outbound_transfer": {
    "description": "Use OutboundTransfers to transfer funds from a [FinancialAccount](https://stripe.com/docs/api#financial_accounts) to a PaymentMethod belonging to the same entity. To send funds to a different party, use [OutboundPayments](https://stripe.com/docs/api#outbound_payments) instead. You can send funds over ACH rails or through a domestic wire transfer to a user's own external bank account.\n\nSimulate OutboundTransfer state changes with the `/v1/test_helpers/treasury/outbound_transfers` endpoints. These methods can only be called on test mode objects.",
    "properties": {
      "amount": {
        "description": "Amount (in cents) transferred.",
        "type": "integer"
      },
      "cancelable": {
        "description": "Returns `true` if the object can be canceled, and `false` otherwise.",
        "type": "boolean"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "destination_payment_method": {
        "description": "The PaymentMethod used as the payment instrument for an OutboundTransfer.",
        "maxLength": 5000,
        "type": "string"
      },
      "destination_payment_method_details": {
        "description": "",
        "properties": {
          "billing_details": {
            "$ref": "#/components/schemas/treasury_shared_resource_billing_details"
          },
          "type": {
            "description": "The type of the payment method used in the OutboundTransfer.",
            "enum": [
              "us_bank_account"
            ],
            "type": "string"
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/outbound_transfers_payment_method_details_us_bank_account"
          }
        },
        "required": [
          "billing_details",
          "type"
        ],
        "title": "OutboundTransfersPaymentMethodDetails",
        "type": "object",
        "x-expandableFields": [
          "billing_details",
          "us_bank_account"
        ]
      },
      "expected_arrival_date": {
        "description": "The date when funds are expected to arrive in the destination account.",
        "format": "unix-time",
        "type": "integer"
      },
      "financial_account": {
        "description": "The FinancialAccount that funds were pulled from.",
        "maxLength": 5000,
        "type": "string"
      },
      "hosted_regulatory_receipt_url": {
        "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "metadata": {
        "additionalProperties": {
          "maxLength": 500,
          "type": "string"
        },
        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
        "type": "object"
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "treasury.outbound_transfer"
        ],
        "type": "string"
      },
      "returned_details": [
        {
          "description": "",
          "properties": {
            "code": {
              "description": "Reason for the return.",
              "enum": [
                "account_closed",
                "account_frozen",
                "bank_account_restricted",
                "bank_ownership_changed",
                "declined",
                "incorrect_account_holder_name",
                "invalid_account_number",
                "invalid_currency",
                "no_account",
                "other"
              ],
              "type": "string"
            },
            "transaction": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/treasury.transaction"
                }
              ],
              "description": "The Transaction associated with this object.",
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/treasury.transaction"
                  }
                ]
              }
            }
          },
          "required": [
            "code",
            "transaction"
          ],
          "title": "TreasuryOutboundTransfersResourceReturnedDetails",
          "type": "object",
          "x-expandableFields": [
            "transaction"
          ]
        }
      ],
      "statement_descriptor": {
        "description": "Information about the OutboundTransfer to be sent to the recipient account.",
        "maxLength": 5000,
        "type": "string"
      },
      "status": {
        "description": "Current status of the OutboundTransfer: `processing`, `failed`, `canceled`, `posted`, `returned`. An OutboundTransfer is `processing` if it has been created and is pending. The status changes to `posted` once the OutboundTransfer has been \"confirmed\" and funds have left the account, or to `failed` or `canceled`. If an OutboundTransfer fails to arrive at its destination, its status will change to `returned`.",
        "enum": [
          "canceled",
          "failed",
          "posted",
          "processing",
          "returned"
        ],
        "type": "string"
      },
      "status_transitions": {
        "description": "",
        "properties": {
          "canceled_at": {
            "description": "Timestamp describing when an OutboundTransfer changed status to `canceled`",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "failed_at": {
            "description": "Timestamp describing when an OutboundTransfer changed status to `failed`",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "posted_at": {
            "description": "Timestamp describing when an OutboundTransfer changed status to `posted`",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "returned_at": {
            "description": "Timestamp describing when an OutboundTransfer changed status to `returned`",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "TreasuryOutboundTransfersResourceStatusTransitions",
        "type": "object",
        "x-expandableFields": []
      },
      "transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Transactions represent changes to a [FinancialAccount's](https://stripe.com/docs/api#financial_accounts) balance.",
          "properties": {
            "amount": {
              "description": "Amount (in cents) transferred.",
              "type": "integer"
            },
            "balance_impact": {
              "$ref": "#/components/schemas/treasury_transactions_resource_balance_impact"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "type": "string"
            },
            "entries": {
              "description": "A list of TransactionEntries that are part of this Transaction. This cannot be expanded in any list endpoints.",
              "nullable": true,
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/treasury.transaction_entry"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/treasury/transaction_entries",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryTransactionsResourceTransactionEntryList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "financial_account": {
              "description": "The FinancialAccount associated with this object.",
              "maxLength": 5000,
              "type": "string"
            },
            "flow": {
              "description": "ID of the flow that created the Transaction.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "flow_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/treasury_transactions_resource_flow_details"
                }
              ],
              "description": "Details of the flow that created the Transaction.",
              "nullable": true
            },
            "flow_type": {
              "description": "Type of the flow that created the Transaction.",
              "enum": [
                "credit_reversal",
                "debit_reversal",
                "inbound_transfer",
                "issuing_authorization",
                "other",
                "outbound_payment",
                "outbound_transfer",
                "received_credit",
                "received_debit"
              ],
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "treasury.transaction"
              ],
              "type": "string"
            },
            "status": {
              "description": "Status of the Transaction.",
              "enum": [
                "open",
                "posted",
                "void"
              ],
              "type": "string"
            },
            "status_transitions": {
              "$ref": "#/components/schemas/treasury_transactions_resource_abstract_transaction_resource_status_transitions"
            }
          },
          "required": [
            "amount",
            "balance_impact",
            "created",
            "currency",
            "description",
            "financial_account",
            "flow_type",
            "id",
            "livemode",
            "object",
            "status",
            "status_transitions"
          ],
          "title": "TreasuryTransactionsResourceTransaction",
          "type": "object",
          "x-expandableFields": [
            "balance_impact",
            "entries",
            "flow_details",
            "status_transitions"
          ],
          "x-resourceId": "treasury.transaction"
        }
      ]
    },
    "required": [
      "amount",
      "cancelable",
      "created",
      "currency",
      "destination_payment_method",
      "destination_payment_method_details",
      "expected_arrival_date",
      "financial_account",
      "id",
      "livemode",
      "metadata",
      "object",
      "statement_descriptor",
      "status",
      "status_transitions",
      "transaction"
    ],
    "title": "TreasuryOutboundTransfersResourceOutboundTransfer",
    "type": "object",
    "x-expandableFields": [
      "destination_payment_method_details",
      "returned_details",
      "status_transitions",
      "transaction"
    ],
    "x-resourceId": "treasury.outbound_transfer"
  },
  "received_credit": {
    "description": "ReceivedCredits represent funds sent to a [FinancialAccount](https://stripe.com/docs/api#financial_accounts) (for example, via ACH or wire). These money movements are not initiated from the FinancialAccount.",
    "properties": {
      "amount": {
        "description": "Amount (in cents) transferred.",
        "type": "integer"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
        "maxLength": 5000,
        "type": "string"
      },
      "failure_code": {
        "description": "Reason for the failure. A ReceivedCredit might fail because the receiving FinancialAccount is closed or frozen.",
        "enum": [
          "account_closed",
          "account_frozen",
          "other"
        ],
        "nullable": true,
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "financial_account": {
        "description": "The FinancialAccount that received the funds.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "hosted_regulatory_receipt_url": {
        "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "initiating_payment_method_details": {
        "description": "",
        "properties": {
          "balance": {
            "description": "Set when `type` is `balance`.",
            "enum": [
              "payments"
            ],
            "type": "string"
          },
          "billing_details": {
            "$ref": "#/components/schemas/treasury_shared_resource_billing_details"
          },
          "financial_account": {
            "$ref": "#/components/schemas/received_payment_method_details_financial_account"
          },
          "issuing_card": {
            "description": "Set when `type` is `issuing_card`. This is an [Issuing Card](https://stripe.com/docs/api#issuing_cards) ID.",
            "maxLength": 5000,
            "type": "string"
          },
          "type": {
            "description": "Polymorphic type matching the originating money movement's source. This can be an external account, a Stripe balance, or a FinancialAccount.",
            "enum": [
              "balance",
              "financial_account",
              "issuing_card",
              "stripe",
              "us_bank_account"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/treasury_shared_resource_initiating_payment_method_details_us_bank_account"
          }
        },
        "required": [
          "billing_details",
          "type"
        ],
        "title": "TreasurySharedResourceInitiatingPaymentMethodDetailsInitiatingPaymentMethodDetails",
        "type": "object",
        "x-expandableFields": [
          "billing_details",
          "financial_account",
          "us_bank_account"
        ]
      },
      "linked_flows": {
        "description": "",
        "properties": {
          "credit_reversal": {
            "description": "The CreditReversal created as a result of this ReceivedCredit being reversed.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "issuing_authorization": {
            "description": "Set if the ReceivedCredit was created due to an [Issuing Authorization](https://stripe.com/docs/api#issuing_authorizations) object.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "issuing_transaction": {
            "description": "Set if the ReceivedCredit is also viewable as an [Issuing transaction](https://stripe.com/docs/api#issuing_transactions) object.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "source_flow": {
            "description": "ID of the source flow. Set if `network` is `stripe` and the source flow is visible to the user. Examples of source flows include OutboundPayments, payouts, or CreditReversals.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "source_flow_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/treasury_received_credits_resource_source_flows_details"
              }
            ],
            "description": "The expandable object of the source flow.",
            "nullable": true
          },
          "source_flow_type": {
            "description": "The type of flow that originated the ReceivedCredit (for example, `outbound_payment`).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "TreasuryReceivedCreditsResourceLinkedFlows",
        "type": "object",
        "x-expandableFields": [
          "source_flow_details"
        ]
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "network": {
        "description": "The rails used to send the funds.",
        "enum": [
          "ach",
          "card",
          "stripe",
          "us_domestic_wire"
        ],
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "treasury.received_credit"
        ],
        "type": "string"
      },
      "reversal_details": [
        {
          "description": "",
          "properties": {
            "deadline": {
              "description": "Time before which a ReceivedCredit can be reversed.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "restricted_reason": {
              "description": "Set if a ReceivedCredit cannot be reversed.",
              "enum": [
                "already_reversed",
                "deadline_passed",
                "network_restricted",
                "other",
                "source_flow_restricted"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          "title": "TreasuryReceivedCreditsResourceReversalDetails",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "status": {
        "description": "Status of the ReceivedCredit. ReceivedCredits are created either `succeeded` (approved) or `failed` (declined). If a ReceivedCredit is declined, the failure reason can be found in the `failure_code` field.",
        "enum": [
          "failed",
          "succeeded"
        ],
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Transactions represent changes to a [FinancialAccount's](https://stripe.com/docs/api#financial_accounts) balance.",
          "properties": {
            "amount": {
              "description": "Amount (in cents) transferred.",
              "type": "integer"
            },
            "balance_impact": {
              "$ref": "#/components/schemas/treasury_transactions_resource_balance_impact"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "type": "string"
            },
            "entries": {
              "description": "A list of TransactionEntries that are part of this Transaction. This cannot be expanded in any list endpoints.",
              "nullable": true,
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/treasury.transaction_entry"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/treasury/transaction_entries",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryTransactionsResourceTransactionEntryList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "financial_account": {
              "description": "The FinancialAccount associated with this object.",
              "maxLength": 5000,
              "type": "string"
            },
            "flow": {
              "description": "ID of the flow that created the Transaction.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "flow_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/treasury_transactions_resource_flow_details"
                }
              ],
              "description": "Details of the flow that created the Transaction.",
              "nullable": true
            },
            "flow_type": {
              "description": "Type of the flow that created the Transaction.",
              "enum": [
                "credit_reversal",
                "debit_reversal",
                "inbound_transfer",
                "issuing_authorization",
                "other",
                "outbound_payment",
                "outbound_transfer",
                "received_credit",
                "received_debit"
              ],
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "treasury.transaction"
              ],
              "type": "string"
            },
            "status": {
              "description": "Status of the Transaction.",
              "enum": [
                "open",
                "posted",
                "void"
              ],
              "type": "string"
            },
            "status_transitions": {
              "$ref": "#/components/schemas/treasury_transactions_resource_abstract_transaction_resource_status_transitions"
            }
          },
          "required": [
            "amount",
            "balance_impact",
            "created",
            "currency",
            "description",
            "financial_account",
            "flow_type",
            "id",
            "livemode",
            "object",
            "status",
            "status_transitions"
          ],
          "title": "TreasuryTransactionsResourceTransaction",
          "type": "object",
          "x-expandableFields": [
            "balance_impact",
            "entries",
            "flow_details",
            "status_transitions"
          ],
          "x-resourceId": "treasury.transaction"
        }
      ]
    },
    "required": [
      "amount",
      "created",
      "currency",
      "description",
      "id",
      "initiating_payment_method_details",
      "linked_flows",
      "livemode",
      "network",
      "object",
      "status"
    ],
    "title": "TreasuryReceivedCreditsResourceReceivedCredit",
    "type": "object",
    "x-expandableFields": [
      "initiating_payment_method_details",
      "linked_flows",
      "reversal_details",
      "transaction"
    ],
    "x-resourceId": "treasury.received_credit"
  },
  "received_debit": {
    "description": "ReceivedDebits represent funds pulled from a [FinancialAccount](https://stripe.com/docs/api#financial_accounts). These are not initiated from the FinancialAccount.",
    "properties": {
      "amount": {
        "description": "Amount (in cents) transferred.",
        "type": "integer"
      },
      "created": {
        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
        "format": "unix-time",
        "type": "integer"
      },
      "currency": {
        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
        "type": "string"
      },
      "description": {
        "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
        "maxLength": 5000,
        "type": "string"
      },
      "failure_code": {
        "description": "Reason for the failure. A ReceivedDebit might fail because the FinancialAccount doesn't have sufficient funds, is closed, or is frozen.",
        "enum": [
          "account_closed",
          "account_frozen",
          "insufficient_funds",
          "other"
        ],
        "nullable": true,
        "type": "string"
      },
      "financial_account": {
        "description": "The FinancialAccount that funds were pulled from.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "hosted_regulatory_receipt_url": {
        "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
        "maxLength": 5000,
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "Unique identifier for the object.",
        "maxLength": 5000,
        "type": "string"
      },
      "initiating_payment_method_details": {
        "description": "",
        "properties": {
          "balance": {
            "description": "Set when `type` is `balance`.",
            "enum": [
              "payments"
            ],
            "type": "string"
          },
          "billing_details": {
            "$ref": "#/components/schemas/treasury_shared_resource_billing_details"
          },
          "financial_account": {
            "$ref": "#/components/schemas/received_payment_method_details_financial_account"
          },
          "issuing_card": {
            "description": "Set when `type` is `issuing_card`. This is an [Issuing Card](https://stripe.com/docs/api#issuing_cards) ID.",
            "maxLength": 5000,
            "type": "string"
          },
          "type": {
            "description": "Polymorphic type matching the originating money movement's source. This can be an external account, a Stripe balance, or a FinancialAccount.",
            "enum": [
              "balance",
              "financial_account",
              "issuing_card",
              "stripe",
              "us_bank_account"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/treasury_shared_resource_initiating_payment_method_details_us_bank_account"
          }
        },
        "required": [
          "billing_details",
          "type"
        ],
        "title": "TreasurySharedResourceInitiatingPaymentMethodDetailsInitiatingPaymentMethodDetails",
        "type": "object",
        "x-expandableFields": [
          "billing_details",
          "financial_account",
          "us_bank_account"
        ]
      },
      "linked_flows": {
        "description": "",
        "properties": {
          "debit_reversal": {
            "description": "The DebitReversal created as a result of this ReceivedDebit being reversed.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "inbound_transfer": {
            "description": "Set if the ReceivedDebit is associated with an InboundTransfer's return of funds.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "issuing_authorization": {
            "description": "Set if the ReceivedDebit was created due to an [Issuing Authorization](https://stripe.com/docs/api#issuing_authorizations) object.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "issuing_transaction": {
            "description": "Set if the ReceivedDebit is also viewable as an [Issuing Dispute](https://stripe.com/docs/api#issuing_disputes) object.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "TreasuryReceivedDebitsResourceLinkedFlows",
        "type": "object",
        "x-expandableFields": []
      },
      "livemode": {
        "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
        "type": "boolean"
      },
      "network": {
        "description": "The network used for the ReceivedDebit.",
        "enum": [
          "ach",
          "card",
          "stripe"
        ],
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "object": {
        "description": "String representing the object's type. Objects of the same type share the same value.",
        "enum": [
          "treasury.received_debit"
        ],
        "type": "string"
      },
      "reversal_details": [
        {
          "description": "",
          "properties": {
            "deadline": {
              "description": "Time before which a ReceivedDebit can be reversed.",
              "format": "unix-time",
              "nullable": true,
              "type": "integer"
            },
            "restricted_reason": {
              "description": "Set if a ReceivedDebit can't be reversed.",
              "enum": [
                "already_reversed",
                "deadline_passed",
                "network_restricted",
                "other",
                "source_flow_restricted"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          "title": "TreasuryReceivedDebitsResourceReversalDetails",
          "type": "object",
          "x-expandableFields": []
        }
      ],
      "status": {
        "description": "Status of the ReceivedDebit. ReceivedDebits are created with a status of either `succeeded` (approved) or `failed` (declined). The failure reason can be found under the `failure_code`.",
        "enum": [
          "failed",
          "succeeded"
        ],
        "type": "string",
        "x-stripeBypassValidation": true
      },
      "transaction": [
        {
          "maxLength": 5000,
          "type": "string"
        },
        {
          "description": "Transactions represent changes to a [FinancialAccount's](https://stripe.com/docs/api#financial_accounts) balance.",
          "properties": {
            "amount": {
              "description": "Amount (in cents) transferred.",
              "type": "integer"
            },
            "balance_impact": {
              "$ref": "#/components/schemas/treasury_transactions_resource_balance_impact"
            },
            "created": {
              "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
              "format": "unix-time",
              "type": "integer"
            },
            "currency": {
              "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
              "maxLength": 5000,
              "type": "string"
            },
            "entries": {
              "description": "A list of TransactionEntries that are part of this Transaction. This cannot be expanded in any list endpoints.",
              "nullable": true,
              "properties": {
                "data": {
                  "description": "Details about each object.",
                  "items": {
                    "$ref": "#/components/schemas/treasury.transaction_entry"
                  },
                  "type": "array"
                },
                "has_more": {
                  "description": "True if this list has another page of items after this one that can be fetched.",
                  "type": "boolean"
                },
                "object": {
                  "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                  "enum": [
                    "list"
                  ],
                  "type": "string"
                },
                "url": {
                  "description": "The URL where this list can be accessed.",
                  "maxLength": 5000,
                  "pattern": "^/v1/treasury/transaction_entries",
                  "type": "string"
                }
              },
              "required": [
                "data",
                "has_more",
                "object",
                "url"
              ],
              "title": "TreasuryTransactionsResourceTransactionEntryList",
              "type": "object",
              "x-expandableFields": [
                "data"
              ]
            },
            "financial_account": {
              "description": "The FinancialAccount associated with this object.",
              "maxLength": 5000,
              "type": "string"
            },
            "flow": {
              "description": "ID of the flow that created the Transaction.",
              "maxLength": 5000,
              "nullable": true,
              "type": "string"
            },
            "flow_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/treasury_transactions_resource_flow_details"
                }
              ],
              "description": "Details of the flow that created the Transaction.",
              "nullable": true
            },
            "flow_type": {
              "description": "Type of the flow that created the Transaction.",
              "enum": [
                "credit_reversal",
                "debit_reversal",
                "inbound_transfer",
                "issuing_authorization",
                "other",
                "outbound_payment",
                "outbound_transfer",
                "received_credit",
                "received_debit"
              ],
              "type": "string"
            },
            "id": {
              "description": "Unique identifier for the object.",
              "maxLength": 5000,
              "type": "string"
            },
            "livemode": {
              "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
              "type": "boolean"
            },
            "object": {
              "description": "String representing the object's type. Objects of the same type share the same value.",
              "enum": [
                "treasury.transaction"
              ],
              "type": "string"
            },
            "status": {
              "description": "Status of the Transaction.",
              "enum": [
                "open",
                "posted",
                "void"
              ],
              "type": "string"
            },
            "status_transitions": {
              "$ref": "#/components/schemas/treasury_transactions_resource_abstract_transaction_resource_status_transitions"
            }
          },
          "required": [
            "amount",
            "balance_impact",
            "created",
            "currency",
            "description",
            "financial_account",
            "flow_type",
            "id",
            "livemode",
            "object",
            "status",
            "status_transitions"
          ],
          "title": "TreasuryTransactionsResourceTransaction",
          "type": "object",
          "x-expandableFields": [
            "balance_impact",
            "entries",
            "flow_details",
            "status_transitions"
          ],
          "x-resourceId": "treasury.transaction"
        }
      ]
    },
    "required": [
      "amount",
      "created",
      "currency",
      "description",
      "id",
      "linked_flows",
      "livemode",
      "network",
      "object",
      "status"
    ],
    "title": "TreasuryReceivedDebitsResourceReceivedDebit",
    "type": "object",
    "x-expandableFields": [
      "initiating_payment_method_details",
      "linked_flows",
      "reversal_details",
      "transaction"
    ],
    "x-resourceId": "treasury.received_debit"
  }
}